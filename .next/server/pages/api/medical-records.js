"use strict";(()=>{var e={};e.id=306,e.ids=[306],e.modules={3524:e=>{e.exports=require("@prisma/client")},8432:e=>{e.exports=require("bcryptjs")},3227:e=>{e.exports=require("next-auth")},2113:e=>{e.exports=require("next-auth/next")},7449:e=>{e.exports=require("next-auth/providers/credentials")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3288:e=>{e.exports=import("@auth/prisma-adapter")},5155:(e,r,t)=>{t.a(e,async(e,a)=>{try{t.r(r),t.d(r,{authOptions:()=>h,default:()=>P});var s=t(3227),n=t.n(s),i=t(3288),o=t(7449),d=t.n(o),l=t(3524),u=t(8432),c=t.n(u),p=e([i]);i=(p.then?(await p)():p)[0];let m=new l.PrismaClient,h={adapter:(0,i.PrismaAdapter)(m),providers:[d()({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Please enter an email and password");let r=await m.user.findUnique({where:{email:e.email}});if(!r)throw Error("No user found with this email");if(!await c().compare(e.password,r.password))throw Error("Invalid password");return{id:r.id,email:r.email,name:r.name,role:r.role}}})],session:{strategy:"jwt"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.role=r.role),e),session:async({session:e,token:r})=>(e.user&&(e.user.role=r.role),e)},pages:{signIn:"/auth/signin"}},P=n()(h);a()}catch(e){a(e)}})},3633:(e,r,t)=>{t.a(e,async(e,a)=>{try{t.r(r),t.d(r,{default:()=>d});var s=t(2113),n=t(5155),i=t(2132),o=e([n]);async function d(e,r){let t=await (0,s.getServerSession)(e,r,n.authOptions);if(!t)return r.status(401).json({error:"Unauthorized"});switch(e.method){case"GET":try{let{patientId:a}=e.query,s=a?{patientId:String(a)}:"PATIENT"===t.user.role?{patientId:t.user.id}:{},n=await i.Z.medicalRecord.findMany({where:s,include:{patient:{select:{name:!0}},doctor:{select:{name:!0}}},orderBy:{createdAt:"desc"}});return r.status(200).json({records:n})}catch(e){return r.status(500).json({error:"Failed to fetch medical records"})}case"POST":try{if("DOCTOR"!==t.user.role)return r.status(403).json({error:"Only doctors can create medical records"});let{patientId:a,title:s,description:n,diagnosis:o,prescription:d,notes:l,bloodPressure:u,heartRate:c,temperature:p,respiratoryRate:m,oxygenSaturation:h,height:P,weight:w}=e.body,f=await i.Z.medicalRecord.create({data:{patientId:a,doctorId:t.user.id,title:s,description:n,diagnosis:o,prescription:d,notes:l,bloodPressure:u,heartRate:c,temperature:p,respiratoryRate:m,oxygenSaturation:h,height:P,weight:w}});return r.status(201).json(f)}catch(e){return r.status(500).json({error:"Failed to create medical record"})}case"PUT":try{if("DOCTOR"!==t.user.role)return r.status(403).json({error:"Only doctors can update medical records"});let{id:a,title:s,description:n,diagnosis:o,prescription:d,notes:l,bloodPressure:u,heartRate:c,temperature:p,respiratoryRate:m,oxygenSaturation:h,height:P,weight:w}=e.body,f=await i.Z.medicalRecord.update({where:{id:a},data:{title:s,description:n,diagnosis:o,prescription:d,notes:l,bloodPressure:u,heartRate:c,temperature:p,respiratoryRate:m,oxygenSaturation:h,height:P,weight:w}});return r.status(200).json(f)}catch(e){return r.status(500).json({error:"Failed to update medical record"})}default:return r.setHeader("Allow",["GET","POST","PUT"]),r.status(405).json({error:`Method ${e.method} Not Allowed`})}}n=(o.then?(await o)():o)[0],a()}catch(e){a(e)}})},2132:(e,r,t)=>{t.d(r,{Z:()=>a});let a=new(t(3524)).PrismaClient},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},7083:(e,r,t)=>{t.a(e,async(e,a)=>{try{t.r(r),t.d(r,{config:()=>u,default:()=>l,routeModule:()=>c});var s=t(1802),n=t(7153),i=t(6249),o=t(3633),d=e([o]);o=(d.then?(await d)():d)[0];let l=(0,i.l)(o,"default"),u=(0,i.l)(o,"config"),c=new s.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/medical-records",pathname:"/api/medical-records",bundlePath:"",filename:""},userland:o});a()}catch(e){a(e)}})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=7083);module.exports=t})();