"use strict";(()=>{var e={};e.id=906,e.ids=[906],e.modules={3524:e=>{e.exports=require("@prisma/client")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},7050:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>l,routeModule:()=>P});var a={};t.r(a),t.d(a,{default:()=>d});var n=t(1802),s=t(7153),i=t(6249),o=t(1649);let u=new(t(3524)).PrismaClient;async function d(e,r){let t=await (0,o.getSession)({req:e});if(!t?.user?.id)return r.status(401).json({error:"Unauthorized"});if("POST"===e.method)try{let{messageIds:a}=e.body;if(!Array.isArray(a)||0===a.length)return r.status(400).json({error:"Invalid message IDs"});await u.message.updateMany({where:{id:{in:a},receiverId:t.user.id,read:!1},data:{read:!0}});let n=await u.message.count({where:{receiverId:t.user.id,read:!1}}),s=global.io;return s&&s.to(t.user.id).emit("unread_count_update",n),r.status(200).json({success:!0,unreadCount:n})}catch(e){return console.error("Error marking messages as read:",e),r.status(500).json({error:"Failed to mark messages as read"})}return r.status(405).json({error:"Method not allowed"})}let l=(0,i.l)(a,"default"),c=(0,i.l)(a,"config"),P=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/messages/read",pathname:"/api/messages/read",bundlePath:"",filename:""},userland:a})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=7050);module.exports=t})();