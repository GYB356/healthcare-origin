"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={3524:e=>{e.exports=require("@prisma/client")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},1012:(e,r,t)=>{t.r(r),t.d(r,{config:()=>f,default:()=>c,routeModule:()=>P});var n={};t.r(n),t.d(n,{default:()=>d});var o=t(1802),a=t(7153),i=t(6249),s=t(1649),u=t(3524);let l=new u.PrismaClient;async function d(e,r){if(!await (0,s.getSession)({req:e}))return r.status(401).json({error:"Unauthorized"});if("GET"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{role:t}=e.query;if(!t||"string"!=typeof t||!Object.values(u.UserRole).includes(t))return r.status(400).json({error:"Invalid role parameter"});let n=await l.user.findMany({where:{role:t},select:{id:!0,name:!0,email:!0,role:!0,image:!0},orderBy:{name:"asc"}});return r.status(200).json(n)}catch(e){return console.error("Error fetching users:",e),r.status(500).json({error:"Internal server error"})}}let c=(0,i.l)(n,"default"),f=(0,i.l)(n,"config"),P=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/users",pathname:"/api/users",bundlePath:"",filename:""},userland:n})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=r(r.s=1012);module.exports=t})();