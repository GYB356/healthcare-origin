"use strict";(()=>{var e={};e.id=792,e.ids=[792],e.modules={3524:e=>{e.exports=require("@prisma/client")},1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},7889:(e,t,r)=>{r.r(t),r.d(t,{config:()=>l,default:()=>c,routeModule:()=>f});var n={};r.r(n),r.d(n,{default:()=>d});var o=r(1802),i=r(7153),a=r(6249),s=r(1649);let u=new(r(3524)).PrismaClient;async function d(e,t){let r=await (0,s.getSession)({req:e});if(!r?.user?.id)return t.status(401).json({error:"Unauthorized"});if("GET"===e.method)try{let e=await u.conversation.findMany({where:{doctorId:r.user.id},include:{patient:{select:{id:!0,name:!0,image:!0}},messages:{orderBy:{createdAt:"asc"},include:{sender:{select:{id:!0,name:!0,image:!0}}}}}});return t.status(200).json(e)}catch(e){return console.error("Error fetching conversations:",e),t.status(500).json({error:"Failed to fetch conversations"})}return t.status(405).json({error:"Method not allowed"})}let c=(0,a.l)(n,"default"),l=(0,a.l)(n,"config"),f=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/conversations/doctor",pathname:"/api/conversations/doctor",bundlePath:"",filename:""},userland:n})},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=7889);module.exports=r})();