e8a49e53afce4b7cd79f24f04c255775
"use strict";

var _vitest = require("vitest");
var _utils = require("@/lib/utils");
(0, _vitest.describe)('cn', () => {
  (0, _vitest.it)('should merge class names correctly', () => {
    (0, _vitest.expect)((0, _utils.cn)('base', 'extra')).toBe('base extra');
    (0, _vitest.expect)((0, _utils.cn)('base', {
      conditional: true
    })).toBe('base conditional');
    (0, _vitest.expect)((0, _utils.cn)('base', {
      conditional: false
    })).toBe('base');
    (0, _vitest.expect)((0, _utils.cn)('base', null, undefined, 'extra')).toBe('base extra');
  });
  (0, _vitest.it)('should handle tailwind conflicts', () => {
    (0, _vitest.expect)((0, _utils.cn)('px-2 py-1', 'p-4')).toBe('p-4');
    (0, _vitest.expect)((0, _utils.cn)('text-sm font-bold', 'text-lg')).toBe('text-lg font-bold');
  });
});
(0, _vitest.describe)('formatDate', () => {
  (0, _vitest.it)('should format dates correctly', () => {
    const date = new Date('2024-03-15');
    (0, _vitest.expect)((0, _utils.formatDate)(date)).toBe('March 15, 2024');
  });
  (0, _vitest.it)('should handle invalid dates', () => {
    (0, _vitest.expect)((0, _utils.formatDate)(new Date('invalid'))).toBe('Invalid Date');
  });
});
(0, _vitest.describe)('formatDateTime', () => {
  (0, _vitest.it)('should format date and time correctly', () => {
    const date = new Date('2024-03-15T14:30:00');
    (0, _vitest.expect)((0, _utils.formatDateTime)(date)).toBe('March 15, 2024, 2:30 PM');
  });
  (0, _vitest.it)('should handle invalid dates', () => {
    (0, _vitest.expect)((0, _utils.formatDateTime)(new Date('invalid'))).toBe('Invalid Date');
  });
});
(0, _vitest.describe)('formatFileSize', () => {
  (0, _vitest.it)('should format bytes correctly', () => {
    (0, _vitest.expect)((0, _utils.formatFileSize)(0)).toBe('0 B');
    (0, _vitest.expect)((0, _utils.formatFileSize)(1024)).toBe('1.0 KB');
    (0, _vitest.expect)((0, _utils.formatFileSize)(1024 * 1024)).toBe('1.0 MB');
    (0, _vitest.expect)((0, _utils.formatFileSize)(1024 * 1024 * 1024)).toBe('1.0 GB');
  });
  (0, _vitest.it)('should handle decimal places correctly', () => {
    (0, _vitest.expect)((0, _utils.formatFileSize)(1536)).toBe('1.5 KB');
    (0, _vitest.expect)((0, _utils.formatFileSize)(1600)).toBe('1.6 KB');
  });
  (0, _vitest.it)('should handle invalid input', () => {
    (0, _vitest.expect)((0, _utils.formatFileSize)(-1)).toBe('0 B');
    (0, _vitest.expect)((0, _utils.formatFileSize)(NaN)).toBe('0 B');
  });
});
(0, _vitest.describe)('getInitials', () => {
  (0, _vitest.it)('should get initials from full name', () => {
    (0, _vitest.expect)((0, _utils.getInitials)('John Doe')).toBe('JD');
    (0, _vitest.expect)((0, _utils.getInitials)('Alice Bob Charlie')).toBe('ABC');
  });
  (0, _vitest.it)('should handle single word names', () => {
    (0, _vitest.expect)((0, _utils.getInitials)('John')).toBe('J');
  });
  (0, _vitest.it)('should handle empty strings', () => {
    (0, _vitest.expect)((0, _utils.getInitials)('')).toBe('');
  });
  (0, _vitest.it)('should handle whitespace', () => {
    (0, _vitest.expect)((0, _utils.getInitials)('   John   Doe   ')).toBe('JD');
  });
  (0, _vitest.it)('should handle special characters', () => {
    (0, _vitest.expect)((0, _utils.getInitials)('Jean-Pierre Dubois')).toBe('JD');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,