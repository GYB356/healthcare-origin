067a118313b0d9e559dbec211dfff31e
/* istanbul ignore next */
function cov_2bml4c20m5() {
  var path = "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\mongodb.setup.js";
  var hash = "4814765e0530f04b4a3f379bd94e67047a8df12f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\mongodb.setup.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 30
        },
        end: {
          line: 1,
          column: 62
        }
      },
      "1": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 2,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 17
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "4": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "5": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "9": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "12": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 80
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "15": {
        start: {
          line: 31,
          column: 10
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 94
        }
      },
      "19": {
        start: {
          line: 37,
          column: 10
        },
        end: {
          line: 37,
          column: 24
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "21": {
        start: {
          line: 42,
          column: 10
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "22": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "23": {
        start: {
          line: 56,
          column: 10
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "24": {
        start: {
          line: 58,
          column: 10
        },
        end: {
          line: 58,
          column: 112
        }
      },
      "25": {
        start: {
          line: 59,
          column: 10
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "26": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "27": {
        start: {
          line: 64,
          column: 10
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "28": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "29": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 62
        }
      },
      "30": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 86
        }
      },
      "31": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "32": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "33": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 57
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "35": {
        start: {
          line: 86,
          column: 10
        },
        end: {
          line: 86,
          column: 56
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "38": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "39": {
        start: {
          line: 96,
          column: 10
        },
        end: {
          line: 96,
          column: 102
        }
      },
      "40": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 100,
          column: 73
        }
      },
      "41": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "42": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "43": {
        start: {
          line: 102,
          column: 37
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "44": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "45": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "46": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 168,
          column: 1
        }
      },
      "47": {
        start: {
          line: 117,
          column: 2
        },
        end: {
          line: 167,
          column: 3
        }
      },
      "48": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "49": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 92
        }
      },
      "50": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "51": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 83
        }
      },
      "52": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "53": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 70
        }
      },
      "54": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 130,
          column: 58
        }
      },
      "55": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "56": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "57": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "58": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 68
        }
      },
      "59": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 44
        }
      },
      "60": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 145,
          column: 47
        }
      },
      "61": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "62": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "63": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 51
        }
      },
      "64": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 20
        }
      },
      "65": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 51
        }
      },
      "66": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "67": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "68": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 49
        }
      },
      "69": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "70": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 20
        }
      },
      "71": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "72": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "73": {
        start: {
          line: 174,
          column: 2
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "74": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "75": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 86
        }
      },
      "76": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 22
        }
      },
      "77": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 55
        }
      },
      "78": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 28
        }
      },
      "79": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "80": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 58
        }
      },
      "81": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 37
        }
      },
      "82": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 51
        }
      },
      "83": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 52
        }
      },
      "84": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "85": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 28
        }
      },
      "86": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "87": {
        start: {
          line: 197,
          column: 26
        },
        end: {
          line: 197,
          column: 57
        }
      },
      "88": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 200,
          column: 7
        }
      },
      "89": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 46
        }
      },
      "90": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 73
        }
      },
      "91": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 78
        }
      },
      "92": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 23
        }
      },
      "93": {
        start: {
          line: 213,
          column: 21
        },
        end: {
          line: 262,
          column: 1
        }
      },
      "94": {
        start: {
          line: 214,
          column: 2
        },
        end: {
          line: 261,
          column: 3
        }
      },
      "95": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "96": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 85
        }
      },
      "97": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 22
        }
      },
      "98": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "99": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 70
        }
      },
      "100": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "101": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 54
        }
      },
      "102": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "103": {
        start: {
          line: 231,
          column: 6
        },
        end: {
          line: 234,
          column: 7
        }
      },
      "104": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "105": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "106": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 45
        }
      },
      "107": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "108": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 42
        }
      },
      "109": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 80
        }
      },
      "110": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "111": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "112": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 46
        }
      },
      "113": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 52
        }
      },
      "114": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "115": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 28
        }
      },
      "116": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "117": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 256,
          column: 32
        }
      },
      "118": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 258,
          column: 78
        }
      },
      "119": {
        start: {
          line: 259,
          column: 6
        },
        end: {
          line: 259,
          column: 23
        }
      },
      "120": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 325,
          column: 1
        }
      },
      "121": {
        start: {
          line: 268,
          column: 2
        },
        end: {
          line: 324,
          column: 3
        }
      },
      "122": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "123": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "124": {
        start: {
          line: 273,
          column: 31
        },
        end: {
          line: 273,
          column: 97
        }
      },
      "125": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "126": {
        start: {
          line: 276,
          column: 10
        },
        end: {
          line: 276,
          column: 99
        }
      },
      "127": {
        start: {
          line: 279,
          column: 10
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "128": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "129": {
        start: {
          line: 283,
          column: 14
        },
        end: {
          line: 293,
          column: 15
        }
      },
      "130": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 292,
          column: 17
        }
      },
      "131": {
        start: {
          line: 286,
          column: 18
        },
        end: {
          line: 289,
          column: 19
        }
      },
      "132": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 41
        }
      },
      "133": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 305,
          column: 26
        }
      },
      "134": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "135": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 18
        }
      },
      "136": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 54
        }
      },
      "137": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "138": {
        start: {
          line: 316,
          column: 6
        },
        end: {
          line: 319,
          column: 7
        }
      },
      "139": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "140": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 36
        }
      },
      "141": {
        start: {
          line: 320,
          column: 6
        },
        end: {
          line: 320,
          column: 20
        }
      },
      "142": {
        start: {
          line: 328,
          column: 0
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "143": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 56
        }
      },
      "144": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 50
        }
      },
      "145": {
        start: {
          line: 337,
          column: 0
        },
        end: {
          line: 339,
          column: 3
        }
      },
      "146": {
        start: {
          line: 338,
          column: 2
        },
        end: {
          line: 338,
          column: 24
        }
      },
      "147": {
        start: {
          line: 342,
          column: 0
        },
        end: {
          line: 348,
          column: 2
        }
      },
      "148": {
        start: {
          line: 350,
          column: 0
        },
        end: {
          line: 357,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 17
          }
        },
        loc: {
          start: {
            line: 11,
            column: 39
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 21
          }
        },
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 105,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 85,
            column: 41
          }
        },
        loc: {
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 87,
            column: 9
          }
        },
        line: 85
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 27
          }
        },
        loc: {
          start: {
            line: 102,
            column: 37
          },
          end: {
            line: 102,
            column: 66
          }
        },
        line: 102
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 16
          }
        },
        loc: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 105
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 116,
            column: 23
          }
        },
        loc: {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 116
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 128,
            column: 22
          },
          end: {
            line: 128,
            column: 23
          }
        },
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 128,
            column: 70
          }
        },
        line: 128
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 130,
            column: 22
          },
          end: {
            line: 130,
            column: 23
          }
        },
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 58
          }
        },
        line: 130
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 173,
            column: 23
          }
        },
        loc: {
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 173
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 213,
            column: 21
          },
          end: {
            line: 213,
            column: 22
          }
        },
        loc: {
          start: {
            line: 213,
            column: 42
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 213
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 23
          }
        },
        loc: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 267
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        loc: {
          start: {
            line: 329,
            column: 14
          },
          end: {
            line: 331,
            column: 3
          }
        },
        line: 329
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 332,
            column: 9
          },
          end: {
            line: 332,
            column: 10
          }
        },
        loc: {
          start: {
            line: 332,
            column: 18
          },
          end: {
            line: 334,
            column: 3
          }
        },
        line: 332
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 10
          }
        },
        loc: {
          start: {
            line: 337,
            column: 21
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 337
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 11,
            column: 34
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 41
          }
        }, {
          start: {
            line: 27,
            column: 45
          },
          end: {
            line: 27,
            column: 80
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 87
          }
        }, {
          start: {
            line: 122,
            column: 91
          },
          end: {
            line: 122,
            column: 92
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "10": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "13": {
        loc: {
          start: {
            line: 213,
            column: 28
          },
          end: {
            line: 213,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 213,
            column: 35
          },
          end: {
            line: 213,
            column: 37
          }
        }],
        line: 213
      },
      "14": {
        loc: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "17": {
        loc: {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 245,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 245,
            column: 7
          }
        }, {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 245,
            column: 7
          }
        }],
        line: 239
      },
      "18": {
        loc: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "19": {
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 92
          }
        }, {
          start: {
            line: 273,
            column: 96
          },
          end: {
            line: 273,
            column: 97
          }
        }],
        line: 273
      },
      "20": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "21": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "22": {
        loc: {
          start: {
            line: 286,
            column: 18
          },
          end: {
            line: 289,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 18
          },
          end: {
            line: 289,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "23": {
        loc: {
          start: {
            line: 286,
            column: 22
          },
          end: {
            line: 286,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 22
          },
          end: {
            line: 286,
            column: 29
          }
        }, {
          start: {
            line: 286,
            column: 33
          },
          end: {
            line: 286,
            column: 73
          }
        }],
        line: 286
      },
      "24": {
        loc: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "25": {
        loc: {
          start: {
            line: 316,
            column: 6
          },
          end: {
            line: 319,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 6
          },
          end: {
            line: 319,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4814765e0530f04b4a3f379bd94e67047a8df12f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bml4c20m5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bml4c20m5();
const {
  MongoMemoryServer
} =
/* istanbul ignore next */
(cov_2bml4c20m5().s[0]++, require('mongodb-memory-server'));
const mongoose =
/* istanbul ignore next */
(cov_2bml4c20m5().s[1]++, require('mongoose'));
let mongod =
/* istanbul ignore next */
(cov_2bml4c20m5().s[2]++, null);
let connectPromise =
/* istanbul ignore next */
(cov_2bml4c20m5().s[3]++, null);

/**
 * Connect to the in-memory database with retry logic
 * @param {number} retries - Number of retry attempts
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[4]++;
const connect = async (retries =
/* istanbul ignore next */
(cov_2bml4c20m5().b[0][0]++, 3)) => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[0]++;
  cov_2bml4c20m5().s[5]++;
  // If we already have a connection promise, return it
  if (connectPromise) {
    /* istanbul ignore next */
    cov_2bml4c20m5().b[1][0]++;
    cov_2bml4c20m5().s[6]++;
    return connectPromise;
  } else
  /* istanbul ignore next */
  {
    cov_2bml4c20m5().b[1][1]++;
  }

  // If we're already connected, just return
  cov_2bml4c20m5().s[7]++;
  if (mongoose.connection.readyState === 1) {
    /* istanbul ignore next */
    cov_2bml4c20m5().b[2][0]++;
    cov_2bml4c20m5().s[8]++;
    return Promise.resolve();
  } else
  /* istanbul ignore next */
  {
    cov_2bml4c20m5().b[2][1]++;
  }

  // Create a new connection promise
  cov_2bml4c20m5().s[9]++;
  connectPromise = (async () => {
    /* istanbul ignore next */
    cov_2bml4c20m5().f[1]++;
    cov_2bml4c20m5().s[10]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[11]++, 1); attempt <= retries; attempt++) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[12]++;
      try {
        // Fallback URI in case mongo memory server fails
        let uri =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[13]++,
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[3][0]++, process.env.MONGODB_URI) ||
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[3][1]++, 'mongodb://localhost:27017/test-db'));

        // Stop any existing MongoDB instance
        /* istanbul ignore next */
        cov_2bml4c20m5().s[14]++;
        if (mongod) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[4][0]++;
          cov_2bml4c20m5().s[15]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[16]++;
            await mongod.stop();
            /* istanbul ignore next */
            cov_2bml4c20m5().s[17]++;
            console.log('Stopped existing MongoDB Memory Server');
          } catch (stopError) {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[18]++;
            console.warn('Error stopping existing MongoDB Memory Server:', stopError.message);
          }
          /* istanbul ignore next */
          cov_2bml4c20m5().s[19]++;
          mongod = null;
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[4][1]++;
        }
        cov_2bml4c20m5().s[20]++;
        try {
          /* istanbul ignore next */
          cov_2bml4c20m5().s[21]++;
          // Try to use mongo memory server
          mongod = await MongoMemoryServer.create({
            instance: {
              dbName: 'jest-test-db',
              port: 27017,
              // Using random port to avoid conflicts
              port: 27017 + Math.floor(Math.random() * 1000)
            },
            binary: {
              version: '6.0.4',
              downloadDir: './.cache/mongodb-memory-server/mongodb-binaries'
            }
          });
          /* istanbul ignore next */
          cov_2bml4c20m5().s[22]++;
          uri = mongod.getUri();
          /* istanbul ignore next */
          cov_2bml4c20m5().s[23]++;
          console.log(`Using MongoDB Memory Server (attempt ${attempt}):`, uri);
        } catch (error) {
          /* istanbul ignore next */
          cov_2bml4c20m5().s[24]++;
          console.warn(`Failed to create MongoDB Memory Server (attempt ${attempt}), using fallback URI:`, uri);
          /* istanbul ignore next */
          cov_2bml4c20m5().s[25]++;
          console.error(error);
        }

        // Close any existing connections
        /* istanbul ignore next */
        cov_2bml4c20m5().s[26]++;
        if (mongoose.connection.readyState !== 0) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[5][0]++;
          cov_2bml4c20m5().s[27]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[28]++;
            await mongoose.connection.close();
            /* istanbul ignore next */
            cov_2bml4c20m5().s[29]++;
            console.log('Closed existing MongoDB connection');
          } catch (error) {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[30]++;
            console.warn('Error closing existing MongoDB connection:', error.message);
          }
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[5][1]++;
        }

        // Set connection options
        const mongooseOpts =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[31]++, {
          maxPoolSize: 10,
          serverSelectionTimeoutMS: 30000,
          // 30 seconds
          socketTimeoutMS: 45000,
          // 45 seconds
          connectTimeoutMS: 30000 // 30 seconds
        });

        // Connect to database
        /* istanbul ignore next */
        cov_2bml4c20m5().s[32]++;
        await mongoose.connect(uri, mongooseOpts);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[33]++;
        console.log('Connected to MongoDB successfully');

        // Setup connection event handlers
        /* istanbul ignore next */
        cov_2bml4c20m5().s[34]++;
        mongoose.connection.on('error', e => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[2]++;
          cov_2bml4c20m5().s[35]++;
          console.error('MongoDB connection error:', e);
        });

        // Connection successful, return
        /* istanbul ignore next */
        cov_2bml4c20m5().s[36]++;
        return;
      } catch (error) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[37]++;
        console.error(`MongoDB setup error on attempt ${attempt}:`, error);

        // If this was the last retry, throw the error
        /* istanbul ignore next */
        cov_2bml4c20m5().s[38]++;
        if (attempt === retries) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[6][0]++;
          cov_2bml4c20m5().s[39]++;
          throw new Error(`Failed to connect to MongoDB after ${retries} attempts: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[6][1]++;
        }

        // Wait before retrying (exponential backoff)
        const waitTime =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[40]++, Math.min(1000 * Math.pow(2, attempt - 1), 10000));
        /* istanbul ignore next */
        cov_2bml4c20m5().s[41]++;
        console.log(`Waiting ${waitTime}ms before retry...`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[42]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[3]++;
          cov_2bml4c20m5().s[43]++;
          return setTimeout(resolve, waitTime);
        });
      }
    }
  })().finally(() => {
    /* istanbul ignore next */
    cov_2bml4c20m5().f[4]++;
    cov_2bml4c20m5().s[44]++;
    // Reset the promise once resolved
    connectPromise = null;
  });
  /* istanbul ignore next */
  cov_2bml4c20m5().s[45]++;
  return connectPromise;
};

/**
 * Drop database, close the connection and stop mongod.
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[46]++;
const closeDatabase = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[5]++;
  cov_2bml4c20m5().s[47]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[48]++;
    // Check for pending operations before closing
    try {
      // Using internal Mongoose properties carefully
      // @ts-ignore
      const pendingOps =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[49]++,
      /* istanbul ignore next */
      (cov_2bml4c20m5().b[7][0]++, mongoose.connection.db?.s?.topology?.outstandingOperationCount) ||
      /* istanbul ignore next */
      (cov_2bml4c20m5().b[7][1]++, 0));
      /* istanbul ignore next */
      cov_2bml4c20m5().s[50]++;
      if (pendingOps > 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[8][0]++;
        cov_2bml4c20m5().s[51]++;
        console.log(`Waiting for ${pendingOps} pending operations to complete...`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[52]++;
        await Promise.race([
        // Wait for operations to complete
        new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[6]++;
          cov_2bml4c20m5().s[53]++;
          return setTimeout(resolve, pendingOps * 100);
        }),
        // Max timeout of 5 seconds
        new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[7]++;
          cov_2bml4c20m5().s[54]++;
          return setTimeout(resolve, 5000);
        })]);
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[8][1]++;
      }
    } catch (e) {
      // Ignore errors when checking pending operations
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[55]++;
    if (mongoose.connection.readyState !== 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[9][0]++;
      cov_2bml4c20m5().s[56]++;
      try {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[57]++;
        await mongoose.connection.dropDatabase();
      } catch (dropError) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[58]++;
        console.warn('Error dropping database:', dropError.message);
      }
      /* istanbul ignore next */
      cov_2bml4c20m5().s[59]++;
      await mongoose.connection.close(true); // Force close
      /* istanbul ignore next */
      cov_2bml4c20m5().s[60]++;
      console.log('Closed MongoDB connection');
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[9][1]++;
    }
    cov_2bml4c20m5().s[61]++;
    if (mongod) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[10][0]++;
      cov_2bml4c20m5().s[62]++;
      await mongod.stop({
        doCleanup: true,
        force: true
      });
      /* istanbul ignore next */
      cov_2bml4c20m5().s[63]++;
      console.log('Stopped MongoDB Memory Server');
      /* istanbul ignore next */
      cov_2bml4c20m5().s[64]++;
      mongod = null;
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[10][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[65]++;
    console.error('Error closing MongoDB:', error);

    // Force cleanup in case of error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[66]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[67]++;
      if (mongoose.connection.readyState !== 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[11][0]++;
        cov_2bml4c20m5().s[68]++;
        mongoose.connection.removeAllListeners();
        /* istanbul ignore next */
        cov_2bml4c20m5().s[69]++;
        await mongoose.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[11][1]++;
      }
      cov_2bml4c20m5().s[70]++;
      mongod = null;
    } catch (finalError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[71]++;
      console.error('Final error during MongoDB cleanup:', finalError);
    }
  }
};

/**
 * Clear all collections in the database.
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[72]++;
const clearDatabase = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[8]++;
  cov_2bml4c20m5().s[73]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[74]++;
    if (mongoose.connection.readyState !== 1) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[12][0]++;
      cov_2bml4c20m5().s[75]++;
      console.warn('MongoDB not connected, attempting to connect before clearing...');
      /* istanbul ignore next */
      cov_2bml4c20m5().s[76]++;
      await connect();
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[12][1]++;
    }
    const collections =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[77]++, mongoose.connection.collections);
    const clearPromises =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[78]++, []);
    /* istanbul ignore next */
    cov_2bml4c20m5().s[79]++;
    for (const key in collections) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[80]++;
      clearPromises.push(collections[key].deleteMany({}));
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[81]++;
    await Promise.all(clearPromises);
    /* istanbul ignore next */
    cov_2bml4c20m5().s[82]++;
    console.log('Cleared all MongoDB collections');
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[83]++;
    console.error('Error clearing MongoDB:', error);

    // Try to reconnect and clear if there was an error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[84]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[85]++;
      await closeDatabase();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[86]++;
      await connect();
      const collections =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[87]++, mongoose.connection.collections);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[88]++;
      for (const key in collections) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[89]++;
        await collections[key].deleteMany({});
      }
      /* istanbul ignore next */
      cov_2bml4c20m5().s[90]++;
      console.log('Successfully cleared collections after reconnection');
    } catch (retryError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[91]++;
      console.error('Error clearing MongoDB after reconnection:', retryError);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[92]++;
      throw retryError;
    }
  }
};

/**
 * Seed the database with test data
 * @param {Object} data - The data to seed
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[93]++;
const seedDatabase = async (data =
/* istanbul ignore next */
(cov_2bml4c20m5().b[13][0]++, {})) => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[9]++;
  cov_2bml4c20m5().s[94]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[95]++;
    if (mongoose.connection.readyState !== 1) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[14][0]++;
      cov_2bml4c20m5().s[96]++;
      console.warn('MongoDB not connected, attempting to connect before seeding...');
      /* istanbul ignore next */
      cov_2bml4c20m5().s[97]++;
      await connect();
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[14][1]++;
    }

    // Only attempt to seed if we have data
    cov_2bml4c20m5().s[98]++;
    if (Object.keys(data).length === 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[15][0]++;
      cov_2bml4c20m5().s[99]++;
      console.log('No seed data provided, skipping database seeding');
      /* istanbul ignore next */
      cov_2bml4c20m5().s[100]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[15][1]++;
    }
    cov_2bml4c20m5().s[101]++;
    console.log('Seeding database with test data...');

    // Process each collection in the data object
    /* istanbul ignore next */
    cov_2bml4c20m5().s[102]++;
    for (const [modelName, documents] of Object.entries(data)) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[103]++;
      // Skip if model doesn't exist
      if (!mongoose.models[modelName]) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[16][0]++;
        cov_2bml4c20m5().s[104]++;
        console.warn(`Model ${modelName} not found, skipping`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[105]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[16][1]++;
      }
      const model =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[106]++, mongoose.model(modelName));

      // Insert many documents or a single one
      /* istanbul ignore next */
      cov_2bml4c20m5().s[107]++;
      if (Array.isArray(documents)) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[17][0]++;
        cov_2bml4c20m5().s[108]++;
        await model.insertMany(documents);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[109]++;
        console.log(`Inserted ${documents.length} documents into ${modelName}`);
      } else {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[17][1]++;
        cov_2bml4c20m5().s[110]++;
        await model.create(documents);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[111]++;
        console.log(`Inserted 1 document into ${modelName}`);
      }
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[112]++;
    console.log('Database seeding completed');
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[113]++;
    console.error('Error seeding database:', error);

    // Try to reconnect and seed if there was an error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[114]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[115]++;
      await closeDatabase();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[116]++;
      await connect();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[117]++;
      return seedDatabase(data); // Retry once
    } catch (retryError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[118]++;
      console.error('Error seeding database after reconnection:', retryError);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[119]++;
      throw retryError;
    }
  }
};

/**
 * Check for and cleanup any leaked connections
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[120]++;
const checkForLeaks = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[10]++;
  cov_2bml4c20m5().s[121]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[122]++;
    if (mongoose.connection.readyState !== 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[18][0]++;
      cov_2bml4c20m5().s[123]++;
      // Check for pending operations
      try {
        // @ts-ignore - Access internal properties
        const pendingQueries =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[124]++,
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[19][0]++, mongoose.connection.db?.s?.topology?.s?.state?.operationCount) ||
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[19][1]++, 0));
        /* istanbul ignore next */
        cov_2bml4c20m5().s[125]++;
        if (pendingQueries > 0) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[20][0]++;
          cov_2bml4c20m5().s[126]++;
          console.warn(`⚠️ Detected ${pendingQueries} pending database operations before cleanup`);

          // Force cleanup of sessions if possible
          /* istanbul ignore next */
          cov_2bml4c20m5().s[127]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[128]++;
            // @ts-ignore - Access internal properties
            if (mongoose.connection.db?.s?.topology?.s?.sessions) {
              /* istanbul ignore next */
              cov_2bml4c20m5().b[21][0]++;
              cov_2bml4c20m5().s[129]++;
              // @ts-ignore - Access internal properties
              for (const session of Object.values(mongoose.connection.db.s.topology.s.sessions)) {
                /* istanbul ignore next */
                cov_2bml4c20m5().s[130]++;
                try {
                  /* istanbul ignore next */
                  cov_2bml4c20m5().s[131]++;
                  // @ts-ignore - Access internal session to force end it
                  if (
                  /* istanbul ignore next */
                  (cov_2bml4c20m5().b[23][0]++, session) &&
                  /* istanbul ignore next */
                  (cov_2bml4c20m5().b[23][1]++, typeof session.endSession === 'function')) {
                    /* istanbul ignore next */
                    cov_2bml4c20m5().b[22][0]++;
                    cov_2bml4c20m5().s[132]++;
                    // @ts-ignore
                    session.endSession();
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2bml4c20m5().b[22][1]++;
                  }
                } catch (e) {
                  // Ignore session errors
                }
              }
            } else
            /* istanbul ignore next */
            {
              cov_2bml4c20m5().b[21][1]++;
            }
          } catch (e) {
            // Ignore session cleanup errors
          }
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[20][1]++;
        }
      } catch (e) {
        // Ignore errors checking for leaks
      }
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[18][1]++;
    }

    // Ensure clean disconnect
    cov_2bml4c20m5().s[133]++;
    await closeDatabase();

    // Extra cleanup for memory management
    /* istanbul ignore next */
    cov_2bml4c20m5().s[134]++;
    if (global.gc) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[24][0]++;
      cov_2bml4c20m5().s[135]++;
      global.gc(); // Force garbage collection if available
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[24][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[136]++;
    console.error('Error checking for leaks:', error);

    // Force final cleanup
    /* istanbul ignore next */
    cov_2bml4c20m5().s[137]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[138]++;
      if (mongoose.connection.readyState !== 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[25][0]++;
        cov_2bml4c20m5().s[139]++;
        mongoose.connection.removeAllListeners();
        /* istanbul ignore next */
        cov_2bml4c20m5().s[140]++;
        await mongoose.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[25][1]++;
      }
      cov_2bml4c20m5().s[141]++;
      mongod = null;
    } catch (e) {
      // Ignore final cleanup errors
    }
  }
};

// Connect to database before tests start
/* istanbul ignore next */
cov_2bml4c20m5().s[142]++;
connect().then(() => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[11]++;
  cov_2bml4c20m5().s[143]++;
  console.log('MongoDB setup completed successfully');
}).catch(error => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[12]++;
  cov_2bml4c20m5().s[144]++;
  console.error('MongoDB setup failed:', error);
});

// Close database connection after tests finish
/* istanbul ignore next */
cov_2bml4c20m5().s[145]++;
afterAll(async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[13]++;
  cov_2bml4c20m5().s[146]++;
  await checkForLeaks();
});

// Make helpers available globally
/* istanbul ignore next */
cov_2bml4c20m5().s[147]++;
global.mongoTestUtils = {
  connect,
  closeDatabase,
  clearDatabase,
  seedDatabase,
  checkForLeaks
};
/* istanbul ignore next */
cov_2bml4c20m5().s[148]++;
module.exports = {
  connect,
  closeDatabase,
  clearDatabase,
  seedDatabase,
  checkForLeaks,
  mongod
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmJtbDRjMjBtNSIsImFjdHVhbENvdmVyYWdlIiwiTW9uZ29NZW1vcnlTZXJ2ZXIiLCJzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwibW9uZ29kIiwiY29ubmVjdFByb21pc2UiLCJjb25uZWN0IiwicmV0cmllcyIsImIiLCJmIiwiY29ubmVjdGlvbiIsInJlYWR5U3RhdGUiLCJQcm9taXNlIiwicmVzb2x2ZSIsImF0dGVtcHQiLCJ1cmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJzdG9wIiwiY29uc29sZSIsImxvZyIsInN0b3BFcnJvciIsIndhcm4iLCJtZXNzYWdlIiwiY3JlYXRlIiwiaW5zdGFuY2UiLCJkYk5hbWUiLCJwb3J0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYmluYXJ5IiwidmVyc2lvbiIsImRvd25sb2FkRGlyIiwiZ2V0VXJpIiwiZXJyb3IiLCJjbG9zZSIsIm1vbmdvb3NlT3B0cyIsIm1heFBvb2xTaXplIiwic2VydmVyU2VsZWN0aW9uVGltZW91dE1TIiwic29ja2V0VGltZW91dE1TIiwiY29ubmVjdFRpbWVvdXRNUyIsIm9uIiwiZSIsIkVycm9yIiwid2FpdFRpbWUiLCJtaW4iLCJwb3ciLCJzZXRUaW1lb3V0IiwiZmluYWxseSIsImNsb3NlRGF0YWJhc2UiLCJwZW5kaW5nT3BzIiwiZGIiLCJ0b3BvbG9neSIsIm91dHN0YW5kaW5nT3BlcmF0aW9uQ291bnQiLCJyYWNlIiwiZHJvcERhdGFiYXNlIiwiZHJvcEVycm9yIiwiZG9DbGVhbnVwIiwiZm9yY2UiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJkaXNjb25uZWN0IiwiZmluYWxFcnJvciIsImNsZWFyRGF0YWJhc2UiLCJjb2xsZWN0aW9ucyIsImNsZWFyUHJvbWlzZXMiLCJrZXkiLCJwdXNoIiwiZGVsZXRlTWFueSIsImFsbCIsInJldHJ5RXJyb3IiLCJzZWVkRGF0YWJhc2UiLCJkYXRhIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsIm1vZGVsTmFtZSIsImRvY3VtZW50cyIsImVudHJpZXMiLCJtb2RlbHMiLCJtb2RlbCIsIkFycmF5IiwiaXNBcnJheSIsImluc2VydE1hbnkiLCJjaGVja0ZvckxlYWtzIiwicGVuZGluZ1F1ZXJpZXMiLCJzdGF0ZSIsIm9wZXJhdGlvbkNvdW50Iiwic2Vzc2lvbnMiLCJzZXNzaW9uIiwidmFsdWVzIiwiZW5kU2Vzc2lvbiIsImdsb2JhbCIsImdjIiwidGhlbiIsImNhdGNoIiwiYWZ0ZXJBbGwiLCJtb25nb1Rlc3RVdGlscyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJtb25nb2RiLnNldHVwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTW9uZ29NZW1vcnlTZXJ2ZXIgfSA9IHJlcXVpcmUoJ21vbmdvZGItbWVtb3J5LXNlcnZlcicpO1xyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5sZXQgbW9uZ29kID0gbnVsbDtcclxubGV0IGNvbm5lY3RQcm9taXNlID0gbnVsbDtcclxuXHJcbi8qKlxyXG4gKiBDb25uZWN0IHRvIHRoZSBpbi1tZW1vcnkgZGF0YWJhc2Ugd2l0aCByZXRyeSBsb2dpY1xyXG4gKiBAcGFyYW0ge251bWJlcn0gcmV0cmllcyAtIE51bWJlciBvZiByZXRyeSBhdHRlbXB0c1xyXG4gKi9cclxuY29uc3QgY29ubmVjdCA9IGFzeW5jIChyZXRyaWVzID0gMykgPT4ge1xyXG4gIC8vIElmIHdlIGFscmVhZHkgaGF2ZSBhIGNvbm5lY3Rpb24gcHJvbWlzZSwgcmV0dXJuIGl0XHJcbiAgaWYgKGNvbm5lY3RQcm9taXNlKSB7XHJcbiAgICByZXR1cm4gY29ubmVjdFByb21pc2U7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIElmIHdlJ3JlIGFscmVhZHkgY29ubmVjdGVkLCBqdXN0IHJldHVyblxyXG4gIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgPT09IDEpIHtcclxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcclxuICB9XHJcbiAgXHJcbiAgLy8gQ3JlYXRlIGEgbmV3IGNvbm5lY3Rpb24gcHJvbWlzZVxyXG4gIGNvbm5lY3RQcm9taXNlID0gKGFzeW5jICgpID0+IHtcclxuICAgIGZvciAobGV0IGF0dGVtcHQgPSAxOyBhdHRlbXB0IDw9IHJldHJpZXM7IGF0dGVtcHQrKykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIC8vIEZhbGxiYWNrIFVSSSBpbiBjYXNlIG1vbmdvIG1lbW9yeSBzZXJ2ZXIgZmFpbHNcclxuICAgICAgICBsZXQgdXJpID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgfHwgJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcvdGVzdC1kYic7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gU3RvcCBhbnkgZXhpc3RpbmcgTW9uZ29EQiBpbnN0YW5jZVxyXG4gICAgICAgIGlmIChtb25nb2QpIHtcclxuICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGF3YWl0IG1vbmdvZC5zdG9wKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdTdG9wcGVkIGV4aXN0aW5nIE1vbmdvREIgTWVtb3J5IFNlcnZlcicpO1xyXG4gICAgICAgICAgfSBjYXRjaCAoc3RvcEVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3Igc3RvcHBpbmcgZXhpc3RpbmcgTW9uZ29EQiBNZW1vcnkgU2VydmVyOicsIHN0b3BFcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIG1vbmdvZCA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAvLyBUcnkgdG8gdXNlIG1vbmdvIG1lbW9yeSBzZXJ2ZXJcclxuICAgICAgICAgIG1vbmdvZCA9IGF3YWl0IE1vbmdvTWVtb3J5U2VydmVyLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIGluc3RhbmNlOiB7XHJcbiAgICAgICAgICAgICAgZGJOYW1lOiAnamVzdC10ZXN0LWRiJyxcclxuICAgICAgICAgICAgICBwb3J0OiAyNzAxNyxcclxuICAgICAgICAgICAgICAvLyBVc2luZyByYW5kb20gcG9ydCB0byBhdm9pZCBjb25mbGljdHNcclxuICAgICAgICAgICAgICBwb3J0OiAyNzAxNyArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBiaW5hcnk6IHtcclxuICAgICAgICAgICAgICB2ZXJzaW9uOiAnNi4wLjQnLFxyXG4gICAgICAgICAgICAgIGRvd25sb2FkRGlyOiAnLi8uY2FjaGUvbW9uZ29kYi1tZW1vcnktc2VydmVyL21vbmdvZGItYmluYXJpZXMnXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICB1cmkgPSBtb25nb2QuZ2V0VXJpKCk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgVXNpbmcgTW9uZ29EQiBNZW1vcnkgU2VydmVyIChhdHRlbXB0ICR7YXR0ZW1wdH0pOmAsIHVyaSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIGNyZWF0ZSBNb25nb0RCIE1lbW9yeSBTZXJ2ZXIgKGF0dGVtcHQgJHthdHRlbXB0fSksIHVzaW5nIGZhbGxiYWNrIFVSSTpgLCB1cmkpO1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBDbG9zZSBhbnkgZXhpc3RpbmcgY29ubmVjdGlvbnNcclxuICAgICAgICBpZiAobW9uZ29vc2UuY29ubmVjdGlvbi5yZWFkeVN0YXRlICE9PSAwKSB7XHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0aW9uLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDbG9zZWQgZXhpc3RpbmcgTW9uZ29EQiBjb25uZWN0aW9uJyk7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIGNsb3NpbmcgZXhpc3RpbmcgTW9uZ29EQiBjb25uZWN0aW9uOicsIGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gU2V0IGNvbm5lY3Rpb24gb3B0aW9uc1xyXG4gICAgICAgIGNvbnN0IG1vbmdvb3NlT3B0cyA9IHtcclxuICAgICAgICAgIG1heFBvb2xTaXplOiAxMCxcclxuICAgICAgICAgIHNlcnZlclNlbGVjdGlvblRpbWVvdXRNUzogMzAwMDAsIC8vIDMwIHNlY29uZHNcclxuICAgICAgICAgIHNvY2tldFRpbWVvdXRNUzogNDUwMDAsIC8vIDQ1IHNlY29uZHNcclxuICAgICAgICAgIGNvbm5lY3RUaW1lb3V0TVM6IDMwMDAwLCAvLyAzMCBzZWNvbmRzXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgLy8gQ29ubmVjdCB0byBkYXRhYmFzZVxyXG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QodXJpLCBtb25nb29zZU9wdHMpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQiBzdWNjZXNzZnVsbHknKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBTZXR1cCBjb25uZWN0aW9uIGV2ZW50IGhhbmRsZXJzXHJcbiAgICAgICAgbW9uZ29vc2UuY29ubmVjdGlvbi5vbignZXJyb3InLCAoZSkgPT4ge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcignTW9uZ29EQiBjb25uZWN0aW9uIGVycm9yOicsIGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIENvbm5lY3Rpb24gc3VjY2Vzc2Z1bCwgcmV0dXJuXHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYE1vbmdvREIgc2V0dXAgZXJyb3Igb24gYXR0ZW1wdCAke2F0dGVtcHR9OmAsIGVycm9yKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBJZiB0aGlzIHdhcyB0aGUgbGFzdCByZXRyeSwgdGhyb3cgdGhlIGVycm9yXHJcbiAgICAgICAgaWYgKGF0dGVtcHQgPT09IHJldHJpZXMpIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGNvbm5lY3QgdG8gTW9uZ29EQiBhZnRlciAke3JldHJpZXN9IGF0dGVtcHRzOiAke2Vycm9yLm1lc3NhZ2V9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFdhaXQgYmVmb3JlIHJldHJ5aW5nIChleHBvbmVudGlhbCBiYWNrb2ZmKVxyXG4gICAgICAgIGNvbnN0IHdhaXRUaW1lID0gTWF0aC5taW4oMTAwMCAqIE1hdGgucG93KDIsIGF0dGVtcHQgLSAxKSwgMTAwMDApO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBXYWl0aW5nICR7d2FpdFRpbWV9bXMgYmVmb3JlIHJldHJ5Li4uYCk7XHJcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHdhaXRUaW1lKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KSgpLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgLy8gUmVzZXQgdGhlIHByb21pc2Ugb25jZSByZXNvbHZlZFxyXG4gICAgY29ubmVjdFByb21pc2UgPSBudWxsO1xyXG4gIH0pO1xyXG4gIFxyXG4gIHJldHVybiBjb25uZWN0UHJvbWlzZTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEcm9wIGRhdGFiYXNlLCBjbG9zZSB0aGUgY29ubmVjdGlvbiBhbmQgc3RvcCBtb25nb2QuXHJcbiAqL1xyXG5jb25zdCBjbG9zZURhdGFiYXNlID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBDaGVjayBmb3IgcGVuZGluZyBvcGVyYXRpb25zIGJlZm9yZSBjbG9zaW5nXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBVc2luZyBpbnRlcm5hbCBNb25nb29zZSBwcm9wZXJ0aWVzIGNhcmVmdWxseVxyXG4gICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgIGNvbnN0IHBlbmRpbmdPcHMgPSBtb25nb29zZS5jb25uZWN0aW9uLmRiPy5zPy50b3BvbG9neT8ub3V0c3RhbmRpbmdPcGVyYXRpb25Db3VudCB8fCAwO1xyXG4gICAgICBcclxuICAgICAgaWYgKHBlbmRpbmdPcHMgPiAwKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYFdhaXRpbmcgZm9yICR7cGVuZGluZ09wc30gcGVuZGluZyBvcGVyYXRpb25zIHRvIGNvbXBsZXRlLi4uYCk7XHJcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5yYWNlKFtcclxuICAgICAgICAgIC8vIFdhaXQgZm9yIG9wZXJhdGlvbnMgdG8gY29tcGxldGVcclxuICAgICAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBwZW5kaW5nT3BzICogMTAwKSksXHJcbiAgICAgICAgICAvLyBNYXggdGltZW91dCBvZiA1IHNlY29uZHNcclxuICAgICAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCA1MDAwKSlcclxuICAgICAgICBdKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAvLyBJZ25vcmUgZXJyb3JzIHdoZW4gY2hlY2tpbmcgcGVuZGluZyBvcGVyYXRpb25zXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDApIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0aW9uLmRyb3BEYXRhYmFzZSgpO1xyXG4gICAgICB9IGNhdGNoIChkcm9wRXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIGRyb3BwaW5nIGRhdGFiYXNlOicsIGRyb3BFcnJvci5tZXNzYWdlKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdGlvbi5jbG9zZSh0cnVlKTsgLy8gRm9yY2UgY2xvc2VcclxuICAgICAgY29uc29sZS5sb2coJ0Nsb3NlZCBNb25nb0RCIGNvbm5lY3Rpb24nKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKG1vbmdvZCkge1xyXG4gICAgICBhd2FpdCBtb25nb2Quc3RvcCh7IGRvQ2xlYW51cDogdHJ1ZSwgZm9yY2U6IHRydWUgfSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdG9wcGVkIE1vbmdvREIgTWVtb3J5IFNlcnZlcicpO1xyXG4gICAgICBtb25nb2QgPSBudWxsO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjbG9zaW5nIE1vbmdvREI6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgICAvLyBGb3JjZSBjbGVhbnVwIGluIGNhc2Ugb2YgZXJyb3JcclxuICAgIHRyeSB7XHJcbiAgICAgIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDApIHtcclxuICAgICAgICBtb25nb29zZS5jb25uZWN0aW9uLnJlbW92ZUFsbExpc3RlbmVycygpO1xyXG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgbW9uZ29kID0gbnVsbDtcclxuICAgIH0gY2F0Y2ggKGZpbmFsRXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRmluYWwgZXJyb3IgZHVyaW5nIE1vbmdvREIgY2xlYW51cDonLCBmaW5hbEVycm9yKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogQ2xlYXIgYWxsIGNvbGxlY3Rpb25zIGluIHRoZSBkYXRhYmFzZS5cclxuICovXHJcbmNvbnN0IGNsZWFyRGF0YWJhc2UgPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDEpIHtcclxuICAgICAgY29uc29sZS53YXJuKCdNb25nb0RCIG5vdCBjb25uZWN0ZWQsIGF0dGVtcHRpbmcgdG8gY29ubmVjdCBiZWZvcmUgY2xlYXJpbmcuLi4nKTtcclxuICAgICAgYXdhaXQgY29ubmVjdCgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBjb2xsZWN0aW9ucyA9IG1vbmdvb3NlLmNvbm5lY3Rpb24uY29sbGVjdGlvbnM7XHJcbiAgICBjb25zdCBjbGVhclByb21pc2VzID0gW107XHJcbiAgICBcclxuICAgIGZvciAoY29uc3Qga2V5IGluIGNvbGxlY3Rpb25zKSB7XHJcbiAgICAgIGNsZWFyUHJvbWlzZXMucHVzaChjb2xsZWN0aW9uc1trZXldLmRlbGV0ZU1hbnkoe30pKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoY2xlYXJQcm9taXNlcyk7XHJcbiAgICBjb25zb2xlLmxvZygnQ2xlYXJlZCBhbGwgTW9uZ29EQiBjb2xsZWN0aW9ucycpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjbGVhcmluZyBNb25nb0RCOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgLy8gVHJ5IHRvIHJlY29ubmVjdCBhbmQgY2xlYXIgaWYgdGhlcmUgd2FzIGFuIGVycm9yXHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBjbG9zZURhdGFiYXNlKCk7XHJcbiAgICAgIGF3YWl0IGNvbm5lY3QoKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGNvbGxlY3Rpb25zID0gbW9uZ29vc2UuY29ubmVjdGlvbi5jb2xsZWN0aW9ucztcclxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gY29sbGVjdGlvbnMpIHtcclxuICAgICAgICBhd2FpdCBjb2xsZWN0aW9uc1trZXldLmRlbGV0ZU1hbnkoe30pO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgY2xlYXJlZCBjb2xsZWN0aW9ucyBhZnRlciByZWNvbm5lY3Rpb24nKTtcclxuICAgIH0gY2F0Y2ggKHJldHJ5RXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2xlYXJpbmcgTW9uZ29EQiBhZnRlciByZWNvbm5lY3Rpb246JywgcmV0cnlFcnJvcik7XHJcbiAgICAgIHRocm93IHJldHJ5RXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG5cclxuLyoqXHJcbiAqIFNlZWQgdGhlIGRhdGFiYXNlIHdpdGggdGVzdCBkYXRhXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIC0gVGhlIGRhdGEgdG8gc2VlZFxyXG4gKi9cclxuY29uc3Qgc2VlZERhdGFiYXNlID0gYXN5bmMgKGRhdGEgPSB7fSkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAobW9uZ29vc2UuY29ubmVjdGlvbi5yZWFkeVN0YXRlICE9PSAxKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignTW9uZ29EQiBub3QgY29ubmVjdGVkLCBhdHRlbXB0aW5nIHRvIGNvbm5lY3QgYmVmb3JlIHNlZWRpbmcuLi4nKTtcclxuICAgICAgYXdhaXQgY29ubmVjdCgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBPbmx5IGF0dGVtcHQgdG8gc2VlZCBpZiB3ZSBoYXZlIGRhdGFcclxuICAgIGlmIChPYmplY3Qua2V5cyhkYXRhKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgY29uc29sZS5sb2coJ05vIHNlZWQgZGF0YSBwcm92aWRlZCwgc2tpcHBpbmcgZGF0YWJhc2Ugc2VlZGluZycpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCdTZWVkaW5nIGRhdGFiYXNlIHdpdGggdGVzdCBkYXRhLi4uJyk7XHJcbiAgICBcclxuICAgIC8vIFByb2Nlc3MgZWFjaCBjb2xsZWN0aW9uIGluIHRoZSBkYXRhIG9iamVjdFxyXG4gICAgZm9yIChjb25zdCBbbW9kZWxOYW1lLCBkb2N1bWVudHNdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEpKSB7XHJcbiAgICAgIC8vIFNraXAgaWYgbW9kZWwgZG9lc24ndCBleGlzdFxyXG4gICAgICBpZiAoIW1vbmdvb3NlLm1vZGVsc1ttb2RlbE5hbWVdKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGBNb2RlbCAke21vZGVsTmFtZX0gbm90IGZvdW5kLCBza2lwcGluZ2ApO1xyXG4gICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKG1vZGVsTmFtZSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBJbnNlcnQgbWFueSBkb2N1bWVudHMgb3IgYSBzaW5nbGUgb25lXHJcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGRvY3VtZW50cykpIHtcclxuICAgICAgICBhd2FpdCBtb2RlbC5pbnNlcnRNYW55KGRvY3VtZW50cyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYEluc2VydGVkICR7ZG9jdW1lbnRzLmxlbmd0aH0gZG9jdW1lbnRzIGludG8gJHttb2RlbE5hbWV9YCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXdhaXQgbW9kZWwuY3JlYXRlKGRvY3VtZW50cyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coYEluc2VydGVkIDEgZG9jdW1lbnQgaW50byAke21vZGVsTmFtZX1gKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygnRGF0YWJhc2Ugc2VlZGluZyBjb21wbGV0ZWQnKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VlZGluZyBkYXRhYmFzZTonLCBlcnJvcik7XHJcbiAgICBcclxuICAgIC8vIFRyeSB0byByZWNvbm5lY3QgYW5kIHNlZWQgaWYgdGhlcmUgd2FzIGFuIGVycm9yXHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBjbG9zZURhdGFiYXNlKCk7XHJcbiAgICAgIGF3YWl0IGNvbm5lY3QoKTtcclxuICAgICAgcmV0dXJuIHNlZWREYXRhYmFzZShkYXRhKTsgLy8gUmV0cnkgb25jZVxyXG4gICAgfSBjYXRjaCAocmV0cnlFcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZWVkaW5nIGRhdGFiYXNlIGFmdGVyIHJlY29ubmVjdGlvbjonLCByZXRyeUVycm9yKTtcclxuICAgICAgdGhyb3cgcmV0cnlFcnJvcjtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogQ2hlY2sgZm9yIGFuZCBjbGVhbnVwIGFueSBsZWFrZWQgY29ubmVjdGlvbnNcclxuICovXHJcbmNvbnN0IGNoZWNrRm9yTGVha3MgPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDApIHtcclxuICAgICAgLy8gQ2hlY2sgZm9yIHBlbmRpbmcgb3BlcmF0aW9uc1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBBY2Nlc3MgaW50ZXJuYWwgcHJvcGVydGllc1xyXG4gICAgICAgIGNvbnN0IHBlbmRpbmdRdWVyaWVzID0gbW9uZ29vc2UuY29ubmVjdGlvbi5kYj8ucz8udG9wb2xvZ3k/LnM/LnN0YXRlPy5vcGVyYXRpb25Db3VudCB8fCAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChwZW5kaW5nUXVlcmllcyA+IDApIHtcclxuICAgICAgICAgIGNvbnNvbGUud2Fybihg4pqg77iPIERldGVjdGVkICR7cGVuZGluZ1F1ZXJpZXN9IHBlbmRpbmcgZGF0YWJhc2Ugb3BlcmF0aW9ucyBiZWZvcmUgY2xlYW51cGApO1xyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAvLyBGb3JjZSBjbGVhbnVwIG9mIHNlc3Npb25zIGlmIHBvc3NpYmxlXHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlIC0gQWNjZXNzIGludGVybmFsIHByb3BlcnRpZXNcclxuICAgICAgICAgICAgaWYgKG1vbmdvb3NlLmNvbm5lY3Rpb24uZGI/LnM/LnRvcG9sb2d5Py5zPy5zZXNzaW9ucykge1xyXG4gICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgLSBBY2Nlc3MgaW50ZXJuYWwgcHJvcGVydGllc1xyXG4gICAgICAgICAgICAgIGZvciAoY29uc3Qgc2Vzc2lvbiBvZiBPYmplY3QudmFsdWVzKG1vbmdvb3NlLmNvbm5lY3Rpb24uZGIucy50b3BvbG9neS5zLnNlc3Npb25zKSkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIEFjY2VzcyBpbnRlcm5hbCBzZXNzaW9uIHRvIGZvcmNlIGVuZCBpdFxyXG4gICAgICAgICAgICAgICAgICBpZiAoc2Vzc2lvbiAmJiB0eXBlb2Ygc2Vzc2lvbi5lbmRTZXNzaW9uID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb24uZW5kU2Vzc2lvbigpO1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgIC8vIElnbm9yZSBzZXNzaW9uIGVycm9yc1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAvLyBJZ25vcmUgc2Vzc2lvbiBjbGVhbnVwIGVycm9yc1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIC8vIElnbm9yZSBlcnJvcnMgY2hlY2tpbmcgZm9yIGxlYWtzXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gRW5zdXJlIGNsZWFuIGRpc2Nvbm5lY3RcclxuICAgIGF3YWl0IGNsb3NlRGF0YWJhc2UoKTtcclxuICAgIFxyXG4gICAgLy8gRXh0cmEgY2xlYW51cCBmb3IgbWVtb3J5IG1hbmFnZW1lbnRcclxuICAgIGlmIChnbG9iYWwuZ2MpIHtcclxuICAgICAgZ2xvYmFsLmdjKCk7IC8vIEZvcmNlIGdhcmJhZ2UgY29sbGVjdGlvbiBpZiBhdmFpbGFibGVcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hlY2tpbmcgZm9yIGxlYWtzOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgLy8gRm9yY2UgZmluYWwgY2xlYW51cFxyXG4gICAgdHJ5IHtcclxuICAgICAgaWYgKG1vbmdvb3NlLmNvbm5lY3Rpb24ucmVhZHlTdGF0ZSAhPT0gMCkge1xyXG4gICAgICAgIG1vbmdvb3NlLmNvbm5lY3Rpb24ucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XHJcbiAgICAgICAgYXdhaXQgbW9uZ29vc2UuZGlzY29ubmVjdCgpO1xyXG4gICAgICB9XHJcbiAgICAgIG1vbmdvZCA9IG51bGw7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIC8vIElnbm9yZSBmaW5hbCBjbGVhbnVwIGVycm9yc1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbi8vIENvbm5lY3QgdG8gZGF0YWJhc2UgYmVmb3JlIHRlc3RzIHN0YXJ0XHJcbmNvbm5lY3QoKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdNb25nb0RCIHNldHVwIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHknKTtcclxuICB9KVxyXG4gIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdNb25nb0RCIHNldHVwIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgfSk7XHJcblxyXG4vLyBDbG9zZSBkYXRhYmFzZSBjb25uZWN0aW9uIGFmdGVyIHRlc3RzIGZpbmlzaFxyXG5hZnRlckFsbChhc3luYyAoKSA9PiB7XHJcbiAgYXdhaXQgY2hlY2tGb3JMZWFrcygpO1xyXG59KTtcclxuXHJcbi8vIE1ha2UgaGVscGVycyBhdmFpbGFibGUgZ2xvYmFsbHlcclxuZ2xvYmFsLm1vbmdvVGVzdFV0aWxzID0ge1xyXG4gIGNvbm5lY3QsXHJcbiAgY2xvc2VEYXRhYmFzZSxcclxuICBjbGVhckRhdGFiYXNlLFxyXG4gIHNlZWREYXRhYmFzZSxcclxuICBjaGVja0ZvckxlYWtzXHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBjb25uZWN0LFxyXG4gIGNsb3NlRGF0YWJhc2UsXHJcbiAgY2xlYXJEYXRhYmFzZSxcclxuICBzZWVkRGF0YWJhc2UsXHJcbiAgY2hlY2tGb3JMZWFrcyxcclxuICBtb25nb2RcclxufTsgIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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