{"version":3,"names":["_test","require","test","describe","beforeEach","page","goto","fill","click","expect","locator","toBeVisible","selectOption","setViewportSize","width","height","toHaveCSS","context","patientPage","newPage"],"sources":["healthcare.spec.ts"],"sourcesContent":["import { test, expect } from '@playwright/test';\r\n\r\ntest.describe('Healthcare System E2E Tests', () => {\r\n  test.beforeEach(async ({ page }) => {\r\n    await page.goto('http://localhost:3000');\r\n  });\r\n\r\n  test.describe('Authentication', () => {\r\n    test('should login as doctor', async ({ page }) => {\r\n      await page.fill('input[name=\"email\"]', 'doctor@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n\r\n      await expect(page.locator('text=Doctor Dashboard')).toBeVisible();\r\n    });\r\n\r\n    test('should login as patient', async ({ page }) => {\r\n      await page.fill('input[name=\"email\"]', 'patient@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n\r\n      await expect(page.locator('text=Patient Dashboard')).toBeVisible();\r\n    });\r\n\r\n    test('should show error for invalid credentials', async ({ page }) => {\r\n      await page.fill('input[name=\"email\"]', 'invalid@example.com');\r\n      await page.fill('input[name=\"password\"]', 'wrongpassword');\r\n      await page.click('button[type=\"submit\"]');\r\n\r\n      await expect(page.locator('text=Invalid credentials')).toBeVisible();\r\n    });\r\n  });\r\n\r\n  test.describe('Doctor Schedule Management', () => {\r\n    test.beforeEach(async ({ page }) => {\r\n      // Login as doctor\r\n      await page.fill('input[name=\"email\"]', 'doctor@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n    });\r\n\r\n    test('should create available time slot', async ({ page }) => {\r\n      await page.click('text=Manage Schedule');\r\n      await page.click('.fc-timegrid-slot:first-child');\r\n      \r\n      await expect(page.locator('text=Time slot added successfully')).toBeVisible();\r\n      await expect(page.locator('.fc-event')).toBeVisible();\r\n    });\r\n\r\n    test('should delete time slot', async ({ page }) => {\r\n      await page.click('text=Manage Schedule');\r\n      await page.click('.fc-event:first-child');\r\n      await page.click('text=Delete');\r\n      await page.click('text=Confirm');\r\n\r\n      await expect(page.locator('text=Time slot removed successfully')).toBeVisible();\r\n    });\r\n  });\r\n\r\n  test.describe('Medical Records', () => {\r\n    test.beforeEach(async ({ page }) => {\r\n      // Login as doctor\r\n      await page.fill('input[name=\"email\"]', 'doctor@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n    });\r\n\r\n    test('should create medical record', async ({ page }) => {\r\n      await page.click('text=Medical Records');\r\n      await page.click('text=Add New Record');\r\n      \r\n      await page.fill('input[name=\"title\"]', 'Regular Check-up');\r\n      await page.fill('textarea[name=\"description\"]', 'Patient is in good health');\r\n      await page.fill('input[name=\"diagnosis\"]', 'Healthy');\r\n      await page.click('button:has-text(\"Create Record\")');\r\n\r\n      await expect(page.locator('text=Medical record created successfully')).toBeVisible();\r\n    });\r\n\r\n    test('should validate required fields', async ({ page }) => {\r\n      await page.click('text=Medical Records');\r\n      await page.click('text=Add New Record');\r\n      await page.click('button:has-text(\"Create Record\")');\r\n\r\n      await expect(page.locator('text=Title is required')).toBeVisible();\r\n      await expect(page.locator('text=Description is required')).toBeVisible();\r\n    });\r\n  });\r\n\r\n  test.describe('Billing System', () => {\r\n    test.beforeEach(async ({ page }) => {\r\n      // Login as staff\r\n      await page.fill('input[name=\"email\"]', 'staff@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n    });\r\n\r\n    test('should create invoice', async ({ page }) => {\r\n      await page.click('text=Billing');\r\n      await page.click('text=Create New Invoice');\r\n      \r\n      await page.fill('input[name=\"amount\"]', '100');\r\n      await page.fill('input[name=\"tax\"]', '10');\r\n      await page.fill('input[name=\"discount\"]', '5');\r\n      await page.fill('input[name=\"dueDate\"]', '2024-12-31');\r\n      await page.click('button:has-text(\"Create Invoice\")');\r\n\r\n      await expect(page.locator('text=Invoice created successfully')).toBeVisible();\r\n    });\r\n\r\n    test('should update invoice status', async ({ page }) => {\r\n      await page.click('text=Billing');\r\n      await page.selectOption('select.invoice-status', 'PAID');\r\n\r\n      await expect(page.locator('text=Invoice status updated successfully')).toBeVisible();\r\n    });\r\n  });\r\n\r\n  test.describe('Responsive Design', () => {\r\n    test('should be responsive on mobile', async ({ page }) => {\r\n      await page.setViewportSize({ width: 375, height: 667 });\r\n      \r\n      // Check if menu becomes hamburger\r\n      await expect(page.locator('.hamburger-menu')).toBeVisible();\r\n      \r\n      // Check if tables are scrollable\r\n      await expect(page.locator('.table-container')).toHaveCSS('overflow-x', 'auto');\r\n      \r\n      // Check if forms stack vertically\r\n      await expect(page.locator('form')).toHaveCSS('flex-direction', 'column');\r\n    });\r\n\r\n    test('should be responsive on tablet', async ({ page }) => {\r\n      await page.setViewportSize({ width: 768, height: 1024 });\r\n      \r\n      // Check if sidebar is visible\r\n      await expect(page.locator('.sidebar')).toBeVisible();\r\n      \r\n      // Check if grid layout adjusts\r\n      await expect(page.locator('.grid-container')).toHaveCSS('grid-template-columns', 'repeat(2, 1fr)');\r\n    });\r\n  });\r\n\r\n  test.describe('Real-time Updates', () => {\r\n    test('should show real-time appointment updates', async ({ page, context }) => {\r\n      // Login in first page\r\n      await page.fill('input[name=\"email\"]', 'doctor@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n\r\n      // Create new page for patient\r\n      const patientPage = await context.newPage();\r\n      await patientPage.goto('http://localhost:3000');\r\n      await patientPage.fill('input[name=\"email\"]', 'patient@example.com');\r\n      await patientPage.fill('input[name=\"password\"]', 'password123');\r\n      await patientPage.click('button[type=\"submit\"]');\r\n\r\n      // Doctor creates appointment\r\n      await page.click('text=Manage Schedule');\r\n      await page.click('.fc-timegrid-slot:first-child');\r\n\r\n      // Check if patient sees update\r\n      await expect(patientPage.locator('text=New appointment available')).toBeVisible();\r\n    });\r\n\r\n    test('should show real-time message notifications', async ({ page, context }) => {\r\n      // Login in first page (doctor)\r\n      await page.fill('input[name=\"email\"]', 'doctor@example.com');\r\n      await page.fill('input[name=\"password\"]', 'password123');\r\n      await page.click('button[type=\"submit\"]');\r\n\r\n      // Create new page for patient\r\n      const patientPage = await context.newPage();\r\n      await patientPage.goto('http://localhost:3000');\r\n      await patientPage.fill('input[name=\"email\"]', 'patient@example.com');\r\n      await patientPage.fill('input[name=\"password\"]', 'password123');\r\n      await patientPage.click('button[type=\"submit\"]');\r\n\r\n      // Patient sends message\r\n      await patientPage.click('text=Messages');\r\n      await patientPage.fill('textarea[name=\"message\"]', 'Hello doctor');\r\n      await patientPage.click('button:has-text(\"Send\")');\r\n\r\n      // Check if doctor receives notification\r\n      await expect(page.locator('text=New message from Patient')).toBeVisible();\r\n    });\r\n  });\r\n}); "],"mappings":"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","ignoreList":[]}