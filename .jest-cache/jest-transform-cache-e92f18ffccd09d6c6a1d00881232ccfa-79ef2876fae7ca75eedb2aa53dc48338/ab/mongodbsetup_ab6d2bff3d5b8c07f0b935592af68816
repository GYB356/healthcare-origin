1b992d956c184e489c5de948dd636988
const mongoose = require('mongoose');
const {
  MongoMemoryServer
} = require('mongodb-memory-server');
let mongod;

// Connect to the in-memory database before running tests
beforeAll(async () => {
  mongod = await MongoMemoryServer.create();
  const uri = mongod.getUri();
  await mongoose.connect(uri, {
    useNewUrlParser: true,
    useUnifiedTopology: true
  });
});

// Clear all data between tests
afterEach(async () => {
  if (mongoose.connection.readyState !== 0) {
    const collections = await mongoose.connection.db.collections();
    for (let collection of collections) {
      await collection.deleteMany();
    }
  }
});

// Close database connection after all tests
afterAll(async () => {
  if (mongoose.connection.readyState !== 0) {
    await mongoose.connection.close();
  }
  if (mongod) {
    await mongod.stop();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJNb25nb01lbW9yeVNlcnZlciIsIm1vbmdvZCIsImJlZm9yZUFsbCIsImNyZWF0ZSIsInVyaSIsImdldFVyaSIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJhZnRlckVhY2giLCJjb25uZWN0aW9uIiwicmVhZHlTdGF0ZSIsImNvbGxlY3Rpb25zIiwiZGIiLCJjb2xsZWN0aW9uIiwiZGVsZXRlTWFueSIsImFmdGVyQWxsIiwiY2xvc2UiLCJzdG9wIl0sInNvdXJjZXMiOlsibW9uZ29kYi5zZXR1cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IHsgTW9uZ29NZW1vcnlTZXJ2ZXIgfSA9IHJlcXVpcmUoJ21vbmdvZGItbWVtb3J5LXNlcnZlcicpO1xyXG5cclxubGV0IG1vbmdvZDtcclxuXHJcbi8vIENvbm5lY3QgdG8gdGhlIGluLW1lbW9yeSBkYXRhYmFzZSBiZWZvcmUgcnVubmluZyB0ZXN0c1xyXG5iZWZvcmVBbGwoYXN5bmMgKCkgPT4ge1xyXG4gIG1vbmdvZCA9IGF3YWl0IE1vbmdvTWVtb3J5U2VydmVyLmNyZWF0ZSgpO1xyXG4gIGNvbnN0IHVyaSA9IG1vbmdvZC5nZXRVcmkoKTtcclxuICBhd2FpdCBtb25nb29zZS5jb25uZWN0KHVyaSwge1xyXG4gICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxyXG4gICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuLy8gQ2xlYXIgYWxsIGRhdGEgYmV0d2VlbiB0ZXN0c1xyXG5hZnRlckVhY2goYXN5bmMgKCkgPT4ge1xyXG4gIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDApIHtcclxuICAgIGNvbnN0IGNvbGxlY3Rpb25zID0gYXdhaXQgbW9uZ29vc2UuY29ubmVjdGlvbi5kYi5jb2xsZWN0aW9ucygpO1xyXG4gICAgZm9yIChsZXQgY29sbGVjdGlvbiBvZiBjb2xsZWN0aW9ucykge1xyXG4gICAgICBhd2FpdCBjb2xsZWN0aW9uLmRlbGV0ZU1hbnkoKTtcclxuICAgIH1cclxuICB9XHJcbn0pO1xyXG5cclxuLy8gQ2xvc2UgZGF0YWJhc2UgY29ubmVjdGlvbiBhZnRlciBhbGwgdGVzdHNcclxuYWZ0ZXJBbGwoYXN5bmMgKCkgPT4ge1xyXG4gIGlmIChtb25nb29zZS5jb25uZWN0aW9uLnJlYWR5U3RhdGUgIT09IDApIHtcclxuICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3Rpb24uY2xvc2UoKTtcclxuICB9XHJcbiAgaWYgKG1vbmdvZCkge1xyXG4gICAgYXdhaXQgbW9uZ29kLnN0b3AoKTtcclxuICB9XHJcbn0pOyAiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUNwQyxNQUFNO0VBQUVDO0FBQWtCLENBQUMsR0FBR0QsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBRTlELElBQUlFLE1BQU07O0FBRVY7QUFDQUMsU0FBUyxDQUFDLFlBQVk7RUFDcEJELE1BQU0sR0FBRyxNQUFNRCxpQkFBaUIsQ0FBQ0csTUFBTSxDQUFDLENBQUM7RUFDekMsTUFBTUMsR0FBRyxHQUFHSCxNQUFNLENBQUNJLE1BQU0sQ0FBQyxDQUFDO0VBQzNCLE1BQU1QLFFBQVEsQ0FBQ1EsT0FBTyxDQUFDRixHQUFHLEVBQUU7SUFDMUJHLGVBQWUsRUFBRSxJQUFJO0lBQ3JCQyxrQkFBa0IsRUFBRTtFQUN0QixDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7O0FBRUY7QUFDQUMsU0FBUyxDQUFDLFlBQVk7RUFDcEIsSUFBSVgsUUFBUSxDQUFDWSxVQUFVLENBQUNDLFVBQVUsS0FBSyxDQUFDLEVBQUU7SUFDeEMsTUFBTUMsV0FBVyxHQUFHLE1BQU1kLFFBQVEsQ0FBQ1ksVUFBVSxDQUFDRyxFQUFFLENBQUNELFdBQVcsQ0FBQyxDQUFDO0lBQzlELEtBQUssSUFBSUUsVUFBVSxJQUFJRixXQUFXLEVBQUU7TUFDbEMsTUFBTUUsVUFBVSxDQUFDQyxVQUFVLENBQUMsQ0FBQztJQUMvQjtFQUNGO0FBQ0YsQ0FBQyxDQUFDOztBQUVGO0FBQ0FDLFFBQVEsQ0FBQyxZQUFZO0VBQ25CLElBQUlsQixRQUFRLENBQUNZLFVBQVUsQ0FBQ0MsVUFBVSxLQUFLLENBQUMsRUFBRTtJQUN4QyxNQUFNYixRQUFRLENBQUNZLFVBQVUsQ0FBQ08sS0FBSyxDQUFDLENBQUM7RUFDbkM7RUFDQSxJQUFJaEIsTUFBTSxFQUFFO0lBQ1YsTUFBTUEsTUFBTSxDQUFDaUIsSUFBSSxDQUFDLENBQUM7RUFDckI7QUFDRixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=