3d5531837666ebe17cf0e0fc1bd0f3a1
/* istanbul ignore next */
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
function cov_1l1g950k03() {
  var path = "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\testUtils.js";
  var hash = "b41cc4b82a94579dffefb147cf742fa22355eb76";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\testUtils.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 17
        },
        end: {
          line: 1,
          column: 36
        }
      },
      "1": {
        start: {
          line: 2,
          column: 30
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "2": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "3": {
        start: {
          line: 7,
          column: 2
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "4": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "5": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "7": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "8": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 22
        }
      },
      "9": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "10": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "11": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 28,
          column: 4
        }
      },
      "12": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "13": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "14": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "15": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 58
        }
      },
      "16": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "17": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "18": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "19": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "20": {
        start: {
          line: 55,
          column: 29
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "21": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 63,
          column: 72
        }
      },
      "22": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "23": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 67,
          column: 51
        }
      },
      "24": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 68,
          column: 20
        }
      },
      "25": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "26": {
        start: {
          line: 72,
          column: 22
        },
        end: {
          line: 81,
          column: 1
        }
      },
      "27": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 79,
          column: 3
        }
      },
      "28": {
        start: {
          line: 80,
          column: 2
        },
        end: {
          line: 80,
          column: 20
        }
      },
      "29": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 91,
          column: 1
        }
      },
      "30": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "31": {
        start: {
          line: 85,
          column: 2
        },
        end: {
          line: 90,
          column: 3
        }
      },
      "32": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "33": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 58
        }
      },
      "34": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 59
        }
      },
      "35": {
        start: {
          line: 89,
          column: 33
        },
        end: {
          line: 89,
          column: 57
        }
      },
      "36": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 103,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 18
          },
          end: {
            line: 6,
            column: 19
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 17
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 21
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 27,
            column: 57
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 27
          }
        },
        loc: {
          start: {
            line: 43,
            column: 54
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 54,
            column: 31
          }
        },
        loc: {
          start: {
            line: 54,
            column: 62
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 54
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 24
          }
        },
        loc: {
          start: {
            line: 66,
            column: 43
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 66
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 23
          }
        },
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 26
          }
        },
        loc: {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 23
          }
        },
        loc: {
          start: {
            line: 89,
            column: 33
          },
          end: {
            line: 89,
            column: 57
          }
        },
        line: 89
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 31,
            column: 43
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 49
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 55
          },
          end: {
            line: 54,
            column: 57
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 40
          }
        }, {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 75
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 14
          },
          end: {
            line: 57,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 14
          },
          end: {
            line: 57,
            column: 38
          }
        }, {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 70
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 43
          },
          end: {
            line: 83,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 53
          },
          end: {
            line: 83,
            column: 57
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b41cc4b82a94579dffefb147cf742fa22355eb76"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l1g950k03 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l1g950k03();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
const mongoose =
/* istanbul ignore next */
(cov_1l1g950k03().s[0]++, require('mongoose'));
const {
  MongoMemoryServer
} =
/* istanbul ignore next */
(cov_1l1g950k03().s[1]++, require('mongodb-memory-server'));
let mongod;
/* istanbul ignore next */
cov_1l1g950k03().s[2]++;
const connectDB = async () => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[0]++;
  cov_1l1g950k03().s[3]++;
  mongod = await MongoMemoryServer.create();
  const uri =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[4]++, mongod.getUri());
  /* istanbul ignore next */
  cov_1l1g950k03().s[5]++;
  await mongoose.connect(uri, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    maxPoolSize: 10,
    serverSelectionTimeoutMS: 5000,
    socketTimeoutMS: 45000
  });
};
/* istanbul ignore next */
cov_1l1g950k03().s[6]++;
const closeDB = async () => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[1]++;
  cov_1l1g950k03().s[7]++;
  await mongoose.connection.close();
  /* istanbul ignore next */
  cov_1l1g950k03().s[8]++;
  await mongod.stop();
};
/* istanbul ignore next */
cov_1l1g950k03().s[9]++;
const clearDB = async () => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[2]++;
  const collections =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[10]++, await mongoose.connection.db.collections());
  /* istanbul ignore next */
  cov_1l1g950k03().s[11]++;
  await Promise.all(collections.map(collection => {
    /* istanbul ignore next */
    cov_1l1g950k03().f[3]++;
    cov_1l1g950k03().s[12]++;
    return collection.deleteMany();
  }));
};
/* istanbul ignore next */
cov_1l1g950k03().s[13]++;
const createTestUser = async (userData =
/* istanbul ignore next */
(cov_1l1g950k03().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[4]++;
  const defaultUser =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[14]++, _objectSpread({
    name: 'Test User',
    email: 'test@example.com',
    password: 'hashedPassword',
    role: 'DOCTOR'
  }, userData));
  /* istanbul ignore next */
  cov_1l1g950k03().s[15]++;
  return await mongoose.model('User').create(defaultUser);
};
/* istanbul ignore next */
cov_1l1g950k03().s[16]++;
const createTestPatient = async (patientData =
/* istanbul ignore next */
(cov_1l1g950k03().b[1][0]++, {})) => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[5]++;
  const defaultPatient =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[17]++, _objectSpread({
    name: 'Test Patient',
    email: 'patient@example.com',
    phone: '1234567890'
  }, patientData));
  /* istanbul ignore next */
  cov_1l1g950k03().s[18]++;
  return await mongoose.model('Patient').create(defaultPatient);
};
/* istanbul ignore next */
cov_1l1g950k03().s[19]++;
const createTestAppointment = async (appointmentData =
/* istanbul ignore next */
(cov_1l1g950k03().b[2][0]++, {})) => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[6]++;
  const defaultAppointment =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[20]++, _objectSpread({
    patientId:
    /* istanbul ignore next */
    (cov_1l1g950k03().b[3][0]++, appointmentData.patientId) ||
    /* istanbul ignore next */
    (cov_1l1g950k03().b[3][1]++, (await createTestPatient())._id),
    doctorId:
    /* istanbul ignore next */
    (cov_1l1g950k03().b[4][0]++, appointmentData.doctorId) ||
    /* istanbul ignore next */
    (cov_1l1g950k03().b[4][1]++, (await createTestUser())._id),
    date: new Date(),
    status: 'SCHEDULED'
  }, appointmentData));
  /* istanbul ignore next */
  cov_1l1g950k03().s[21]++;
  return await mongoose.model('Appointment').create(defaultAppointment);
};
/* istanbul ignore next */
cov_1l1g950k03().s[22]++;
const createTestChat = async chatData => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[7]++;
  const chat =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[23]++, new mongoose.model('Chat')(chatData));
  /* istanbul ignore next */
  cov_1l1g950k03().s[24]++;
  await chat.save();
  /* istanbul ignore next */
  cov_1l1g950k03().s[25]++;
  return chat;
};
/* istanbul ignore next */
cov_1l1g950k03().s[26]++;
const mockWebSocket = () => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[8]++;
  const mockSocket =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[27]++, {
    on: jest.fn(),
    emit: jest.fn(),
    connected: false,
    disconnect: jest.fn(),
    connect: jest.fn()
  });
  /* istanbul ignore next */
  cov_1l1g950k03().s[28]++;
  return mockSocket;
};
/* istanbul ignore next */
cov_1l1g950k03().s[29]++;
const waitForCondition = async (condition, timeout =
/* istanbul ignore next */
(cov_1l1g950k03().b[5][0]++, 5000)) => {
  /* istanbul ignore next */
  cov_1l1g950k03().f[9]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1l1g950k03().s[30]++, Date.now());
  /* istanbul ignore next */
  cov_1l1g950k03().s[31]++;
  while (!condition()) {
    /* istanbul ignore next */
    cov_1l1g950k03().s[32]++;
    if (Date.now() - startTime > timeout) {
      /* istanbul ignore next */
      cov_1l1g950k03().b[6][0]++;
      cov_1l1g950k03().s[33]++;
      throw new Error('Condition not met within timeout');
    } else
    /* istanbul ignore next */
    {
      cov_1l1g950k03().b[6][1]++;
    }
    cov_1l1g950k03().s[34]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1l1g950k03().f[10]++;
      cov_1l1g950k03().s[35]++;
      return setTimeout(resolve, 100);
    });
  }
};
/* istanbul ignore next */
cov_1l1g950k03().s[36]++;
module.exports = {
  connectDB,
  closeDB,
  clearDB,
  createTestUser,
  createTestPatient,
  createTestAppointment,
  createTestChat,
  mockWebSocket,
  waitForCondition
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,