5f6229c9c8be8051c5ddd0472602da56
/* istanbul ignore next */
function cov_2bml4c20m5() {
  var path = "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\mongodb.setup.js";
  var hash = "b83ee67e980a63dc119c90cdd90195641fa385d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\olari\\Downloads\\healthcare-main\\__tests__\\helpers\\mongodb.setup.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 30
        },
        end: {
          line: 1,
          column: 62
        }
      },
      "1": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 2,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 17
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "4": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "5": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "7": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "9": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "12": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "13": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 80
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "15": {
        start: {
          line: 31,
          column: 10
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 94
        }
      },
      "19": {
        start: {
          line: 37,
          column: 10
        },
        end: {
          line: 37,
          column: 24
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "21": {
        start: {
          line: 42,
          column: 10
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "22": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "23": {
        start: {
          line: 56,
          column: 10
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "24": {
        start: {
          line: 58,
          column: 10
        },
        end: {
          line: 61,
          column: 12
        }
      },
      "25": {
        start: {
          line: 62,
          column: 10
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "27": {
        start: {
          line: 67,
          column: 10
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "28": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "29": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "30": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 86
        }
      },
      "31": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "32": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 50
        }
      },
      "33": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "34": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "35": {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 89,
          column: 56
        }
      },
      "36": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "37": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 75
        }
      },
      "38": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "39": {
        start: {
          line: 99,
          column: 10
        },
        end: {
          line: 101,
          column: 12
        }
      },
      "40": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "41": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 61
        }
      },
      "42": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "43": {
        start: {
          line: 107,
          column: 39
        },
        end: {
          line: 107,
          column: 68
        }
      },
      "44": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 26
        }
      },
      "45": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "46": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 173,
          column: 1
        }
      },
      "47": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 172,
          column: 3
        }
      },
      "48": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "49": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 92
        }
      },
      "50": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "51": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 83
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "53": {
        start: {
          line: 133,
          column: 35
        },
        end: {
          line: 133,
          column: 72
        }
      },
      "54": {
        start: {
          line: 135,
          column: 35
        },
        end: {
          line: 135,
          column: 60
        }
      },
      "55": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "56": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "57": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 49
        }
      },
      "58": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 68
        }
      },
      "59": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 44
        }
      },
      "60": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 47
        }
      },
      "61": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "62": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 58
        }
      },
      "63": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "64": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 20
        }
      },
      "65": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 51
        }
      },
      "66": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "67": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "68": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 49
        }
      },
      "69": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 36
        }
      },
      "70": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 20
        }
      },
      "71": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 71
        }
      },
      "72": {
        start: {
          line: 178,
          column: 22
        },
        end: {
          line: 212,
          column: 1
        }
      },
      "73": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "74": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "75": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 86
        }
      },
      "76": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 22
        }
      },
      "77": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 55
        }
      },
      "78": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "79": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "80": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "81": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 37
        }
      },
      "82": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 51
        }
      },
      "83": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 52
        }
      },
      "84": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "85": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 28
        }
      },
      "86": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 22
        }
      },
      "87": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "88": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 205,
          column: 7
        }
      },
      "89": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 46
        }
      },
      "90": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 206,
          column: 73
        }
      },
      "91": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 208,
          column: 78
        }
      },
      "92": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 209,
          column: 23
        }
      },
      "93": {
        start: {
          line: 218,
          column: 21
        },
        end: {
          line: 267,
          column: 1
        }
      },
      "94": {
        start: {
          line: 219,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "95": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "96": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 85
        }
      },
      "97": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 22
        }
      },
      "98": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "99": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 227,
          column: 70
        }
      },
      "100": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "101": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 54
        }
      },
      "102": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "103": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 239,
          column: 7
        }
      },
      "104": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 63
        }
      },
      "105": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "106": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 45
        }
      },
      "107": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "108": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 42
        }
      },
      "109": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 80
        }
      },
      "110": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 38
        }
      },
      "111": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 61
        }
      },
      "112": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 46
        }
      },
      "113": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 52
        }
      },
      "114": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "115": {
        start: {
          line: 259,
          column: 6
        },
        end: {
          line: 259,
          column: 28
        }
      },
      "116": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 260,
          column: 22
        }
      },
      "117": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 261,
          column: 32
        }
      },
      "118": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 263,
          column: 78
        }
      },
      "119": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 264,
          column: 23
        }
      },
      "120": {
        start: {
          line: 272,
          column: 22
        },
        end: {
          line: 330,
          column: 1
        }
      },
      "121": {
        start: {
          line: 273,
          column: 2
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "122": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "123": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 306,
          column: 7
        }
      },
      "124": {
        start: {
          line: 278,
          column: 31
        },
        end: {
          line: 278,
          column: 97
        }
      },
      "125": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "126": {
        start: {
          line: 281,
          column: 10
        },
        end: {
          line: 281,
          column: 99
        }
      },
      "127": {
        start: {
          line: 284,
          column: 10
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "128": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "129": {
        start: {
          line: 288,
          column: 14
        },
        end: {
          line: 298,
          column: 15
        }
      },
      "130": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "131": {
        start: {
          line: 291,
          column: 18
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "132": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 41
        }
      },
      "133": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 310,
          column: 26
        }
      },
      "134": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "135": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 314,
          column: 18
        }
      },
      "136": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 317,
          column: 54
        }
      },
      "137": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "138": {
        start: {
          line: 321,
          column: 6
        },
        end: {
          line: 324,
          column: 7
        }
      },
      "139": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 49
        }
      },
      "140": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 36
        }
      },
      "141": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 20
        }
      },
      "142": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "143": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 56
        }
      },
      "144": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 50
        }
      },
      "145": {
        start: {
          line: 342,
          column: 0
        },
        end: {
          line: 344,
          column: 3
        }
      },
      "146": {
        start: {
          line: 343,
          column: 2
        },
        end: {
          line: 343,
          column: 24
        }
      },
      "147": {
        start: {
          line: 347,
          column: 0
        },
        end: {
          line: 353,
          column: 2
        }
      },
      "148": {
        start: {
          line: 355,
          column: 0
        },
        end: {
          line: 362,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 17
          }
        },
        loc: {
          start: {
            line: 11,
            column: 39
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 21
          }
        },
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 88,
            column: 41
          }
        },
        loc: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 88
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 27
          }
        },
        loc: {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 68
          }
        },
        line: 107
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 16
          }
        },
        loc: {
          start: {
            line: 110,
            column: 21
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 23
          }
        },
        loc: {
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 121
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 133,
            column: 22
          },
          end: {
            line: 133,
            column: 23
          }
        },
        loc: {
          start: {
            line: 133,
            column: 35
          },
          end: {
            line: 133,
            column: 72
          }
        },
        line: 133
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 135,
            column: 22
          },
          end: {
            line: 135,
            column: 23
          }
        },
        loc: {
          start: {
            line: 135,
            column: 35
          },
          end: {
            line: 135,
            column: 60
          }
        },
        line: 135
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 178,
            column: 22
          },
          end: {
            line: 178,
            column: 23
          }
        },
        loc: {
          start: {
            line: 178,
            column: 34
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 178
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 218,
            column: 22
          }
        },
        loc: {
          start: {
            line: 218,
            column: 42
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 218
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 272,
            column: 22
          },
          end: {
            line: 272,
            column: 23
          }
        },
        loc: {
          start: {
            line: 272,
            column: 34
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 272
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        loc: {
          start: {
            line: 334,
            column: 14
          },
          end: {
            line: 336,
            column: 3
          }
        },
        line: 334
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 10
          }
        },
        loc: {
          start: {
            line: 337,
            column: 20
          },
          end: {
            line: 339,
            column: 3
          }
        },
        line: 337
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 342,
            column: 9
          },
          end: {
            line: 342,
            column: 10
          }
        },
        loc: {
          start: {
            line: 342,
            column: 21
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 342
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 11,
            column: 34
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 41
          }
        }, {
          start: {
            line: 27,
            column: 45
          },
          end: {
            line: 27,
            column: 80
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 87
          }
        }, {
          start: {
            line: 127,
            column: 91
          },
          end: {
            line: 127,
            column: 92
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "12": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "13": {
        loc: {
          start: {
            line: 218,
            column: 28
          },
          end: {
            line: 218,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 35
          },
          end: {
            line: 218,
            column: 37
          }
        }],
        line: 218
      },
      "14": {
        loc: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "15": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "16": {
        loc: {
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 239,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 239,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "17": {
        loc: {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        }, {
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 250,
            column: 7
          }
        }],
        line: 244
      },
      "18": {
        loc: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "19": {
        loc: {
          start: {
            line: 278,
            column: 31
          },
          end: {
            line: 278,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 31
          },
          end: {
            line: 278,
            column: 92
          }
        }, {
          start: {
            line: 278,
            column: 96
          },
          end: {
            line: 278,
            column: 97
          }
        }],
        line: 278
      },
      "20": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "21": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "22": {
        loc: {
          start: {
            line: 291,
            column: 18
          },
          end: {
            line: 294,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 18
          },
          end: {
            line: 294,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "23": {
        loc: {
          start: {
            line: 291,
            column: 22
          },
          end: {
            line: 291,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 22
          },
          end: {
            line: 291,
            column: 29
          }
        }, {
          start: {
            line: 291,
            column: 33
          },
          end: {
            line: 291,
            column: 73
          }
        }],
        line: 291
      },
      "24": {
        loc: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "25": {
        loc: {
          start: {
            line: 321,
            column: 6
          },
          end: {
            line: 324,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 6
          },
          end: {
            line: 324,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b83ee67e980a63dc119c90cdd90195641fa385d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bml4c20m5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bml4c20m5();
const {
  MongoMemoryServer
} =
/* istanbul ignore next */
(cov_2bml4c20m5().s[0]++, require("mongodb-memory-server"));
const mongoose =
/* istanbul ignore next */
(cov_2bml4c20m5().s[1]++, require("mongoose"));
let mongod =
/* istanbul ignore next */
(cov_2bml4c20m5().s[2]++, null);
let connectPromise =
/* istanbul ignore next */
(cov_2bml4c20m5().s[3]++, null);

/**
 * Connect to the in-memory database with retry logic
 * @param {number} retries - Number of retry attempts
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[4]++;
const connect = async (retries =
/* istanbul ignore next */
(cov_2bml4c20m5().b[0][0]++, 3)) => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[0]++;
  cov_2bml4c20m5().s[5]++;
  // If we already have a connection promise, return it
  if (connectPromise) {
    /* istanbul ignore next */
    cov_2bml4c20m5().b[1][0]++;
    cov_2bml4c20m5().s[6]++;
    return connectPromise;
  } else
  /* istanbul ignore next */
  {
    cov_2bml4c20m5().b[1][1]++;
  }

  // If we're already connected, just return
  cov_2bml4c20m5().s[7]++;
  if (mongoose.connection.readyState === 1) {
    /* istanbul ignore next */
    cov_2bml4c20m5().b[2][0]++;
    cov_2bml4c20m5().s[8]++;
    return Promise.resolve();
  } else
  /* istanbul ignore next */
  {
    cov_2bml4c20m5().b[2][1]++;
  }

  // Create a new connection promise
  cov_2bml4c20m5().s[9]++;
  connectPromise = (async () => {
    /* istanbul ignore next */
    cov_2bml4c20m5().f[1]++;
    cov_2bml4c20m5().s[10]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[11]++, 1); attempt <= retries; attempt++) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[12]++;
      try {
        // Fallback URI in case mongo memory server fails
        let uri =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[13]++,
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[3][0]++, process.env.MONGODB_URI) ||
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[3][1]++, "mongodb://localhost:27017/test-db"));

        // Stop any existing MongoDB instance
        /* istanbul ignore next */
        cov_2bml4c20m5().s[14]++;
        if (mongod) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[4][0]++;
          cov_2bml4c20m5().s[15]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[16]++;
            await mongod.stop();
            /* istanbul ignore next */
            cov_2bml4c20m5().s[17]++;
            console.log("Stopped existing MongoDB Memory Server");
          } catch (stopError) {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[18]++;
            console.warn("Error stopping existing MongoDB Memory Server:", stopError.message);
          }
          /* istanbul ignore next */
          cov_2bml4c20m5().s[19]++;
          mongod = null;
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[4][1]++;
        }
        cov_2bml4c20m5().s[20]++;
        try {
          /* istanbul ignore next */
          cov_2bml4c20m5().s[21]++;
          // Try to use mongo memory server
          mongod = await MongoMemoryServer.create({
            instance: {
              dbName: "jest-test-db",
              port: 27017,
              // Using random port to avoid conflicts
              port: 27017 + Math.floor(Math.random() * 1000)
            },
            binary: {
              version: "6.0.4",
              downloadDir: "./.cache/mongodb-memory-server/mongodb-binaries"
            }
          });
          /* istanbul ignore next */
          cov_2bml4c20m5().s[22]++;
          uri = mongod.getUri();
          /* istanbul ignore next */
          cov_2bml4c20m5().s[23]++;
          console.log(`Using MongoDB Memory Server (attempt ${attempt}):`, uri);
        } catch (error) {
          /* istanbul ignore next */
          cov_2bml4c20m5().s[24]++;
          console.warn(`Failed to create MongoDB Memory Server (attempt ${attempt}), using fallback URI:`, uri);
          /* istanbul ignore next */
          cov_2bml4c20m5().s[25]++;
          console.error(error);
        }

        // Close any existing connections
        /* istanbul ignore next */
        cov_2bml4c20m5().s[26]++;
        if (mongoose.connection.readyState !== 0) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[5][0]++;
          cov_2bml4c20m5().s[27]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[28]++;
            await mongoose.connection.close();
            /* istanbul ignore next */
            cov_2bml4c20m5().s[29]++;
            console.log("Closed existing MongoDB connection");
          } catch (error) {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[30]++;
            console.warn("Error closing existing MongoDB connection:", error.message);
          }
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[5][1]++;
        }

        // Set connection options
        const mongooseOpts =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[31]++, {
          maxPoolSize: 10,
          serverSelectionTimeoutMS: 30000,
          // 30 seconds
          socketTimeoutMS: 45000,
          // 45 seconds
          connectTimeoutMS: 30000 // 30 seconds
        });

        // Connect to database
        /* istanbul ignore next */
        cov_2bml4c20m5().s[32]++;
        await mongoose.connect(uri, mongooseOpts);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[33]++;
        console.log("Connected to MongoDB successfully");

        // Setup connection event handlers
        /* istanbul ignore next */
        cov_2bml4c20m5().s[34]++;
        mongoose.connection.on("error", e => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[2]++;
          cov_2bml4c20m5().s[35]++;
          console.error("MongoDB connection error:", e);
        });

        // Connection successful, return
        /* istanbul ignore next */
        cov_2bml4c20m5().s[36]++;
        return;
      } catch (error) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[37]++;
        console.error(`MongoDB setup error on attempt ${attempt}:`, error);

        // If this was the last retry, throw the error
        /* istanbul ignore next */
        cov_2bml4c20m5().s[38]++;
        if (attempt === retries) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[6][0]++;
          cov_2bml4c20m5().s[39]++;
          throw new Error(`Failed to connect to MongoDB after ${retries} attempts: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[6][1]++;
        }

        // Wait before retrying (exponential backoff)
        const waitTime =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[40]++, Math.min(1000 * Math.pow(2, attempt - 1), 10000));
        /* istanbul ignore next */
        cov_2bml4c20m5().s[41]++;
        console.log(`Waiting ${waitTime}ms before retry...`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[42]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[3]++;
          cov_2bml4c20m5().s[43]++;
          return setTimeout(resolve, waitTime);
        });
      }
    }
  })().finally(() => {
    /* istanbul ignore next */
    cov_2bml4c20m5().f[4]++;
    cov_2bml4c20m5().s[44]++;
    // Reset the promise once resolved
    connectPromise = null;
  });
  /* istanbul ignore next */
  cov_2bml4c20m5().s[45]++;
  return connectPromise;
};

/**
 * Drop database, close the connection and stop mongod.
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[46]++;
const closeDatabase = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[5]++;
  cov_2bml4c20m5().s[47]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[48]++;
    // Check for pending operations before closing
    try {
      // Using internal Mongoose properties carefully
      // @ts-ignore
      const pendingOps =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[49]++,
      /* istanbul ignore next */
      (cov_2bml4c20m5().b[7][0]++, mongoose.connection.db?.s?.topology?.outstandingOperationCount) ||
      /* istanbul ignore next */
      (cov_2bml4c20m5().b[7][1]++, 0));
      /* istanbul ignore next */
      cov_2bml4c20m5().s[50]++;
      if (pendingOps > 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[8][0]++;
        cov_2bml4c20m5().s[51]++;
        console.log(`Waiting for ${pendingOps} pending operations to complete...`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[52]++;
        await Promise.race([
        // Wait for operations to complete
        new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[6]++;
          cov_2bml4c20m5().s[53]++;
          return setTimeout(resolve, pendingOps * 100);
        }),
        // Max timeout of 5 seconds
        new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bml4c20m5().f[7]++;
          cov_2bml4c20m5().s[54]++;
          return setTimeout(resolve, 5000);
        })]);
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[8][1]++;
      }
    } catch (e) {
      // Ignore errors when checking pending operations
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[55]++;
    if (mongoose.connection.readyState !== 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[9][0]++;
      cov_2bml4c20m5().s[56]++;
      try {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[57]++;
        await mongoose.connection.dropDatabase();
      } catch (dropError) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[58]++;
        console.warn("Error dropping database:", dropError.message);
      }
      /* istanbul ignore next */
      cov_2bml4c20m5().s[59]++;
      await mongoose.connection.close(true); // Force close
      /* istanbul ignore next */
      cov_2bml4c20m5().s[60]++;
      console.log("Closed MongoDB connection");
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[9][1]++;
    }
    cov_2bml4c20m5().s[61]++;
    if (mongod) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[10][0]++;
      cov_2bml4c20m5().s[62]++;
      await mongod.stop({
        doCleanup: true,
        force: true
      });
      /* istanbul ignore next */
      cov_2bml4c20m5().s[63]++;
      console.log("Stopped MongoDB Memory Server");
      /* istanbul ignore next */
      cov_2bml4c20m5().s[64]++;
      mongod = null;
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[10][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[65]++;
    console.error("Error closing MongoDB:", error);

    // Force cleanup in case of error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[66]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[67]++;
      if (mongoose.connection.readyState !== 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[11][0]++;
        cov_2bml4c20m5().s[68]++;
        mongoose.connection.removeAllListeners();
        /* istanbul ignore next */
        cov_2bml4c20m5().s[69]++;
        await mongoose.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[11][1]++;
      }
      cov_2bml4c20m5().s[70]++;
      mongod = null;
    } catch (finalError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[71]++;
      console.error("Final error during MongoDB cleanup:", finalError);
    }
  }
};

/**
 * Clear all collections in the database.
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[72]++;
const clearDatabase = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[8]++;
  cov_2bml4c20m5().s[73]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[74]++;
    if (mongoose.connection.readyState !== 1) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[12][0]++;
      cov_2bml4c20m5().s[75]++;
      console.warn("MongoDB not connected, attempting to connect before clearing...");
      /* istanbul ignore next */
      cov_2bml4c20m5().s[76]++;
      await connect();
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[12][1]++;
    }
    const collections =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[77]++, mongoose.connection.collections);
    const clearPromises =
    /* istanbul ignore next */
    (cov_2bml4c20m5().s[78]++, []);
    /* istanbul ignore next */
    cov_2bml4c20m5().s[79]++;
    for (const key in collections) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[80]++;
      clearPromises.push(collections[key].deleteMany({}));
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[81]++;
    await Promise.all(clearPromises);
    /* istanbul ignore next */
    cov_2bml4c20m5().s[82]++;
    console.log("Cleared all MongoDB collections");
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[83]++;
    console.error("Error clearing MongoDB:", error);

    // Try to reconnect and clear if there was an error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[84]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[85]++;
      await closeDatabase();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[86]++;
      await connect();
      const collections =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[87]++, mongoose.connection.collections);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[88]++;
      for (const key in collections) {
        /* istanbul ignore next */
        cov_2bml4c20m5().s[89]++;
        await collections[key].deleteMany({});
      }
      /* istanbul ignore next */
      cov_2bml4c20m5().s[90]++;
      console.log("Successfully cleared collections after reconnection");
    } catch (retryError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[91]++;
      console.error("Error clearing MongoDB after reconnection:", retryError);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[92]++;
      throw retryError;
    }
  }
};

/**
 * Seed the database with test data
 * @param {Object} data - The data to seed
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[93]++;
const seedDatabase = async (data =
/* istanbul ignore next */
(cov_2bml4c20m5().b[13][0]++, {})) => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[9]++;
  cov_2bml4c20m5().s[94]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[95]++;
    if (mongoose.connection.readyState !== 1) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[14][0]++;
      cov_2bml4c20m5().s[96]++;
      console.warn("MongoDB not connected, attempting to connect before seeding...");
      /* istanbul ignore next */
      cov_2bml4c20m5().s[97]++;
      await connect();
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[14][1]++;
    }

    // Only attempt to seed if we have data
    cov_2bml4c20m5().s[98]++;
    if (Object.keys(data).length === 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[15][0]++;
      cov_2bml4c20m5().s[99]++;
      console.log("No seed data provided, skipping database seeding");
      /* istanbul ignore next */
      cov_2bml4c20m5().s[100]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[15][1]++;
    }
    cov_2bml4c20m5().s[101]++;
    console.log("Seeding database with test data...");

    // Process each collection in the data object
    /* istanbul ignore next */
    cov_2bml4c20m5().s[102]++;
    for (const [modelName, documents] of Object.entries(data)) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[103]++;
      // Skip if model doesn't exist
      if (!mongoose.models[modelName]) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[16][0]++;
        cov_2bml4c20m5().s[104]++;
        console.warn(`Model ${modelName} not found, skipping`);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[105]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[16][1]++;
      }
      const model =
      /* istanbul ignore next */
      (cov_2bml4c20m5().s[106]++, mongoose.model(modelName));

      // Insert many documents or a single one
      /* istanbul ignore next */
      cov_2bml4c20m5().s[107]++;
      if (Array.isArray(documents)) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[17][0]++;
        cov_2bml4c20m5().s[108]++;
        await model.insertMany(documents);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[109]++;
        console.log(`Inserted ${documents.length} documents into ${modelName}`);
      } else {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[17][1]++;
        cov_2bml4c20m5().s[110]++;
        await model.create(documents);
        /* istanbul ignore next */
        cov_2bml4c20m5().s[111]++;
        console.log(`Inserted 1 document into ${modelName}`);
      }
    }
    /* istanbul ignore next */
    cov_2bml4c20m5().s[112]++;
    console.log("Database seeding completed");
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[113]++;
    console.error("Error seeding database:", error);

    // Try to reconnect and seed if there was an error
    /* istanbul ignore next */
    cov_2bml4c20m5().s[114]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[115]++;
      await closeDatabase();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[116]++;
      await connect();
      /* istanbul ignore next */
      cov_2bml4c20m5().s[117]++;
      return seedDatabase(data); // Retry once
    } catch (retryError) {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[118]++;
      console.error("Error seeding database after reconnection:", retryError);
      /* istanbul ignore next */
      cov_2bml4c20m5().s[119]++;
      throw retryError;
    }
  }
};

/**
 * Check for and cleanup any leaked connections
 */
/* istanbul ignore next */
cov_2bml4c20m5().s[120]++;
const checkForLeaks = async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[10]++;
  cov_2bml4c20m5().s[121]++;
  try {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[122]++;
    if (mongoose.connection.readyState !== 0) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[18][0]++;
      cov_2bml4c20m5().s[123]++;
      // Check for pending operations
      try {
        // @ts-ignore - Access internal properties
        const pendingQueries =
        /* istanbul ignore next */
        (cov_2bml4c20m5().s[124]++,
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[19][0]++, mongoose.connection.db?.s?.topology?.s?.state?.operationCount) ||
        /* istanbul ignore next */
        (cov_2bml4c20m5().b[19][1]++, 0));
        /* istanbul ignore next */
        cov_2bml4c20m5().s[125]++;
        if (pendingQueries > 0) {
          /* istanbul ignore next */
          cov_2bml4c20m5().b[20][0]++;
          cov_2bml4c20m5().s[126]++;
          console.warn(`⚠️ Detected ${pendingQueries} pending database operations before cleanup`);

          // Force cleanup of sessions if possible
          /* istanbul ignore next */
          cov_2bml4c20m5().s[127]++;
          try {
            /* istanbul ignore next */
            cov_2bml4c20m5().s[128]++;
            // @ts-ignore - Access internal properties
            if (mongoose.connection.db?.s?.topology?.s?.sessions) {
              /* istanbul ignore next */
              cov_2bml4c20m5().b[21][0]++;
              cov_2bml4c20m5().s[129]++;
              // @ts-ignore - Access internal properties
              for (const session of Object.values(mongoose.connection.db.s.topology.s.sessions)) {
                /* istanbul ignore next */
                cov_2bml4c20m5().s[130]++;
                try {
                  /* istanbul ignore next */
                  cov_2bml4c20m5().s[131]++;
                  // @ts-ignore - Access internal session to force end it
                  if (
                  /* istanbul ignore next */
                  (cov_2bml4c20m5().b[23][0]++, session) &&
                  /* istanbul ignore next */
                  (cov_2bml4c20m5().b[23][1]++, typeof session.endSession === "function")) {
                    /* istanbul ignore next */
                    cov_2bml4c20m5().b[22][0]++;
                    cov_2bml4c20m5().s[132]++;
                    // @ts-ignore
                    session.endSession();
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2bml4c20m5().b[22][1]++;
                  }
                } catch (e) {
                  // Ignore session errors
                }
              }
            } else
            /* istanbul ignore next */
            {
              cov_2bml4c20m5().b[21][1]++;
            }
          } catch (e) {
            // Ignore session cleanup errors
          }
        } else
        /* istanbul ignore next */
        {
          cov_2bml4c20m5().b[20][1]++;
        }
      } catch (e) {
        // Ignore errors checking for leaks
      }
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[18][1]++;
    }

    // Ensure clean disconnect
    cov_2bml4c20m5().s[133]++;
    await closeDatabase();

    // Extra cleanup for memory management
    /* istanbul ignore next */
    cov_2bml4c20m5().s[134]++;
    if (global.gc) {
      /* istanbul ignore next */
      cov_2bml4c20m5().b[24][0]++;
      cov_2bml4c20m5().s[135]++;
      global.gc(); // Force garbage collection if available
    } else
    /* istanbul ignore next */
    {
      cov_2bml4c20m5().b[24][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2bml4c20m5().s[136]++;
    console.error("Error checking for leaks:", error);

    // Force final cleanup
    /* istanbul ignore next */
    cov_2bml4c20m5().s[137]++;
    try {
      /* istanbul ignore next */
      cov_2bml4c20m5().s[138]++;
      if (mongoose.connection.readyState !== 0) {
        /* istanbul ignore next */
        cov_2bml4c20m5().b[25][0]++;
        cov_2bml4c20m5().s[139]++;
        mongoose.connection.removeAllListeners();
        /* istanbul ignore next */
        cov_2bml4c20m5().s[140]++;
        await mongoose.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_2bml4c20m5().b[25][1]++;
      }
      cov_2bml4c20m5().s[141]++;
      mongod = null;
    } catch (e) {
      // Ignore final cleanup errors
    }
  }
};

// Connect to database before tests start
/* istanbul ignore next */
cov_2bml4c20m5().s[142]++;
connect().then(() => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[11]++;
  cov_2bml4c20m5().s[143]++;
  console.log("MongoDB setup completed successfully");
}).catch(error => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[12]++;
  cov_2bml4c20m5().s[144]++;
  console.error("MongoDB setup failed:", error);
});

// Close database connection after tests finish
/* istanbul ignore next */
cov_2bml4c20m5().s[145]++;
afterAll(async () => {
  /* istanbul ignore next */
  cov_2bml4c20m5().f[13]++;
  cov_2bml4c20m5().s[146]++;
  await checkForLeaks();
});

// Make helpers available globally
/* istanbul ignore next */
cov_2bml4c20m5().s[147]++;
global.mongoTestUtils = {
  connect,
  closeDatabase,
  clearDatabase,
  seedDatabase,
  checkForLeaks
};
/* istanbul ignore next */
cov_2bml4c20m5().s[148]++;
module.exports = {
  connect,
  closeDatabase,
  clearDatabase,
  seedDatabase,
  checkForLeaks,
  mongod
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,