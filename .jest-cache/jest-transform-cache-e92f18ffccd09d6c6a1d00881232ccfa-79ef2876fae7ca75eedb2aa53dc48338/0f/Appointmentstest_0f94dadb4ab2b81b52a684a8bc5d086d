df6acc82f495da24c48077d122cb719f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _AuthContext = require("../../context/AuthContext");
var _Appointments = _interopRequireDefault(require("../../pages/Appointments"));
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["providerProps"];
var _jsxFileName = "C:\\Users\\olari\\Downloads\\healthcare-main\\healthcare-main\\HealthcareSync\\frontend\\src\\components\\__tests__\\Appointments.test.js";
import React from "react";
var __jsx = React.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
const renderWithAuth = (ui, _ref) => {
  let {
      providerProps
    } = _ref,
    renderOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext.AuthContext.Provider, _objectSpread(_objectSpread({}, providerProps), {}, {
    children: ui
  })), renderOptions);
};
describe('Appointments Component', () => {
  test('renders Appointments component for authorized users', () => {
    const providerProps = {
      value: {
        user: {
          role: 'patient'
        }
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_Appointments.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Appointments/i)).toBeInTheDocument();
    expect(_react2.screen.getByText(/Manage your appointments/i)).toBeInTheDocument();
  });
  test('denies access for unauthorized users', () => {
    const providerProps = {
      value: {
        user: null
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_Appointments.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Access Denied/i)).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfQXV0aENvbnRleHQiLCJfQXBwb2ludG1lbnRzIiwiX2pzeFJ1bnRpbWUiLCJfZXhjbHVkZWQiLCJfanN4RmlsZU5hbWUiLCJSZWFjdCIsIl9fanN4IiwiY3JlYXRlRWxlbWVudCIsIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJkZWZhdWx0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsInJlbmRlcldpdGhBdXRoIiwidWkiLCJfcmVmIiwicHJvdmlkZXJQcm9wcyIsInJlbmRlck9wdGlvbnMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwicmVuZGVyIiwianN4IiwiQXV0aENvbnRleHQiLCJQcm92aWRlciIsImNoaWxkcmVuIiwiZGVzY3JpYmUiLCJ0ZXN0IiwidmFsdWUiLCJ1c2VyIiwicm9sZSIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50Il0sInNvdXJjZXMiOlsiQXBwb2ludG1lbnRzLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgeyBBdXRoQ29udGV4dCB9IGZyb20gJy4uLy4uL2NvbnRleHQvQXV0aENvbnRleHQnO1xuaW1wb3J0IEFwcG9pbnRtZW50cyBmcm9tICcuLi8uLi9wYWdlcy9BcHBvaW50bWVudHMnO1xuXG5jb25zdCByZW5kZXJXaXRoQXV0aCA9ICh1aSwgeyBwcm92aWRlclByb3BzLCAuLi5yZW5kZXJPcHRpb25zIH0pID0+IHtcbiAgICByZXR1cm4gcmVuZGVyKFxuICAgICAgICA8QXV0aENvbnRleHQuUHJvdmlkZXIgey4uLnByb3ZpZGVyUHJvcHN9Pnt1aX08L0F1dGhDb250ZXh0LlByb3ZpZGVyPixcbiAgICAgICAgcmVuZGVyT3B0aW9uc1xuICAgICk7XG59O1xuXG5kZXNjcmliZSgnQXBwb2ludG1lbnRzIENvbXBvbmVudCcsICgpID0+IHtcbiAgICB0ZXN0KCdyZW5kZXJzIEFwcG9pbnRtZW50cyBjb21wb25lbnQgZm9yIGF1dGhvcml6ZWQgdXNlcnMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyUHJvcHMgPSB7XG4gICAgICAgICAgICB2YWx1ZTogeyB1c2VyOiB7IHJvbGU6ICdwYXRpZW50JyB9IH0sXG4gICAgICAgIH07XG4gICAgICAgIHJlbmRlcldpdGhBdXRoKDxBcHBvaW50bWVudHMgLz4sIHsgcHJvdmlkZXJQcm9wcyB9KTtcblxuICAgICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgvQXBwb2ludG1lbnRzL2kpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgvTWFuYWdlIHlvdXIgYXBwb2ludG1lbnRzL2kpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnZGVuaWVzIGFjY2VzcyBmb3IgdW5hdXRob3JpemVkIHVzZXJzJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwcm92aWRlclByb3BzID0ge1xuICAgICAgICAgICAgdmFsdWU6IHsgdXNlcjogbnVsbCB9LFxuICAgICAgICB9O1xuICAgICAgICByZW5kZXJXaXRoQXV0aCg8QXBwb2ludG1lbnRzIC8+LCB7IHByb3ZpZGVyUHJvcHMgfSk7XG5cbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL0FjY2VzcyBEZW5pZWQvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG59KTsgIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFlBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUFvRCxJQUFBSSxXQUFBLEdBQUFKLE9BQUE7QUFBQSxNQUFBSyxTQUFBO0FBQUEsSUFBQUMsWUFBQTtBQUFBLE9BQUFDLEtBQUE7QUFBQSxJQUFBQyxLQUFBLEdBQUFELEtBQUEsQ0FBQUUsYUFBQTtBQUFBLFNBQUFDLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQUMsQ0FBQSxHQUFBSCxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBSyxDQUFBLEdBQUFBLENBQUEsQ0FBQUMsTUFBQSxXQUFBTixDQUFBLFdBQUFFLE1BQUEsQ0FBQUssd0JBQUEsQ0FBQVIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFRLFVBQUEsT0FBQVAsQ0FBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsQ0FBQSxFQUFBSSxDQUFBLFlBQUFKLENBQUE7QUFBQSxTQUFBVSxjQUFBWixDQUFBLGFBQUFDLENBQUEsTUFBQUEsQ0FBQSxHQUFBWSxTQUFBLENBQUFDLE1BQUEsRUFBQWIsQ0FBQSxVQUFBQyxDQUFBLFdBQUFXLFNBQUEsQ0FBQVosQ0FBQSxJQUFBWSxTQUFBLENBQUFaLENBQUEsUUFBQUEsQ0FBQSxPQUFBRixPQUFBLENBQUFJLE1BQUEsQ0FBQUQsQ0FBQSxPQUFBYSxPQUFBLFdBQUFkLENBQUEsUUFBQWUsZ0JBQUEsQ0FBQUMsT0FBQSxFQUFBakIsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsQ0FBQUQsQ0FBQSxTQUFBRSxNQUFBLENBQUFlLHlCQUFBLEdBQUFmLE1BQUEsQ0FBQWdCLGdCQUFBLENBQUFuQixDQUFBLEVBQUFHLE1BQUEsQ0FBQWUseUJBQUEsQ0FBQWhCLENBQUEsS0FBQUgsT0FBQSxDQUFBSSxNQUFBLENBQUFELENBQUEsR0FBQWEsT0FBQSxXQUFBZCxDQUFBLElBQUFFLE1BQUEsQ0FBQWlCLGNBQUEsQ0FBQXBCLENBQUEsRUFBQUMsQ0FBQSxFQUFBRSxNQUFBLENBQUFLLHdCQUFBLENBQUFOLENBQUEsRUFBQUQsQ0FBQSxpQkFBQUQsQ0FBQTtBQUVwRCxNQUFNcUIsY0FBYyxHQUFHQSxDQUFDQyxFQUFFLEVBQUFDLElBQUEsS0FBMEM7RUFBQSxJQUF4QztNQUFFQztJQUFnQyxDQUFDLEdBQUFELElBQUE7SUFBZkUsYUFBYSxPQUFBQyx5QkFBQSxDQUFBVCxPQUFBLEVBQUFNLElBQUEsRUFBQTdCLFNBQUE7RUFDekQsT0FBTyxJQUFBaUMsY0FBTSxlQUNULElBQUFsQyxXQUFBLENBQUFtQyxHQUFBLEVBQUNyQyxZQUFBLENBQUFzQyxXQUFXLENBQUNDLFFBQVEsRUFBQWxCLGFBQUEsQ0FBQUEsYUFBQSxLQUFLWSxhQUFhO0lBQUFPLFFBQUEsRUFBR1Q7RUFBRSxFQUF1QixDQUFDLEVBQ3BFRyxhQUNKLENBQUM7QUFDTCxDQUFDO0FBRURPLFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxNQUFNO0VBQ3JDQyxJQUFJLENBQUMscURBQXFELEVBQUUsTUFBTTtJQUM5RCxNQUFNVCxhQUFhLEdBQUc7TUFDbEJVLEtBQUssRUFBRTtRQUFFQyxJQUFJLEVBQUU7VUFBRUMsSUFBSSxFQUFFO1FBQVU7TUFBRTtJQUN2QyxDQUFDO0lBQ0RmLGNBQWMsY0FBQyxJQUFBNUIsV0FBQSxDQUFBbUMsR0FBQSxFQUFDcEMsYUFBQSxDQUFBeUIsT0FBWSxJQUFFLENBQUMsRUFBRTtNQUFFTztJQUFjLENBQUMsQ0FBQztJQUVuRGEsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzdESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztFQUM3RSxDQUFDLENBQUM7RUFFRlAsSUFBSSxDQUFDLHNDQUFzQyxFQUFFLE1BQU07SUFDL0MsTUFBTVQsYUFBYSxHQUFHO01BQ2xCVSxLQUFLLEVBQUU7UUFBRUMsSUFBSSxFQUFFO01BQUs7SUFDeEIsQ0FBQztJQUNEZCxjQUFjLGNBQUMsSUFBQTVCLFdBQUEsQ0FBQW1DLEdBQUEsRUFBQ3BDLGFBQUEsQ0FBQXlCLE9BQVksSUFBRSxDQUFDLEVBQUU7TUFBRU87SUFBYyxDQUFDLENBQUM7SUFFbkRhLE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0VBQ2xFLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==