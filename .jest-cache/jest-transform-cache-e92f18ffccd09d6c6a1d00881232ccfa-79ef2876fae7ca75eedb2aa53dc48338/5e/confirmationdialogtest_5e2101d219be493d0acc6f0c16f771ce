b422485364cccfe7a627ccebd39c54b4
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _vitest = require("vitest");
var _react = require("@testing-library/react");
var _confirmationDialog = require("@/components/confirmation-dialog");
var _jsxRuntime = require("react/jsx-runtime");
var _jsxFileName = "C:\\Users\\olari\\Downloads\\healthcare-main\\healthcare-main\\__tests__\\components\\confirmation-dialog.test.tsx";
import React from "react";
var __jsx = React.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
(0, _vitest.describe)('ConfirmationDialog', () => {
  const defaultProps = {
    open: true,
    onOpenChange: _vitest.vi.fn(),
    onConfirm: _vitest.vi.fn(),
    title: 'Test Title',
    description: 'Test Description',
    actionLabel: 'Confirm',
    cancelLabel: 'Cancel'
  };
  (0, _vitest.it)('should render with default props', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread({}, defaultProps)));
    (0, _vitest.expect)(_react.screen.getByText('Test Title')).toBeInTheDocument();
    (0, _vitest.expect)(_react.screen.getByText('Test Description')).toBeInTheDocument();
    (0, _vitest.expect)(_react.screen.getByText('Confirm')).toBeInTheDocument();
    (0, _vitest.expect)(_react.screen.getByText('Cancel')).toBeInTheDocument();
  });
  (0, _vitest.it)('should call onConfirm when confirm button is clicked', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread({}, defaultProps)));
    _react.fireEvent.click(_react.screen.getByText('Confirm'));
    (0, _vitest.expect)(defaultProps.onConfirm).toHaveBeenCalledTimes(1);
  });
  (0, _vitest.it)('should call onOpenChange when cancel button is clicked', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread({}, defaultProps)));
    _react.fireEvent.click(_react.screen.getByText('Cancel'));
    (0, _vitest.expect)(defaultProps.onOpenChange).toHaveBeenCalledWith(false);
  });
  (0, _vitest.it)('should not render when open is false', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread(_objectSpread({}, defaultProps), {}, {
      open: false
    })));
    (0, _vitest.expect)(_react.screen.queryByText('Test Title')).not.toBeInTheDocument();
    (0, _vitest.expect)(_react.screen.queryByText('Test Description')).not.toBeInTheDocument();
  });
  (0, _vitest.it)('should render with destructive variant', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread(_objectSpread({}, defaultProps), {}, {
      variant: "destructive"
    })));
    const confirmButton = _react.screen.getByText('Confirm');
    (0, _vitest.expect)(confirmButton).toHaveClass('bg-destructive');
  });
  (0, _vitest.it)('should render with custom labels', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread(_objectSpread({}, defaultProps), {}, {
      actionLabel: "Delete",
      cancelLabel: "Go Back"
    })));
    (0, _vitest.expect)(_react.screen.getByText('Delete')).toBeInTheDocument();
    (0, _vitest.expect)(_react.screen.getByText('Go Back')).toBeInTheDocument();
  });
  (0, _vitest.it)('should handle keyboard interactions', () => {
    (0, _react.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_confirmationDialog.ConfirmationDialog, _objectSpread({}, defaultProps)));

    // Press Escape key
    _react.fireEvent.keyDown(document.body, {
      key: 'Escape'
    });
    (0, _vitest.expect)(defaultProps.onOpenChange).toHaveBeenCalledWith(false);

    // Press Enter key on confirm button
    _react.fireEvent.keyDown(_react.screen.getByText('Confirm'), {
      key: 'Enter'
    });
    (0, _vitest.expect)(defaultProps.onConfirm).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,