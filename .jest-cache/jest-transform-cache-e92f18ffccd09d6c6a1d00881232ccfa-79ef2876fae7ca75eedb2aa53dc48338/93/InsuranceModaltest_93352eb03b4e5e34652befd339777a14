ee17734f1f63d552b1b7d260c4a955a9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom/extend-expect");
var _InsuranceModal = _interopRequireDefault(require("../InsuranceModal"));
var _jsxRuntime = require("react/jsx-runtime");
var _jsxFileName = "C:\\Users\\olari\\Downloads\\healthcare-main\\healthcare-main\\HealthcareSync\\frontend\\src\\pages\\src\\components\\billing\\__tests__\\InsuranceModal.test.js";
import React from "react";
var __jsx = React.createElement;
const mockInsurance = {
  provider: 'Health Insurance Co',
  policyNumber: '123456789',
  coverageType: 'Full',
  expiryDate: '2025-12-31'
};
describe('InsuranceModal Component', () => {
  test('renders without crashing', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
      show: true,
      editingInsurance: mockInsurance
    }));
    expect(_react2.screen.getByText('Insurance Information')).toBeInTheDocument();
  });
  test('displays insurance details correctly', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
      show: true,
      editingInsurance: mockInsurance
    }));
    expect(_react2.screen.getByDisplayValue('Health Insurance Co')).toBeInTheDocument();
    expect(_react2.screen.getByDisplayValue('123456789')).toBeInTheDocument();
  });
  test('handles form submission', () => {
    const handleSubmit = jest.fn();
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
      show: true,
      editingInsurance: mockInsurance,
      onSubmit: handleSubmit
    }));
    _react2.fireEvent.click(_react2.screen.getByText('Save'));
    expect(handleSubmit).toHaveBeenCalled();
  });
});

// Test to check if InsuranceModal renders correctly when not visible
it('does not render when show is false', () => {
  (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
    show: false
  }));
  expect(_react2.screen.queryByText(/add insurance/i)).not.toBeInTheDocument();
});

// Test to check if InsuranceModal renders correctly when visible
it('renders correctly when show is true', () => {
  (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
    show: true,
    onClose: () => {},
    onSubmit: () => {}
  }));
  expect(_react2.screen.getByText(/add insurance/i)).toBeInTheDocument();
});

// Test to check if InsuranceModal calls onClose when cancel button is clicked
it('calls onClose when cancel button is clicked', () => {
  const onClose = jest.fn();
  (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_InsuranceModal.default, {
    show: true,
    onClose: onClose,
    onSubmit: () => {}
  }));
  _react2.fireEvent.click(_react2.screen.getByText(/cancel/i));
  expect(onClose).toHaveBeenCalled();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfSW5zdXJhbmNlTW9kYWwiLCJfanN4UnVudGltZSIsIl9qc3hGaWxlTmFtZSIsIlJlYWN0IiwiX19qc3giLCJjcmVhdGVFbGVtZW50IiwibW9ja0luc3VyYW5jZSIsInByb3ZpZGVyIiwicG9saWN5TnVtYmVyIiwiY292ZXJhZ2VUeXBlIiwiZXhwaXJ5RGF0ZSIsImRlc2NyaWJlIiwidGVzdCIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJzaG93IiwiZWRpdGluZ0luc3VyYW5jZSIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50IiwiZ2V0QnlEaXNwbGF5VmFsdWUiLCJoYW5kbGVTdWJtaXQiLCJqZXN0IiwiZm4iLCJvblN1Ym1pdCIsImZpcmVFdmVudCIsImNsaWNrIiwidG9IYXZlQmVlbkNhbGxlZCIsIml0IiwicXVlcnlCeVRleHQiLCJub3QiLCJvbkNsb3NlIl0sInNvdXJjZXMiOlsiSW5zdXJhbmNlTW9kYWwudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0ICdAdGVzdGluZy1saWJyYXJ5L2plc3QtZG9tL2V4dGVuZC1leHBlY3QnO1xuaW1wb3J0IEluc3VyYW5jZU1vZGFsIGZyb20gJy4uL0luc3VyYW5jZU1vZGFsJztcblxuY29uc3QgbW9ja0luc3VyYW5jZSA9IHtcbiAgcHJvdmlkZXI6ICdIZWFsdGggSW5zdXJhbmNlIENvJyxcbiAgcG9saWN5TnVtYmVyOiAnMTIzNDU2Nzg5JyxcbiAgY292ZXJhZ2VUeXBlOiAnRnVsbCcsXG4gIGV4cGlyeURhdGU6ICcyMDI1LTEyLTMxJ1xufTtcblxuZGVzY3JpYmUoJ0luc3VyYW5jZU1vZGFsIENvbXBvbmVudCcsICgpID0+IHtcbiAgdGVzdCgncmVuZGVycyB3aXRob3V0IGNyYXNoaW5nJywgKCkgPT4ge1xuICAgIHJlbmRlcig8SW5zdXJhbmNlTW9kYWwgc2hvdz17dHJ1ZX0gZWRpdGluZ0luc3VyYW5jZT17bW9ja0luc3VyYW5jZX0gLz4pO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdJbnN1cmFuY2UgSW5mb3JtYXRpb24nKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnZGlzcGxheXMgaW5zdXJhbmNlIGRldGFpbHMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIHJlbmRlcig8SW5zdXJhbmNlTW9kYWwgc2hvdz17dHJ1ZX0gZWRpdGluZ0luc3VyYW5jZT17bW9ja0luc3VyYW5jZX0gLz4pO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlEaXNwbGF5VmFsdWUoJ0hlYWx0aCBJbnN1cmFuY2UgQ28nKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5RGlzcGxheVZhbHVlKCcxMjM0NTY3ODknKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnaGFuZGxlcyBmb3JtIHN1Ym1pc3Npb24nLCAoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlU3VibWl0ID0gamVzdC5mbigpO1xuICAgIHJlbmRlcig8SW5zdXJhbmNlTW9kYWwgc2hvdz17dHJ1ZX0gZWRpdGluZ0luc3VyYW5jZT17bW9ja0luc3VyYW5jZX0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0gLz4pO1xuICAgIGZpcmVFdmVudC5jbGljayhzY3JlZW4uZ2V0QnlUZXh0KCdTYXZlJykpO1xuICAgIGV4cGVjdChoYW5kbGVTdWJtaXQpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSk7XG59KTtcblxuLy8gVGVzdCB0byBjaGVjayBpZiBJbnN1cmFuY2VNb2RhbCByZW5kZXJzIGNvcnJlY3RseSB3aGVuIG5vdCB2aXNpYmxlXG5pdCgnZG9lcyBub3QgcmVuZGVyIHdoZW4gc2hvdyBpcyBmYWxzZScsICgpID0+IHtcbiAgcmVuZGVyKDxJbnN1cmFuY2VNb2RhbCBzaG93PXtmYWxzZX0gLz4pO1xuICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXh0KC9hZGQgaW5zdXJhbmNlL2kpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKTtcbn0pO1xuXG4vLyBUZXN0IHRvIGNoZWNrIGlmIEluc3VyYW5jZU1vZGFsIHJlbmRlcnMgY29ycmVjdGx5IHdoZW4gdmlzaWJsZVxuaXQoJ3JlbmRlcnMgY29ycmVjdGx5IHdoZW4gc2hvdyBpcyB0cnVlJywgKCkgPT4ge1xuICByZW5kZXIoPEluc3VyYW5jZU1vZGFsIHNob3c9e3RydWV9IG9uQ2xvc2U9eygpID0+IHt9fSBvblN1Ym1pdD17KCkgPT4ge319IC8+KTtcbiAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL2FkZCBpbnN1cmFuY2UvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG59KTtcblxuLy8gVGVzdCB0byBjaGVjayBpZiBJbnN1cmFuY2VNb2RhbCBjYWxscyBvbkNsb3NlIHdoZW4gY2FuY2VsIGJ1dHRvbiBpcyBjbGlja2VkXG5pdCgnY2FsbHMgb25DbG9zZSB3aGVuIGNhbmNlbCBidXR0b24gaXMgY2xpY2tlZCcsICgpID0+IHtcbiAgY29uc3Qgb25DbG9zZSA9IGplc3QuZm4oKTtcbiAgcmVuZGVyKDxJbnN1cmFuY2VNb2RhbCBzaG93PXt0cnVlfSBvbkNsb3NlPXtvbkNsb3NlfSBvblN1Ym1pdD17KCkgPT4ge319IC8+KTtcbiAgZmlyZUV2ZW50LmNsaWNrKHNjcmVlbi5nZXRCeVRleHQoL2NhbmNlbC9pKSk7XG4gIGV4cGVjdChvbkNsb3NlKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG59KTsgIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFDQUEsT0FBQTtBQUNBLElBQUFFLGVBQUEsR0FBQUgs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