890cdca3b599ad896149f69b8fa8fa48
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
require("@testing-library/jest-dom/extend-expect");
var _Billing = _interopRequireDefault(require("../Billing"));
var _AuthContext = require("../../contexts/AuthContext");
var _jsxRuntime = require("react/jsx-runtime");
var _jsxFileName = "C:\\Users\\olari\\Downloads\\healthcare-main\\healthcare-main\\HealthcareSync\\frontend\\src\\pages\\src\\components\\billing\\__tests__\\Billing.test.js";
import React from "react";
var __jsx = React.createElement;
describe('Billing Component', () => {
  const mockUser = {
    id: 1,
    name: 'John Doe',
    email: 'john@example.com',
    role: 'PATIENT'
  };
  const mockBillingData = {
    invoices: [{
      id: 1,
      amount: 100,
      date: '2024-03-20',
      status: 'PENDING'
    }],
    insurance: {
      provider: 'Test Insurance',
      policyNumber: '12345'
    }
  };
  it('renders billing information', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext.AuthContext.Provider, {
      value: {
        user: mockUser
      },
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Billing.default, {
        data: mockBillingData
      })
    }));
    expect(_react2.screen.getByText('Billing Dashboard')).toBeInTheDocument();
    expect(_react2.screen.getByText('Test Insurance')).toBeInTheDocument();
    expect(_react2.screen.getByText('12345')).toBeInTheDocument();
    expect(_react2.screen.getByText('$100')).toBeInTheDocument();
  });
  it('handles payment submission', () => {
    const mockHandlePayment = jest.fn();
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext.AuthContext.Provider, {
      value: {
        user: mockUser
      },
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Billing.default, {
        data: mockBillingData,
        onPayment: mockHandlePayment
      })
    }));
    _react2.fireEvent.click(_react2.screen.getByText('Pay Now'));
    expect(mockHandlePayment).toHaveBeenCalledWith(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfQmlsbGluZyIsIl9BdXRoQ29udGV4dCIsIl9qc3hSdW50aW1lIiwiX2pzeEZpbGVOYW1lIiwiUmVhY3QiLCJfX2pzeCIsImNyZWF0ZUVsZW1lbnQiLCJkZXNjcmliZSIsIm1vY2tVc2VyIiwiaWQiLCJuYW1lIiwiZW1haWwiLCJyb2xlIiwibW9ja0JpbGxpbmdEYXRhIiwiaW52b2ljZXMiLCJhbW91bnQiLCJkYXRlIiwic3RhdHVzIiwiaW5zdXJhbmNlIiwicHJvdmlkZXIiLCJwb2xpY3lOdW1iZXIiLCJpdCIsInJlbmRlciIsImpzeCIsIkF1dGhDb250ZXh0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZXIiLCJjaGlsZHJlbiIsImRlZmF1bHQiLCJkYXRhIiwiZXhwZWN0Iiwic2NyZWVuIiwiZ2V0QnlUZXh0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJtb2NrSGFuZGxlUGF5bWVudCIsImplc3QiLCJmbiIsIm9uUGF5bWVudCIsImZpcmVFdmVudCIsImNsaWNrIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiXSwic291cmNlcyI6WyJCaWxsaW5nLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCAnQHRlc3RpbmctbGlicmFyeS9qZXN0LWRvbS9leHRlbmQtZXhwZWN0JztcbmltcG9ydCBCaWxsaW5nIGZyb20gJy4uL0JpbGxpbmcnO1xuaW1wb3J0IHsgQXV0aENvbnRleHQgfSBmcm9tICcuLi8uLi9jb250ZXh0cy9BdXRoQ29udGV4dCc7XG5cbmRlc2NyaWJlKCdCaWxsaW5nIENvbXBvbmVudCcsICgpID0+IHtcbiAgY29uc3QgbW9ja1VzZXIgPSB7XG4gICAgaWQ6IDEsXG4gICAgbmFtZTogJ0pvaG4gRG9lJyxcbiAgICBlbWFpbDogJ2pvaG5AZXhhbXBsZS5jb20nLFxuICAgIHJvbGU6ICdQQVRJRU5UJ1xuICB9O1xuXG4gIGNvbnN0IG1vY2tCaWxsaW5nRGF0YSA9IHtcbiAgICBpbnZvaWNlczogW1xuICAgICAge1xuICAgICAgICBpZDogMSxcbiAgICAgICAgYW1vdW50OiAxMDAsXG4gICAgICAgIGRhdGU6ICcyMDI0LTAzLTIwJyxcbiAgICAgICAgc3RhdHVzOiAnUEVORElORydcbiAgICAgIH1cbiAgICBdLFxuICAgIGluc3VyYW5jZToge1xuICAgICAgcHJvdmlkZXI6ICdUZXN0IEluc3VyYW5jZScsXG4gICAgICBwb2xpY3lOdW1iZXI6ICcxMjM0NSdcbiAgICB9XG4gIH07XG5cbiAgaXQoJ3JlbmRlcnMgYmlsbGluZyBpbmZvcm1hdGlvbicsICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8QXV0aENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgdXNlcjogbW9ja1VzZXIgfX0+XG4gICAgICAgIDxCaWxsaW5nIGRhdGE9e21vY2tCaWxsaW5nRGF0YX0gLz5cbiAgICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdCaWxsaW5nIERhc2hib2FyZCcpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdUZXN0IEluc3VyYW5jZScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcxMjM0NScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCckMTAwJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdoYW5kbGVzIHBheW1lbnQgc3VibWlzc2lvbicsICgpID0+IHtcbiAgICBjb25zdCBtb2NrSGFuZGxlUGF5bWVudCA9IGplc3QuZm4oKTtcblxuICAgIHJlbmRlcihcbiAgICAgIDxBdXRoQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyB1c2VyOiBtb2NrVXNlciB9fT5cbiAgICAgICAgPEJpbGxpbmcgZGF0YT17bW9ja0JpbGxpbmdEYXRhfSBvblBheW1lbnQ9e21vY2tIYW5kbGVQYXltZW50fSAvPlxuICAgICAgPC9BdXRoQ29udGV4dC5Qcm92aWRlcj5cbiAgICApO1xuXG4gICAgZmlyZUV2ZW50LmNsaWNrKHNjcmVlbi5nZXRCeVRleHQoJ1BheSBOb3cnKSk7XG4gICAgZXhwZWN0KG1vY2tIYW5kbGVQYXltZW50KS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgxKTtcbiAgfSk7XG59KTsiXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUNBQSxPQUFBO0FBQ0EsSUFBQUUsUUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsWUFBQSxHQUFBSCxPQUFBO0FBQXlELElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUFBLElBQUFLLFlBQUE7QUFBQSxPQUFBQyxLQUFBO0FBQUEsSUFBQUMsS0FBQSxHQUFBRCxLQUFBLENBQUFFLGFBQUE7QUFFekRDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNO0VBQ2xDLE1BQU1DLFFBQVEsR0FBRztJQUNmQyxFQUFFLEVBQUUsQ0FBQztJQUNMQyxJQUFJLEVBQUUsVUFBVTtJQUNoQkMsS0FBSyxFQUFFLGtCQUFrQjtJQUN6QkMsSUFBSSxFQUFFO0VBQ1IsQ0FBQztFQUVELE1BQU1DLGVBQWUsR0FBRztJQUN0QkMsUUFBUSxFQUFFLENBQ1I7TUFDRUwsRUFBRSxFQUFFLENBQUM7TUFDTE0sTUFBTSxFQUFFLEdBQUc7TUFDWEMsSUFBSSxFQUFFLFlBQVk7TUFDbEJDLE1BQU0sRUFBRTtJQUNWLENBQUMsQ0FDRjtJQUNEQyxTQUFTLEVBQUU7TUFDVEMsUUFBUSxFQUFFLGdCQUFnQjtNQUMxQkMsWUFBWSxFQUFFO0lBQ2hCO0VBQ0YsQ0FBQztFQUVEQyxFQUFFLENBQUMsNkJBQTZCLEVBQUUsTUFBTTtJQUN0QyxJQUFBQyxjQUFNLGVBQ0osSUFBQXBCLFdBQUEsQ0FBQXFCLEdBQUEsRUFBQ3RCLFlBQUEsQ0FBQXVCLFdBQVcsQ0FBQ0MsUUFBUTtNQUFDQyxLQUFLLEVBQUU7UUFBRUMsSUFBSSxFQUFFbkI7TUFBUyxDQUFFO01BQUFvQixRQUFBLGVBQzlDLElBQUExQixXQUFBLENBQUFxQixHQUFBLEVBQUN2QixRQUFBLENBQUE2QixPQUFPO1FBQUNDLElBQUksRUFBRWpCO01BQWdCLENBQUU7SUFBQyxDQUNkLENBQ3hCLENBQUM7SUFFRGtCLE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2pFSCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztJQUM5REgsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3JESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7RUFDdEQsQ0FBQyxDQUFDO0VBRUZiLEVBQUUsQ0FBQyw0QkFBNEIsRUFBRSxNQUFNO0lBQ3JDLE1BQU1jLGlCQUFpQixHQUFHQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0lBRW5DLElBQUFmLGNBQU0sZUFDSixJQUFBcEIsV0FBQSxDQUFBcUIsR0FBQSxFQUFDdEIsWUFBQSxDQUFBdUIsV0FBVyxDQUFDQyxRQUFRO01BQUNDLEtBQUssRUFBRTtRQUFFQyxJQUFJLEVBQUVuQjtNQUFTLENBQUU7TUFBQW9CLFFBQUEsZUFDOUMsSUFBQTFCLFdBQUEsQ0FBQXFCLEdBQUEsRUFBQ3ZCLFFBQUEsQ0FBQTZCLE9BQU87UUFBQ0MsSUFBSSxFQUFFakIsZUFBZ0I7UUFBQ3lCLFNBQVMsRUFBRUg7TUFBa0IsQ0FBRTtJQUFDLENBQzVDLENBQ3hCLENBQUM7SUFFREksaUJBQVMsQ0FBQ0MsS0FBSyxDQUFDUixjQUFNLENBQUNDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1Q0YsTUFBTSxDQUFDSSxpQkFBaUIsQ0FBQyxDQUFDTSxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7RUFDbkQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119