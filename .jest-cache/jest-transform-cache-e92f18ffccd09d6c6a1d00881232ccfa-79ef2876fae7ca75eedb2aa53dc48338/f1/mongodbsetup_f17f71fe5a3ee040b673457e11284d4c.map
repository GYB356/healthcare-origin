{"version":3,"names":["MongoMemoryServer","require","mongoose","mongod","beforeAll","create","binary","version","uri","getUri","connect","error","console","afterEach","connection","readyState","collections","db","Promise","all","map","collection","deleteMany","afterAll","disconnect","stop"],"sources":["mongodb.setup.js"],"sourcesContent":["const { MongoMemoryServer } = require('mongodb-memory-server-core');\r\nconst mongoose = require('mongoose');\r\n\r\nlet mongod = null;\r\n\r\n// Connect to the in-memory database before running tests\r\nbeforeAll(async () => {\r\n  try {\r\n    mongod = await MongoMemoryServer.create({\r\n      binary: {\r\n        version: '6.0.4'\r\n      }\r\n    });\r\n    const uri = mongod.getUri();\r\n    await mongoose.connect(uri);\r\n  } catch (error) {\r\n    console.error('MongoDB Memory Server setup failed:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\n// Clear all data between tests\r\nafterEach(async () => {\r\n  try {\r\n    if (mongoose.connection.readyState !== 0) {\r\n      const collections = await mongoose.connection.db.collections();\r\n      await Promise.all(collections.map(collection => collection.deleteMany({})));\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to clean up test database:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\n// Close database connection after all tests\r\nafterAll(async () => {\r\n  try {\r\n    if (mongoose.connection.readyState !== 0) {\r\n      await mongoose.disconnect();\r\n    }\r\n    if (mongod) {\r\n      await mongod.stop();\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to stop MongoDB Memory Server:', error);\r\n    throw error;\r\n  }\r\n}); "],"mappings":"AAAA,MAAM;EAAEA;AAAkB,CAAC,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACnE,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAEpC,IAAIE,MAAM,GAAG,IAAI;;AAEjB;AACAC,SAAS,CAAC,YAAY;EACpB,IAAI;IACFD,MAAM,GAAG,MAAMH,iBAAiB,CAACK,MAAM,CAAC;MACtCC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACF,MAAMC,GAAG,GAAGL,MAAM,CAACM,MAAM,CAAC,CAAC;IAC3B,MAAMP,QAAQ,CAACQ,OAAO,CAACF,GAAG,CAAC;EAC7B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;;AAEF;AACAE,SAAS,CAAC,YAAY;EACpB,IAAI;IACF,IAAIX,QAAQ,CAACY,UAAU,CAACC,UAAU,KAAK,CAAC,EAAE;MACxC,MAAMC,WAAW,GAAG,MAAMd,QAAQ,CAACY,UAAU,CAACG,EAAE,CAACD,WAAW,CAAC,CAAC;MAC9D,MAAME,OAAO,CAACC,GAAG,CAACH,WAAW,CAACI,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E;EACF,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC,CAAC;;AAEF;AACAY,QAAQ,CAAC,YAAY;EACnB,IAAI;IACF,IAAIrB,QAAQ,CAACY,UAAU,CAACC,UAAU,KAAK,CAAC,EAAE;MACxC,MAAMb,QAAQ,CAACsB,UAAU,CAAC,CAAC;IAC7B;IACA,IAAIrB,MAAM,EAAE;MACV,MAAMA,MAAM,CAACsB,IAAI,CAAC,CAAC;IACrB;EACF,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC,CAAC","ignoreList":[]}