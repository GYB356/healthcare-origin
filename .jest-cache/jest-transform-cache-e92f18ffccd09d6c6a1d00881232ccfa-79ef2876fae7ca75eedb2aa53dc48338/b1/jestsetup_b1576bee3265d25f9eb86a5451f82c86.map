{"version":3,"names":["_getJestObj","mock","__esModule","default","props","type","_objectSpread","alt","getServerSession","jest","fn","user","id","name","email","role","expires","Date","now","toISOString","signIn","signOut","useRouter","push","back","pathname","query","events","on","off","emit","usePathname","useSearchParams","URLSearchParams","mockSocket","connect","disconnect","close","join","leave","connected","io","createServer","listen","port","callback","address","mockPrisma","findUnique","findFirst","findMany","create","update","delete","upsert","patient","appointment","availability","$connect","$disconnect","$transaction","PrismaClient","_defineProperty","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","apply","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","TextEncoder","TextDecoder","global","config","path","fetchMock","enableMocks","dontMockIf","setTimeout","afterEach","clearAllMocks","resetMocks","originalError","console","error","args","test","call","fetch","Promise","resolve","json","ok","status","WebSocket","constructor","url","readyState","onmessage","onopen","onclose","onerror","send","data","IntersectionObserver","observe","unobserve","ResizeObserver","matchMedia","matches","addListener","removeListener","process","env","JWT_SECRET","MONGODB_URI","NEXTAUTH_SECRET","NEXTAUTH_URL"],"sources":["jest.setup.js"],"sourcesContent":["const { TextEncoder, TextDecoder } = require('util');\r\nglobal.TextEncoder = TextEncoder;\r\nglobal.TextDecoder = TextDecoder;\r\n\r\nrequire('dotenv').config({ path: '.env.test' });\r\nrequire('@testing-library/jest-dom');\r\nconst fetchMock = require('jest-fetch-mock');\r\n\r\n// Mock fetch with better error handling\r\nfetchMock.enableMocks();\r\nfetchMock.dontMockIf(/^https:\\/\\/fonts\\.googleapis\\.com/);\r\nfetchMock.dontMockIf(/^https:\\/\\/fonts\\.gstatic\\.com/);\r\n\r\n// Mock next/image with better error handling\r\njest.mock('next/image', () => ({\r\n  __esModule: true,\r\n  default: (props) => {\r\n    return {\r\n      type: 'img',\r\n      props: { ...props, alt: props.alt || '' }\r\n    };\r\n  }\r\n}));\r\n\r\n// Enhanced next/auth mock with better type safety\r\njest.mock('next-auth', () => ({\r\n  __esModule: true,\r\n  getServerSession: jest.fn(() => ({\r\n    user: {\r\n      id: '1',\r\n      name: 'Test User',\r\n      email: 'test@example.com',\r\n      role: 'DOCTOR'\r\n    },\r\n    expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()\r\n  })),\r\n  signIn: jest.fn(),\r\n  signOut: jest.fn()\r\n}));\r\n\r\n// Enhanced next/navigation mock\r\njest.mock('next/navigation', () => ({\r\n  useRouter: () => ({\r\n    push: jest.fn(),\r\n    back: jest.fn(),\r\n    pathname: '/',\r\n    query: {},\r\n    events: {\r\n      on: jest.fn(),\r\n      off: jest.fn(),\r\n      emit: jest.fn()\r\n    }\r\n  }),\r\n  usePathname: () => '/',\r\n  useSearchParams: () => new URLSearchParams()\r\n}));\r\n\r\n// Enhanced socket.io-client mock with better event handling\r\njest.mock('socket.io-client', () => {\r\n  const mockSocket = {\r\n    on: jest.fn(),\r\n    emit: jest.fn(),\r\n    connect: jest.fn(),\r\n    disconnect: jest.fn(),\r\n    close: jest.fn(),\r\n    join: jest.fn(),\r\n    leave: jest.fn(),\r\n    connected: false,\r\n    id: 'test-socket-id'\r\n  };\r\n  return {\r\n    io: jest.fn(() => mockSocket),\r\n    connect: jest.fn(() => mockSocket)\r\n  };\r\n});\r\n\r\n// Enhanced http server mock\r\njest.mock('http', () => ({\r\n  createServer: jest.fn(() => ({\r\n    listen: jest.fn((port, callback) => {\r\n      if (callback) callback();\r\n      return { port: port || 3001 };\r\n    }),\r\n    close: jest.fn((callback) => {\r\n      if (callback) callback();\r\n    }),\r\n    address: jest.fn(() => ({ port: 3001 }))\r\n  }))\r\n}));\r\n\r\n// Enhanced PrismaClient mock with better error handling\r\njest.mock('@prisma/client', () => {\r\n  const mockPrisma = {\r\n    user: {\r\n      findUnique: jest.fn(),\r\n      findFirst: jest.fn(),\r\n      findMany: jest.fn(),\r\n      create: jest.fn(),\r\n      update: jest.fn(),\r\n      delete: jest.fn(),\r\n      upsert: jest.fn()\r\n    },\r\n    patient: {\r\n      findUnique: jest.fn(),\r\n      findFirst: jest.fn(),\r\n      findMany: jest.fn(),\r\n      create: jest.fn(),\r\n      update: jest.fn(),\r\n      delete: jest.fn(),\r\n      upsert: jest.fn()\r\n    },\r\n    appointment: {\r\n      findUnique: jest.fn(),\r\n      findFirst: jest.fn(),\r\n      findMany: jest.fn(),\r\n      create: jest.fn(),\r\n      update: jest.fn(),\r\n      delete: jest.fn(),\r\n      upsert: jest.fn()\r\n    },\r\n    availability: {\r\n      findUnique: jest.fn(),\r\n      findFirst: jest.fn(),\r\n      findMany: jest.fn(),\r\n      create: jest.fn(),\r\n      update: jest.fn(),\r\n      delete: jest.fn(),\r\n      upsert: jest.fn()\r\n    },\r\n    $connect: jest.fn(),\r\n    $disconnect: jest.fn(),\r\n    $transaction: jest.fn()\r\n  };\r\n\r\n  return {\r\n    PrismaClient: jest.fn(() => mockPrisma)\r\n  };\r\n});\r\n\r\n// Increase timeout for all tests\r\njest.setTimeout(30000);\r\n\r\n// Reset mocks after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks();\r\n  fetchMock.resetMocks();\r\n});\r\n\r\n// Mock console.error to fail tests\r\nconst originalError = console.error;\r\nconsole.error = (...args) => {\r\n  if (\r\n    /Warning: ReactDOM.render is no longer supported in React 18/.test(args[0]) ||\r\n    /Warning: useLayoutEffect does nothing on the server/.test(args[0])\r\n  ) {\r\n    return;\r\n  }\r\n  originalError.call(console, ...args);\r\n};\r\n\r\n// Mock fetch\r\nglobal.fetch = jest.fn(() =>\r\n  Promise.resolve({\r\n    json: () => Promise.resolve({}),\r\n    ok: true,\r\n    status: 200,\r\n  })\r\n);\r\n\r\n// Mock WebSocket\r\nglobal.WebSocket = class {\r\n  constructor(url) {\r\n    this.url = url;\r\n    this.readyState = 0;\r\n    this.onmessage = null;\r\n    this.onopen = null;\r\n    this.onclose = null;\r\n    this.onerror = null;\r\n  }\r\n  send(data) {}\r\n  close() {}\r\n};\r\n\r\n// Mock IntersectionObserver\r\nglobal.IntersectionObserver = class {\r\n  constructor() {}\r\n  observe() {}\r\n  unobserve() {}\r\n  disconnect() {}\r\n};\r\n\r\n// Mock ResizeObserver\r\nglobal.ResizeObserver = class {\r\n  constructor() {}\r\n  observe() {}\r\n  unobserve() {}\r\n  disconnect() {}\r\n};\r\n\r\n// Mock matchMedia\r\nglobal.matchMedia = global.matchMedia || function() {\r\n  return {\r\n    matches: false,\r\n    addListener: function() {},\r\n    removeListener: function() {}\r\n  };\r\n};\r\n\r\n// Mock environment variables\r\nprocess.env.JWT_SECRET = 'test-secret';\r\nprocess.env.MONGODB_URI = 'mongodb://localhost:27017/test-db';\r\nprocess.env.NEXTAUTH_SECRET = 'test-nextauth-secret';\r\nprocess.env.NEXTAUTH_URL = 'http://localhost:3000';"],"mappings":"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","ignoreList":[]}