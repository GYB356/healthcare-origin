{"version":3,"names":["_vitest","require","_react","_errorBoundary","_jsxRuntime","_jsxFileName","React","__jsx","createElement","originalError","console","error","beforeAll","vi","fn","afterAll","ThrowError","message","Error","describe","it","render","jsx","ErrorBoundary","children","expect","screen","getByText","toBeInTheDocument","getByRole","name","CustomFallback","jsxs","fallback","TestComponent","shouldThrow","setShouldThrow","useState","fireEvent","click","originalNodeEnv","process","env","NODE_ENV","toHaveBeenCalled"],"sources":["error-boundary.test.tsx"],"sourcesContent":["import { describe, it, expect, vi } from 'vitest'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport { ErrorBoundary } from '@/components/error-boundary'\n\n// Mock console.error to prevent test output noise\nconst originalError = console.error\nbeforeAll(() => {\n  console.error = vi.fn()\n})\nafterAll(() => {\n  console.error = originalError\n})\n\n// Component that throws an error\nconst ThrowError = ({ message }: { message: string }) => {\n  throw new Error(message)\n}\n\ndescribe('ErrorBoundary', () => {\n  it('should render children when there is no error', () => {\n    render(\n      <ErrorBoundary>\n        <div>Test Content</div>\n      </ErrorBoundary>\n    )\n\n    expect(screen.getByText('Test Content')).toBeInTheDocument()\n  })\n\n  it('should render error UI when child throws', () => {\n    render(\n      <ErrorBoundary>\n        <ThrowError message=\"Test Error\" />\n      </ErrorBoundary>\n    )\n\n    expect(screen.getByText(/Something went wrong/i)).toBeInTheDocument()\n    expect(screen.getByText(/Test Error/i)).toBeInTheDocument()\n    expect(screen.getByRole('button', { name: /try again/i })).toBeInTheDocument()\n  })\n\n  it('should render custom fallback when provided', () => {\n    const CustomFallback = ({ error }: { error: Error }) => (\n      <div>Custom Error: {error.message}</div>\n    )\n\n    render(\n      <ErrorBoundary fallback={CustomFallback}>\n        <ThrowError message=\"Custom Test Error\" />\n      </ErrorBoundary>\n    )\n\n    expect(screen.getByText(/Custom Error: Custom Test Error/i)).toBeInTheDocument()\n  })\n\n  it('should reset error state when try again is clicked', () => {\n    const TestComponent = () => {\n      const [shouldThrow, setShouldThrow] = React.useState(true)\n\n      if (shouldThrow) {\n        throw new Error('Initial Error')\n      }\n\n      return <div>Recovered Content</div>\n    }\n\n    render(\n      <ErrorBoundary>\n        <TestComponent />\n      </ErrorBoundary>\n    )\n\n    expect(screen.getByText(/Something went wrong/i)).toBeInTheDocument()\n    \n    fireEvent.click(screen.getByRole('button', { name: /try again/i }))\n    \n    expect(screen.getByText('Recovered Content')).toBeInTheDocument()\n  })\n\n  it('should handle nested errors', () => {\n    render(\n      <ErrorBoundary>\n        <div>Outer Content</div>\n        <ErrorBoundary>\n          <ThrowError message=\"Nested Error\" />\n        </ErrorBoundary>\n      </ErrorBoundary>\n    )\n\n    expect(screen.getByText('Outer Content')).toBeInTheDocument()\n    expect(screen.getByText(/Nested Error/i)).toBeInTheDocument()\n  })\n\n  it('should log errors in development', () => {\n    const originalNodeEnv = process.env.NODE_ENV\n    process.env.NODE_ENV = 'development'\n\n    render(\n      <ErrorBoundary>\n        <ThrowError message=\"Development Error\" />\n      </ErrorBoundary>\n    )\n\n    expect(console.error).toHaveBeenCalled()\n\n    process.env.NODE_ENV = originalNodeEnv\n  })\n}) "],"mappings":"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","ignoreList":[]}