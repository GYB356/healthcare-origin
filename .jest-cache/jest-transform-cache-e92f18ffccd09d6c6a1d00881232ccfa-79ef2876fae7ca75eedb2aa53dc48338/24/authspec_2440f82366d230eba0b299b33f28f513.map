{"version":3,"names":["test","expect","require","describe","beforeEach","page","goto","getByRole","name","toBeVisible","getByLabel","fill","click","toHaveURL","getByText","selectOption","reload","evaluate","localStorage","setItem"],"sources":["auth.spec.js"],"sourcesContent":["const { test, expect } = require('@playwright/test');\r\n\r\ntest.describe('Authentication', () => {\r\n  test.beforeEach(async ({ page }) => {\r\n    await page.goto('/');\r\n  });\r\n\r\n  test('should display login form', async ({ page }) => {\r\n    await expect(page.getByRole('heading', { name: 'Login' })).toBeVisible();\r\n    await expect(page.getByLabel('Email')).toBeVisible();\r\n    await expect(page.getByLabel('Password')).toBeVisible();\r\n    await expect(page.getByRole('button', { name: 'Login' })).toBeVisible();\r\n  });\r\n\r\n  test('should login successfully with valid credentials', async ({ page }) => {\r\n    await page.getByLabel('Email').fill('doctor@test.com');\r\n    await page.getByLabel('Password').fill('password123');\r\n    await page.getByRole('button', { name: 'Login' }).click();\r\n\r\n    // Wait for successful login and redirect\r\n    await expect(page).toHaveURL(/.*dashboard/);\r\n    await expect(page.getByText('Welcome, Test Doctor')).toBeVisible();\r\n  });\r\n\r\n  test('should show error with invalid credentials', async ({ page }) => {\r\n    await page.getByLabel('Email').fill('invalid@test.com');\r\n    await page.getByLabel('Password').fill('wrongpassword');\r\n    await page.getByRole('button', { name: 'Login' }).click();\r\n\r\n    await expect(page.getByText('Invalid credentials')).toBeVisible();\r\n  });\r\n\r\n  test('should validate required fields', async ({ page }) => {\r\n    await page.getByRole('button', { name: 'Login' }).click();\r\n\r\n    await expect(page.getByText('Email is required')).toBeVisible();\r\n    await expect(page.getByText('Password is required')).toBeVisible();\r\n  });\r\n\r\n  test('should navigate to registration page', async ({ page }) => {\r\n    await page.getByRole('link', { name: 'Register' }).click();\r\n\r\n    await expect(page).toHaveURL(/.*register/);\r\n    await expect(page.getByRole('heading', { name: 'Register' })).toBeVisible();\r\n  });\r\n\r\n  test('should register new user successfully', async ({ page }) => {\r\n    await page.goto('/register');\r\n\r\n    await page.getByLabel('Name').fill('New User');\r\n    await page.getByLabel('Email').fill('newuser@test.com');\r\n    await page.getByLabel('Password').fill('password123');\r\n    await page.getByLabel('Role').selectOption('PATIENT');\r\n    await page.getByRole('button', { name: 'Register' }).click();\r\n\r\n    // Wait for successful registration and redirect\r\n    await expect(page).toHaveURL(/.*dashboard/);\r\n    await expect(page.getByText('Welcome, New User')).toBeVisible();\r\n  });\r\n\r\n  test('should show error for duplicate email', async ({ page }) => {\r\n    await page.goto('/register');\r\n\r\n    await page.getByLabel('Name').fill('Duplicate User');\r\n    await page.getByLabel('Email').fill('doctor@test.com'); // Using existing email\r\n    await page.getByLabel('Password').fill('password123');\r\n    await page.getByLabel('Role').selectOption('PATIENT');\r\n    await page.getByRole('button', { name: 'Register' }).click();\r\n\r\n    await expect(page.getByText('Email already exists')).toBeVisible();\r\n  });\r\n\r\n  test('should validate password strength', async ({ page }) => {\r\n    await page.goto('/register');\r\n\r\n    await page.getByLabel('Name').fill('Weak Password');\r\n    await page.getByLabel('Email').fill('weak@test.com');\r\n    await page.getByLabel('Password').fill('weak');\r\n    await page.getByLabel('Role').selectOption('PATIENT');\r\n    await page.getByRole('button', { name: 'Register' }).click();\r\n\r\n    await expect(page.getByText(/Password must be at least 8 characters/)).toBeVisible();\r\n  });\r\n\r\n  test('should handle forgot password flow', async ({ page }) => {\r\n    await page.getByRole('link', { name: 'Forgot Password?' }).click();\r\n\r\n    await expect(page).toHaveURL(/.*forgot-password/);\r\n    await expect(page.getByRole('heading', { name: 'Reset Password' })).toBeVisible();\r\n\r\n    await page.getByLabel('Email').fill('doctor@test.com');\r\n    await page.getByRole('button', { name: 'Send Reset Link' }).click();\r\n\r\n    await expect(page.getByText('Password reset email sent')).toBeVisible();\r\n  });\r\n\r\n  test('should handle logout', async ({ page }) => {\r\n    // Login first\r\n    await page.getByLabel('Email').fill('doctor@test.com');\r\n    await page.getByLabel('Password').fill('password123');\r\n    await page.getByRole('button', { name: 'Login' }).click();\r\n\r\n    // Wait for successful login\r\n    await expect(page).toHaveURL(/.*dashboard/);\r\n\r\n    // Click logout\r\n    await page.getByRole('button', { name: 'Logout' }).click();\r\n\r\n    // Verify redirect to login page\r\n    await expect(page).toHaveURL(/.*login/);\r\n    await expect(page.getByRole('heading', { name: 'Login' })).toBeVisible();\r\n  });\r\n\r\n  test('should maintain session after page refresh', async ({ page }) => {\r\n    // Login first\r\n    await page.getByLabel('Email').fill('doctor@test.com');\r\n    await page.getByLabel('Password').fill('password123');\r\n    await page.getByRole('button', { name: 'Login' }).click();\r\n\r\n    // Wait for successful login\r\n    await expect(page).toHaveURL(/.*dashboard/);\r\n\r\n    // Refresh the page\r\n    await page.reload();\r\n\r\n    // Verify still logged in\r\n    await expect(page).toHaveURL(/.*dashboard/);\r\n    await expect(page.getByText('Welcome, Test Doctor')).toBeVisible();\r\n  });\r\n\r\n  test('should handle expired session', async ({ page }) => {\r\n    // Set an expired token in localStorage\r\n    await page.evaluate(() => {\r\n      localStorage.setItem('token', 'expired.token.here');\r\n    });\r\n\r\n    // Navigate to protected route\r\n    await page.goto('/dashboard');\r\n\r\n    // Verify redirect to login\r\n    await expect(page).toHaveURL(/.*login/);\r\n    await expect(page.getByText('Session expired. Please login again.')).toBeVisible();\r\n  });\r\n});"],"mappings":"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","ignoreList":[]}