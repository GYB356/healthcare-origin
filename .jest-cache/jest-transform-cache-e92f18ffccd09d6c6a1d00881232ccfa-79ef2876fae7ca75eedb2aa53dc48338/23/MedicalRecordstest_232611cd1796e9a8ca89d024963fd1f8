6c73821c11794d9e6420ad31bae5b29a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _AuthContext = require("../../context/AuthContext");
var _MedicalRecords = _interopRequireDefault(require("../../pages/MedicalRecords"));
var _jsxRuntime = require("react/jsx-runtime");
const _excluded = ["providerProps"];
var _jsxFileName = "C:\\Users\\olari\\Downloads\\healthcare-main\\healthcare-main\\HealthcareSync\\frontend\\src\\components\\__tests__\\MedicalRecords.test.js";
import React from "react";
var __jsx = React.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
const renderWithAuth = (ui, _ref) => {
  let {
      providerProps
    } = _ref,
    renderOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext.AuthContext.Provider, _objectSpread(_objectSpread({}, providerProps), {}, {
    children: ui
  })), renderOptions);
};
describe('MedicalRecords Component', () => {
  test('renders MedicalRecords component for authorized users', () => {
    const providerProps = {
      value: {
        user: {
          role: 'doctor'
        }
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_MedicalRecords.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Medical Records/i)).toBeInTheDocument();
    expect(_react2.screen.getByText(/Access and manage patient medical records/i)).toBeInTheDocument();
  });
  test('denies access for unauthorized users', () => {
    const providerProps = {
      value: {
        user: {
          role: 'guest'
        }
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_MedicalRecords.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Access Denied/i)).toBeInTheDocument();
  });
  test('allows access for different authorized roles', () => {
    const roles = ['patient', 'doctor', 'nurse', 'admin'];
    roles.forEach(role => {
      const providerProps = {
        value: {
          user: {
            role
          }
        }
      };
      const {
        unmount
      } = renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_MedicalRecords.default, {}), {
        providerProps
      });
      expect(_react2.screen.getByText(/Medical Records/i)).toBeInTheDocument();
      unmount();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfQXV0aENvbnRleHQiLCJfTWVkaWNhbFJlY29yZHMiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsIl9qc3hGaWxlTmFtZSIsIlJlYWN0IiwiX19qc3giLCJjcmVhdGVFbGVtZW50Iiwib3duS2V5cyIsImUiLCJyIiwidCIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJvIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsInB1c2giLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5MiIsImRlZmF1bHQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlZmluZVByb3BlcnR5IiwicmVuZGVyV2l0aEF1dGgiLCJ1aSIsIl9yZWYiLCJwcm92aWRlclByb3BzIiwicmVuZGVyT3B0aW9ucyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJyZW5kZXIiLCJqc3giLCJBdXRoQ29udGV4dCIsIlByb3ZpZGVyIiwiY2hpbGRyZW4iLCJkZXNjcmliZSIsInRlc3QiLCJ2YWx1ZSIsInVzZXIiLCJyb2xlIiwiZXhwZWN0Iiwic2NyZWVuIiwiZ2V0QnlUZXh0IiwidG9CZUluVGhlRG9jdW1lbnQiLCJyb2xlcyIsInVubW91bnQiXSwic291cmNlcyI6WyJNZWRpY2FsUmVjb3Jkcy50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IHsgQXV0aENvbnRleHQgfSBmcm9tICcuLi8uLi9jb250ZXh0L0F1dGhDb250ZXh0JztcbmltcG9ydCBNZWRpY2FsUmVjb3JkcyBmcm9tICcuLi8uLi9wYWdlcy9NZWRpY2FsUmVjb3Jkcyc7XG5cbmNvbnN0IHJlbmRlcldpdGhBdXRoID0gKHVpLCB7IHByb3ZpZGVyUHJvcHMsIC4uLnJlbmRlck9wdGlvbnMgfSkgPT4ge1xuICAgIHJldHVybiByZW5kZXIoXG4gICAgICAgIDxBdXRoQ29udGV4dC5Qcm92aWRlciB7Li4ucHJvdmlkZXJQcm9wc30+e3VpfTwvQXV0aENvbnRleHQuUHJvdmlkZXI+LFxuICAgICAgICByZW5kZXJPcHRpb25zXG4gICAgKTtcbn07XG5cbmRlc2NyaWJlKCdNZWRpY2FsUmVjb3JkcyBDb21wb25lbnQnLCAoKSA9PiB7XG4gICAgdGVzdCgncmVuZGVycyBNZWRpY2FsUmVjb3JkcyBjb21wb25lbnQgZm9yIGF1dGhvcml6ZWQgdXNlcnMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyUHJvcHMgPSB7XG4gICAgICAgICAgICB2YWx1ZTogeyB1c2VyOiB7IHJvbGU6ICdkb2N0b3InIH0gfSxcbiAgICAgICAgfTtcbiAgICAgICAgcmVuZGVyV2l0aEF1dGgoPE1lZGljYWxSZWNvcmRzIC8+LCB7IHByb3ZpZGVyUHJvcHMgfSk7XG5cbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL01lZGljYWwgUmVjb3Jkcy9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL0FjY2VzcyBhbmQgbWFuYWdlIHBhdGllbnQgbWVkaWNhbCByZWNvcmRzL2kpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIH0pO1xuXG4gICAgdGVzdCgnZGVuaWVzIGFjY2VzcyBmb3IgdW5hdXRob3JpemVkIHVzZXJzJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwcm92aWRlclByb3BzID0ge1xuICAgICAgICAgICAgdmFsdWU6IHsgdXNlcjogeyByb2xlOiAnZ3Vlc3QnIH0gfSxcbiAgICAgICAgfTtcbiAgICAgICAgcmVuZGVyV2l0aEF1dGgoPE1lZGljYWxSZWNvcmRzIC8+LCB7IHByb3ZpZGVyUHJvcHMgfSk7XG5cbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL0FjY2VzcyBEZW5pZWQvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdhbGxvd3MgYWNjZXNzIGZvciBkaWZmZXJlbnQgYXV0aG9yaXplZCByb2xlcycsICgpID0+IHtcbiAgICAgICAgY29uc3Qgcm9sZXMgPSBbJ3BhdGllbnQnLCAnZG9jdG9yJywgJ251cnNlJywgJ2FkbWluJ107XG4gICAgICAgIHJvbGVzLmZvckVhY2gocm9sZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm92aWRlclByb3BzID0ge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB7IHVzZXI6IHsgcm9sZSB9IH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgeyB1bm1vdW50IH0gPSByZW5kZXJXaXRoQXV0aCg8TWVkaWNhbFJlY29yZHMgLz4sIHsgcHJvdmlkZXJQcm9wcyB9KTtcbiAgICAgICAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KC9NZWRpY2FsIFJlY29yZHMvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICAgICAgICB1bm1vdW50KCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxlQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBd0QsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQUEsTUFBQUssU0FBQTtBQUFBLElBQUFDLFlBQUE7QUFBQSxPQUFBQyxLQUFBO0FBQUEsSUFBQUMsS0FBQSxHQUFBRCxLQUFBLENBQUFFLGFBQUE7QUFBQSxTQUFBQyxRQUFBQyxD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