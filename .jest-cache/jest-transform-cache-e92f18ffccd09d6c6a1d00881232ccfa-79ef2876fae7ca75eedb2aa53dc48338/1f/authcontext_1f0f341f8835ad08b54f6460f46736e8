e6a88c7790f7996333dd9b96f99aee87
const React = require('react');

// Mock AuthContext
const mockAuthState = {
  isAuthenticated: true,
  user: {
    id: '123',
    username: 'testuser',
    email: 'test@example.com',
    role: 'admin'
  },
  login: jest.fn(() => Promise.resolve({
    success: true
  })),
  logout: jest.fn(),
  register: jest.fn(() => Promise.resolve({
    success: true
  })),
  loading: false,
  error: null,
  token: 'mock-token'
};
const AuthContext = React.createContext(mockAuthState);
AuthContext.displayName = 'AuthContext';

// Auth Provider component
const AuthProvider = ({
  children,
  value = mockAuthState
}) => {
  return React.createElement(AuthContext.Provider, {
    value
  }, children);
};

// Custom hook for consuming Auth Context
const useAuth = () => React.useContext(AuthContext);

// Handle both ESM and CommonJS
const exports = {
  AuthContext,
  AuthProvider,
  useAuth,
  mockAuthState,
  default: {
    AuthContext,
    AuthProvider,
    useAuth,
    mockAuthState
  }
};

// For default export patterns
exports.__esModule = true;
exports.default = useAuth;
module.exports = exports;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJtb2NrQXV0aFN0YXRlIiwiaXNBdXRoZW50aWNhdGVkIiwidXNlciIsImlkIiwidXNlcm5hbWUiLCJlbWFpbCIsInJvbGUiLCJsb2dpbiIsImplc3QiLCJmbiIsIlByb21pc2UiLCJyZXNvbHZlIiwic3VjY2VzcyIsImxvZ291dCIsInJlZ2lzdGVyIiwibG9hZGluZyIsImVycm9yIiwidG9rZW4iLCJBdXRoQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJkaXNwbGF5TmFtZSIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwidmFsdWUiLCJjcmVhdGVFbGVtZW50IiwiUHJvdmlkZXIiLCJ1c2VBdXRoIiwidXNlQ29udGV4dCIsImV4cG9ydHMiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VzIjpbImF1dGgtY29udGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XHJcblxyXG4vLyBNb2NrIEF1dGhDb250ZXh0XHJcbmNvbnN0IG1vY2tBdXRoU3RhdGUgPSB7XHJcbiAgaXNBdXRoZW50aWNhdGVkOiB0cnVlLFxyXG4gIHVzZXI6IHtcclxuICAgIGlkOiAnMTIzJyxcclxuICAgIHVzZXJuYW1lOiAndGVzdHVzZXInLFxyXG4gICAgZW1haWw6ICd0ZXN0QGV4YW1wbGUuY29tJyxcclxuICAgIHJvbGU6ICdhZG1pbidcclxuICB9LFxyXG4gIGxvZ2luOiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZSh7IHN1Y2Nlc3M6IHRydWUgfSkpLFxyXG4gIGxvZ291dDogamVzdC5mbigpLFxyXG4gIHJlZ2lzdGVyOiBqZXN0LmZuKCgpID0+IFByb21pc2UucmVzb2x2ZSh7IHN1Y2Nlc3M6IHRydWUgfSkpLFxyXG4gIGxvYWRpbmc6IGZhbHNlLFxyXG4gIGVycm9yOiBudWxsLFxyXG4gIHRva2VuOiAnbW9jay10b2tlbidcclxufTtcclxuXHJcbmNvbnN0IEF1dGhDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChtb2NrQXV0aFN0YXRlKTtcclxuQXV0aENvbnRleHQuZGlzcGxheU5hbWUgPSAnQXV0aENvbnRleHQnO1xyXG5cclxuLy8gQXV0aCBQcm92aWRlciBjb21wb25lbnRcclxuY29uc3QgQXV0aFByb3ZpZGVyID0gKHsgY2hpbGRyZW4sIHZhbHVlID0gbW9ja0F1dGhTdGF0ZSB9KSA9PiB7XHJcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQXV0aENvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWUgfSwgY2hpbGRyZW4pO1xyXG59O1xyXG5cclxuLy8gQ3VzdG9tIGhvb2sgZm9yIGNvbnN1bWluZyBBdXRoIENvbnRleHRcclxuY29uc3QgdXNlQXV0aCA9ICgpID0+IFJlYWN0LnVzZUNvbnRleHQoQXV0aENvbnRleHQpO1xyXG5cclxuLy8gSGFuZGxlIGJvdGggRVNNIGFuZCBDb21tb25KU1xyXG5jb25zdCBleHBvcnRzID0ge1xyXG4gIEF1dGhDb250ZXh0LFxyXG4gIEF1dGhQcm92aWRlcixcclxuICB1c2VBdXRoLFxyXG4gIG1vY2tBdXRoU3RhdGUsXHJcbiAgZGVmYXVsdDoge1xyXG4gICAgQXV0aENvbnRleHQsXHJcbiAgICBBdXRoUHJvdmlkZXIsXHJcbiAgICB1c2VBdXRoLFxyXG4gICAgbW9ja0F1dGhTdGF0ZVxyXG4gIH1cclxufTtcclxuXHJcbi8vIEZvciBkZWZhdWx0IGV4cG9ydCBwYXR0ZXJuc1xyXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xyXG5leHBvcnRzLmRlZmF1bHQgPSB1c2VBdXRoO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzOyAiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7QUFFOUI7QUFDQSxNQUFNQyxhQUFhLEdBQUc7RUFDcEJDLGVBQWUsRUFBRSxJQUFJO0VBQ3JCQyxJQUFJLEVBQUU7SUFDSkMsRUFBRSxFQUFFLEtBQUs7SUFDVEMsUUFBUSxFQUFFLFVBQVU7SUFDcEJDLEtBQUssRUFBRSxrQkFBa0I7SUFDekJDLElBQUksRUFBRTtFQUNSLENBQUM7RUFDREMsS0FBSyxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxNQUFNQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztJQUFFQyxPQUFPLEVBQUU7RUFBSyxDQUFDLENBQUMsQ0FBQztFQUN4REMsTUFBTSxFQUFFTCxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0VBQ2pCSyxRQUFRLEVBQUVOLElBQUksQ0FBQ0MsRUFBRSxDQUFDLE1BQU1DLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDO0lBQUVDLE9BQU8sRUFBRTtFQUFLLENBQUMsQ0FBQyxDQUFDO0VBQzNERyxPQUFPLEVBQUUsS0FBSztFQUNkQyxLQUFLLEVBQUUsSUFBSTtFQUNYQyxLQUFLLEVBQUU7QUFDVCxDQUFDO0FBRUQsTUFBTUMsV0FBVyxHQUFHcEIsS0FBSyxDQUFDcUIsYUFBYSxDQUFDbkIsYUFBYSxDQUFDO0FBQ3REa0IsV0FBVyxDQUFDRSxXQUFXLEdBQUcsYUFBYTs7QUFFdkM7QUFDQSxNQUFNQyxZQUFZLEdBQUdBLENBQUM7RUFBRUMsUUFBUTtFQUFFQyxLQUFLLEdBQUd2QjtBQUFjLENBQUMsS0FBSztFQUM1RCxPQUFPRixLQUFLLENBQUMwQixhQUFhLENBQUNOLFdBQVcsQ0FBQ08sUUFBUSxFQUFFO0lBQUVGO0VBQU0sQ0FBQyxFQUFFRCxRQUFRLENBQUM7QUFDdkUsQ0FBQzs7QUFFRDtBQUNBLE1BQU1JLE9BQU8sR0FBR0EsQ0FBQSxLQUFNNUIsS0FBSyxDQUFDNkIsVUFBVSxDQUFDVCxXQUFXLENBQUM7O0FBRW5EO0FBQ0EsTUFBTVUsT0FBTyxHQUFHO0VBQ2RWLFdBQVc7RUFDWEcsWUFBWTtFQUNaSyxPQUFPO0VBQ1AxQixhQUFhO0VBQ2I2QixPQUFPLEVBQUU7SUFDUFgsV0FBVztJQUNYRyxZQUFZO0lBQ1pLLE9BQU87SUFDUDFCO0VBQ0Y7QUFDRixDQUFDOztBQUVEO0FBQ0E0QixPQUFPLENBQUNFLFVBQVUsR0FBRyxJQUFJO0FBQ3pCRixPQUFPLENBQUNDLE9BQU8sR0FBR0gsT0FBTztBQUV6QkssTUFBTSxDQUFDSCxPQUFPLEdBQUdBLE9BQU8iLCJpZ25vcmVMaXN0IjpbXX0=