{"version":3,"names":["_react","_interopRequireDefault","require","_react2","_Billing","_AuthContext","_jsxRuntime","describe","mockUser","id","name","email","role","mockBillingData","invoices","amount","date","status","insurance","provider","policyNumber","it","render","jsx","AuthContext","Provider","value","user","children","default","data","expect","screen","getByText","toBeInTheDocument","mockHandlePayment","jest","fn","onPayment","fireEvent","click","toHaveBeenCalledWith"],"sources":["Billing.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Billing from '../Billing';\nimport { AuthContext } from '../../contexts/AuthContext';\n\ndescribe('Billing Component', () => {\n  const mockUser = {\n    id: 1,\n    name: 'John Doe',\n    email: 'john@example.com',\n    role: 'PATIENT'\n  };\n\n  const mockBillingData = {\n    invoices: [\n      {\n        id: 1,\n        amount: 100,\n        date: '2024-03-20',\n        status: 'PENDING'\n      }\n    ],\n    insurance: {\n      provider: 'Test Insurance',\n      policyNumber: '12345'\n    }\n  };\n\n  it('renders billing information', () => {\n    render(\n      <AuthContext.Provider value={{ user: mockUser }}>\n        <Billing data={mockBillingData} />\n      </AuthContext.Provider>\n    );\n\n    expect(screen.getByText('Billing Dashboard')).toBeInTheDocument();\n    expect(screen.getByText('Test Insurance')).toBeInTheDocument();\n    expect(screen.getByText('12345')).toBeInTheDocument();\n    expect(screen.getByText('$100')).toBeInTheDocument();\n  });\n\n  it('handles payment submission', () => {\n    const mockHandlePayment = jest.fn();\n\n    render(\n      <AuthContext.Provider value={{ user: mockUser }}>\n        <Billing data={mockBillingData} onPayment={mockHandlePayment} />\n      </AuthContext.Provider>\n    );\n\n    fireEvent.click(screen.getByText('Pay Now'));\n    expect(mockHandlePayment).toHaveBeenCalledWith(1);\n  });\n});"],"mappings":";;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACAA,OAAA;AACA,IAAAE,QAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAAyD,IAAAI,WAAA,GAAAJ,OAAA;AAEzDK,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClC,MAAMC,QAAQ,GAAG;IACfC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE;EACR,CAAC;EAED,MAAMC,eAAe,GAAG;IACtBC,QAAQ,EAAE,CACR;MACEL,EAAE,EAAE,CAAC;MACLM,MAAM,EAAE,GAAG;MACXC,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAE;IACV,CAAC,CACF;IACDC,SAAS,EAAE;MACTC,QAAQ,EAAE,gBAAgB;MAC1BC,YAAY,EAAE;IAChB;EACF,CAAC;EAEDC,EAAE,CAAC,6BAA6B,EAAE,MAAM;IACtC,IAAAC,cAAM,eACJ,IAAAhB,WAAA,CAAAiB,GAAA,EAAClB,YAAA,CAAAmB,WAAW,CAACC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEnB;MAAS,CAAE;MAAAoB,QAAA,eAC9C,IAAAtB,WAAA,CAAAiB,GAAA,EAACnB,QAAA,CAAAyB,OAAO;QAACC,IAAI,EAAEjB;MAAgB,CAAE;IAAC,CACd,CACxB,CAAC;IAEDkB,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACjEH,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IAC9DH,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,OAAO,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACrDH,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,MAAM,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACtD,CAAC,CAAC;EAEFb,EAAE,CAAC,4BAA4B,EAAE,MAAM;IACrC,MAAMc,iBAAiB,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;IAEnC,IAAAf,cAAM,eACJ,IAAAhB,WAAA,CAAAiB,GAAA,EAAClB,YAAA,CAAAmB,WAAW,CAACC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEnB;MAAS,CAAE;MAAAoB,QAAA,eAC9C,IAAAtB,WAAA,CAAAiB,GAAA,EAACnB,QAAA,CAAAyB,OAAO;QAACC,IAAI,EAAEjB,eAAgB;QAACyB,SAAS,EAAEH;MAAkB,CAAE;IAAC,CAC5C,CACxB,CAAC;IAEDI,iBAAS,CAACC,KAAK,CAACR,cAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5CF,MAAM,CAACI,iBAAiB,CAAC,CAACM,oBAAoB,CAAC,CAAC,CAAC;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}