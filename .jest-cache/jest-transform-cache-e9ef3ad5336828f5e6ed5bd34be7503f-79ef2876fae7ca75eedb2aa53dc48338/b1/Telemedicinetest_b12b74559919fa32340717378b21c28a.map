{"version":3,"names":["_getJestObj","mock","jest","fn","on","off","emit","_interopRequireDefault","require","_react","_react2","_Telemedicine","_jsxRuntime","describe","test","render","jsx","default","heading","screen","getByRole","name","expect","toBeInTheDocument","spinner","errorMessage","queryByText","upcomingTab","pastTab","fireEvent","click","toHaveAttribute"],"sources":["Telemedicine.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Telemedicine from './Telemedicine';\n\n// Mock socket.io-client\njest.mock('socket.io-client', () => {\n  return jest.fn(() => ({\n    on: jest.fn(),\n    off: jest.fn(),\n    emit: jest.fn(),\n  }));\n});\n\n// Test suite for Telemedicine component\ndescribe('Telemedicine Component', () => {\n  test('renders Telemedicine component', () => {\n    render(<Telemedicine />);\n    const heading = screen.getByRole('heading', { name: /Telemedicine Consultations/i });\n    expect(heading).toBeInTheDocument();\n  });\n\n  test('displays loading spinner when loading', () => {\n    render(<Telemedicine />);\n    const spinner = screen.getByRole('status');\n    expect(spinner).toBeInTheDocument();\n  });\n\n  test('displays error message when there is an error', () => {\n    render(<Telemedicine />);\n    const errorMessage = screen.queryByText(/User not authenticated/i);\n    expect(errorMessage).toBeInTheDocument();\n  });\n\n  test('allows tab navigation between upcoming and past consultations', () => {\n    render(<Telemedicine />);\n    const upcomingTab = screen.getByRole('button', { name: /Upcoming/i });\n    const pastTab = screen.getByRole('button', { name: /Past/i });\n    fireEvent.click(pastTab);\n    expect(pastTab).toHaveAttribute('aria-selected', 'true');\n    fireEvent.click(upcomingTab);\n    expect(upcomingTab).toHaveAttribute('aria-selected', 'true');\n  });\n}); "],"mappings":";;AAKA;AACAA,WAAA,GAAKC,IAAI,CAAC,kBAAkB,EAAE,MAAM;EAClC,OAAOC,IAAI,CAACC,EAAE,CAAC,OAAO;IACpBC,EAAE,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC;IACbE,GAAG,EAAEH,IAAI,CAACC,EAAE,CAAC,CAAC;IACdG,IAAI,EAAEJ,IAAI,CAACC,EAAE,CAAC;EAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;;AAEF;AAAA,IAAAI,sBAAA,GAAAC,OAAA;AAdA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACAA,OAAA;AACA,IAAAG,aAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA0C,IAAAI,WAAA,GAAAJ,OAAA;AAAA,SAAAR,YAAA;EAAA;IAAAE;EAAA,IAAAM,OAAA;EAAAR,WAAA,GAAAA,CAAA,KAAAE,IAAA;EAAA,OAAAA,IAAA;AAAA;AAY1CW,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvCC,IAAI,CAAC,gCAAgC,EAAE,MAAM;IAC3C,IAAAC,cAAM,eAAC,IAAAH,WAAA,CAAAI,GAAA,EAACL,aAAA,CAAAM,OAAY,IAAE,CAAC,CAAC;IACxB,MAAMC,OAAO,GAAGC,cAAM,CAACC,SAAS,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAA8B,CAAC,CAAC;IACpFC,MAAM,CAACJ,OAAO,CAAC,CAACK,iBAAiB,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFT,IAAI,CAAC,uCAAuC,EAAE,MAAM;IAClD,IAAAC,cAAM,eAAC,IAAAH,WAAA,CAAAI,GAAA,EAACL,aAAA,CAAAM,OAAY,IAAE,CAAC,CAAC;IACxB,MAAMO,OAAO,GAAGL,cAAM,CAACC,SAAS,CAAC,QAAQ,CAAC;IAC1CE,MAAM,CAACE,OAAO,CAAC,CAACD,iBAAiB,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFT,IAAI,CAAC,+CAA+C,EAAE,MAAM;IAC1D,IAAAC,cAAM,eAAC,IAAAH,WAAA,CAAAI,GAAA,EAACL,aAAA,CAAAM,OAAY,IAAE,CAAC,CAAC;IACxB,MAAMQ,YAAY,GAAGN,cAAM,CAACO,WAAW,CAAC,yBAAyB,CAAC;IAClEJ,MAAM,CAACG,YAAY,CAAC,CAACF,iBAAiB,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEFT,IAAI,CAAC,+DAA+D,EAAE,MAAM;IAC1E,IAAAC,cAAM,eAAC,IAAAH,WAAA,CAAAI,GAAA,EAACL,aAAA,CAAAM,OAAY,IAAE,CAAC,CAAC;IACxB,MAAMU,WAAW,GAAGR,cAAM,CAACC,SAAS,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC;IACrE,MAAMO,OAAO,GAAGT,cAAM,CAACC,SAAS,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC7DQ,iBAAS,CAACC,KAAK,CAACF,OAAO,CAAC;IACxBN,MAAM,CAACM,OAAO,CAAC,CAACG,eAAe,CAAC,eAAe,EAAE,MAAM,CAAC;IACxDF,iBAAS,CAACC,KAAK,CAACH,WAAW,CAAC;IAC5BL,MAAM,CAACK,WAAW,CAAC,CAACI,eAAe,CAAC,eAAe,EAAE,MAAM,CAAC;EAC9D,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}