{"version":3,"names":["axios","require","dotenv","config","API_URL","process","env","TEST_TOKEN","TEST_APPOINTMENT_ID","TEST_TRANSCRIPT","testReportsAPI","console","log","createResponse","post","appointmentId","transcript","headers","data","message","reportId","report","_id","listResponse","get","length","detailResponse","medicalInfo","followUpQuestions","error","response","status","then","exit","catch","err"],"sources":["reports.test.js"],"sourcesContent":["const axios = require('axios');\nconst dotenv = require('dotenv');\n\n// Load environment variables\ndotenv.config();\n\n// Test configuration\nconst API_URL = process.env.API_URL || 'http://localhost:5000';\nconst TEST_TOKEN = process.env.TEST_TOKEN; // JWT token for authentication\nconst TEST_APPOINTMENT_ID = process.env.TEST_APPOINTMENT_ID || '60d21b4667d0d8992e610c85'; // Example appointment ID\nconst TEST_TRANSCRIPT = `\nDoctor: Hello, how are you feeling today?\nPatient: I've been having a persistent cough for about two weeks now, and I'm feeling quite tired.\nDoctor: I'm sorry to hear that. Have you had any fever or chills?\nPatient: Yes, I had a low-grade fever for a few days last week, but it's gone now.\n`;\n\n/**\n * This is a manual test script to verify the reports API functionality.\n * To run this test:\n * 1. Make sure your server is running\n * 2. Set the TEST_TOKEN environment variable with a valid JWT token\n * 3. Set the TEST_APPOINTMENT_ID with a valid appointment ID (optional)\n * 4. Run: node tests/reports.test.js\n */\n\nasync function testReportsAPI() {\n  try {\n    console.log('Testing Reports API...');\n    \n    // Test 1: Generate a new report\n    console.log('\\n1. Testing POST /api/reports');\n    const createResponse = await axios.post(`${API_URL}/api/reports`, {\n      appointmentId: TEST_APPOINTMENT_ID,\n      transcript: TEST_TRANSCRIPT\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${TEST_TOKEN}`\n      }\n    });\n    \n    console.log('Report created successfully:', createResponse.data.message);\n    const reportId = createResponse.data.report._id;\n    console.log('Report ID:', reportId);\n    \n    // Test 2: Fetch reports for an appointment\n    console.log('\\n2. Testing GET /api/reports/:appointmentId');\n    const listResponse = await axios.get(`${API_URL}/api/reports/${TEST_APPOINTMENT_ID}`, {\n      headers: {\n        'Authorization': `Bearer ${TEST_TOKEN}`\n      }\n    });\n    \n    console.log('Reports fetched successfully. Count:', listResponse.data.length);\n    \n    // Test 3: Fetch a specific report\n    console.log('\\n3. Testing GET /api/reports/detail/:reportId');\n    const detailResponse = await axios.get(`${API_URL}/api/reports/detail/${reportId}`, {\n      headers: {\n        'Authorization': `Bearer ${TEST_TOKEN}`\n      }\n    });\n    \n    console.log('Report details fetched successfully:');\n    console.log('- Report ID:', detailResponse.data._id);\n    console.log('- Report Text Length:', detailResponse.data.report.length);\n    console.log('- Medical Info:', detailResponse.data.medicalInfo ? 'Present' : 'Not present');\n    console.log('- Follow-up Questions:', detailResponse.data.followUpQuestions ? 'Present' : 'Not present');\n    \n    console.log('\\nAll tests completed successfully!');\n  } catch (error) {\n    console.error('Test failed:', error.message);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n    }\n  }\n}\n\n// Run the tests\ntestReportsAPI()\n  .then(() => {\n    console.log('Tests completed.');\n    process.exit(0);\n  })\n  .catch(err => {\n    console.error('Test script error:', err);\n    process.exit(1);\n  }); "],"mappings":"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","ignoreList":[]}