{"version":3,"names":["_getJestObj","mock","jest","requireActual","useSocket","socket","on","fn","off","emit","joinTelemedicineSession","leaveTelemedicineSession","_interopRequireDefault","require","_react","_react2","_reactRouterDom","_AuthContext","_SocketContext","_Telemedicine","_axios","_jsxRuntime","mockGetUserMedia","getTracks","enabled","stop","Object","defineProperty","global","navigator","value","getUserMedia","RTCPeerConnection","mockImplementation","addTrack","createOffer","mockResolvedValue","sdp","setLocalDescription","setRemoteDescription","addIceCandidate","close","ontrack","onicecandidate","describe","mockSession","id","doctorId","patientId","scheduledTime","Date","toISOString","status","renderComponent","role","mockUser","render","jsx","MemoryRouter","initialEntries","children","AuthProvider","user","hasRole","SocketProvider","Routes","Route","path","element","default","beforeEach","clearAllMocks","axios","get","data","it","expect","screen","getByText","toBeInTheDocument","waitFor","toHaveBeenCalledWith","startCallButton","findByText","fireEvent","click","video","audio","toHaveBeenCalled","audioButton","getByRole","name","videoButton","mockRejectedValueOnce","Error","unmount"],"sources":["Telemedicine.test.js"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { MemoryRouter, Route, Routes } from 'react-router-dom';\nimport { AuthProvider } from '../../context/AuthContext';\nimport { SocketProvider } from '../../context/SocketContext';\nimport Telemedicine from '../../pages/Telemedicine';\nimport axios from 'axios';\n\n// Mock the modules\njest.mock('axios');\njest.mock('../../context/SocketContext', () => ({\n  ...jest.requireActual('../../context/SocketContext'),\n  useSocket: () => ({\n    socket: {\n      on: jest.fn(),\n      off: jest.fn(),\n      emit: jest.fn()\n    },\n    joinTelemedicineSession: jest.fn(),\n    leaveTelemedicineSession: jest.fn()\n  })\n}));\n\n// Mock getUserMedia\nconst mockGetUserMedia = jest.fn(async () => ({\n  getTracks: () => [{\n    enabled: true,\n    stop: jest.fn()\n  }]\n}));\n\nObject.defineProperty(global.navigator, 'mediaDevices', {\n  value: {\n    getUserMedia: mockGetUserMedia\n  }\n});\n\n// Mock RTCPeerConnection\nglobal.RTCPeerConnection = jest.fn().mockImplementation(() => ({\n  addTrack: jest.fn(),\n  createOffer: jest.fn().mockResolvedValue({ sdp: 'test-sdp' }),\n  setLocalDescription: jest.fn(),\n  setRemoteDescription: jest.fn(),\n  addIceCandidate: jest.fn(),\n  close: jest.fn(),\n  ontrack: null,\n  onicecandidate: null\n}));\n\ndescribe('Telemedicine Component', () => {\n  const mockSession = {\n    id: 'test-session',\n    doctorId: 'doctor-1',\n    patientId: 'patient-1',\n    scheduledTime: new Date().toISOString(),\n    status: 'scheduled'\n  };\n\n  const renderComponent = (role = 'doctor') => {\n    const mockUser = {\n      id: 'user-1',\n      role: role\n    };\n\n    return render(\n      <MemoryRouter initialEntries={['/telemedicine/test-session']}>\n        <AuthProvider value={{ user: mockUser, hasRole: () => true }}>\n          <SocketProvider>\n            <Routes>\n              <Route path=\"/telemedicine/:sessionId\" element={<Telemedicine />} />\n            </Routes>\n          </SocketProvider>\n        </AuthProvider>\n      </MemoryRouter>\n    );\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    axios.get.mockResolvedValue({ data: mockSession });\n  });\n\n  it('renders access denied for unauthorized users', () => {\n    const mockUser = {\n      id: 'user-1',\n      role: 'staff'\n    };\n\n    render(\n      <MemoryRouter>\n        <AuthProvider value={{ user: mockUser, hasRole: () => false }}>\n          <SocketProvider>\n            <Telemedicine />\n          </SocketProvider>\n        </AuthProvider>\n      </MemoryRouter>\n    );\n\n    expect(screen.getByText('Access Denied')).toBeInTheDocument();\n  });\n\n  it('loads and displays telemedicine session', async () => {\n    renderComponent();\n\n    await waitFor(() => {\n      expect(axios.get).toHaveBeenCalledWith('/api/telemedicine/sessions/test-session');\n    });\n\n    expect(screen.getByText(/Telemedicine Session/)).toBeInTheDocument();\n  });\n\n  it('handles media stream initialization', async () => {\n    renderComponent();\n\n    const startCallButton = await screen.findByText('Start Call');\n    fireEvent.click(startCallButton);\n\n    await waitFor(() => {\n      expect(mockGetUserMedia).toHaveBeenCalledWith({\n        video: true,\n        audio: true\n      });\n    });\n  });\n\n  it('toggles audio and video', async () => {\n    renderComponent();\n\n    // Start the call\n    const startCallButton = await screen.findByText('Start Call');\n    fireEvent.click(startCallButton);\n\n    await waitFor(() => {\n      expect(mockGetUserMedia).toHaveBeenCalled();\n    });\n\n    // Toggle audio\n    const audioButton = screen.getByRole('button', { name: /audio/i });\n    fireEvent.click(audioButton);\n\n    // Toggle video\n    const videoButton = screen.getByRole('button', { name: /video/i });\n    fireEvent.click(videoButton);\n  });\n\n  it('handles error states', async () => {\n    axios.get.mockRejectedValueOnce(new Error('Failed to load session'));\n    renderComponent();\n\n    await waitFor(() => {\n      expect(screen.getByText('Error')).toBeInTheDocument();\n      expect(screen.getByText('Failed to load session')).toBeInTheDocument();\n    });\n  });\n\n  it('cleans up resources on unmount', async () => {\n    const { unmount } = renderComponent();\n\n    // Start the call\n    const startCallButton = await screen.findByText('Start Call');\n    fireEvent.click(startCallButton);\n\n    await waitFor(() => {\n      expect(mockGetUserMedia).toHaveBeenCalled();\n    });\n\n    unmount();\n\n    // Verify cleanup\n    expect(mockGetUserMedia().getTracks()[0].stop).toHaveBeenCalled();\n  });\n\n  it('renders the Telemedicine page', () => {\n    render(<Telemedicine />);\n    expect(screen.getByText('Telemedicine')).toBeInTheDocument();\n    expect(screen.getByText('Welcome to the Telemedicine page.')).toBeInTheDocument();\n  });\n}); "],"mappings":";;AAQA;AACAA,WAAA,GAAKC,IAAI,CAAC,OAAO,CAAC;AAClBD,WAAA,GAAKC,IAAI,CAAC,6BAA6B,EAAE,OAAO;EAC9C,GAAGC,IAAI,CAACC,aAAa,CAAC,6BAA6B,CAAC;EACpDC,SAAS,EAAEA,CAAA,MAAO;IAChBC,MAAM,EAAE;MACNC,EAAE,EAAEJ,IAAI,CAACK,EAAE,CAAC,CAAC;MACbC,GAAG,EAAEN,IAAI,CAACK,EAAE,CAAC,CAAC;MACdE,IAAI,EAAEP,IAAI,CAACK,EAAE,CAAC;IAChB,CAAC;IACDG,uBAAuB,EAAER,IAAI,CAACK,EAAE,CAAC,CAAC;IAClCI,wBAAwB,EAAET,IAAI,CAACK,EAAE,CAAC;EACpC,CAAC;AACH,CAAC,CAAC,CAAC;;AAEH;AAAA,IAAAK,sBAAA,GAAAC,OAAA;AAvBA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AACA,IAAAI,YAAA,GAAAJ,OAAA;AACA,IAAAK,cAAA,GAAAL,OAAA;AACA,IAAAM,aAAA,GAAAP,sBAAA,CAAAC,OAAA;AACA,IAAAO,MAAA,GAAAR,sBAAA,CAAAC,OAAA;AAA0B,IAAAQ,WAAA,GAAAR,OAAA;AAAA,SAAAb,YAAA;EAAA;IAAAE;EAAA,IAAAW,OAAA;EAAAb,WAAA,GAAAA,CAAA,KAAAE,IAAA;EAAA,OAAAA,IAAA;AAAA;AAkB1B,MAAMoB,gBAAgB,GAAGpB,IAAI,CAACK,EAAE,CAAC,aAAa;EAC5CgB,SAAS,EAAEA,CAAA,KAAM,CAAC;IAChBC,OAAO,EAAE,IAAI;IACbC,IAAI,EAAEvB,IAAI,CAACK,EAAE,CAAC;EAChB,CAAC;AACH,CAAC,CAAC,CAAC;AAEHmB,MAAM,CAACC,cAAc,CAACC,MAAM,CAACC,SAAS,EAAE,cAAc,EAAE;EACtDC,KAAK,EAAE;IACLC,YAAY,EAAET;EAChB;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACI,iBAAiB,GAAG9B,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC0B,kBAAkB,CAAC,OAAO;EAC7DC,QAAQ,EAAEhC,IAAI,CAACK,EAAE,CAAC,CAAC;EACnB4B,WAAW,EAAEjC,IAAI,CAACK,EAAE,CAAC,CAAC,CAAC6B,iBAAiB,CAAC;IAAEC,GAAG,EAAE;EAAW,CAAC,CAAC;EAC7DC,mBAAmB,EAAEpC,IAAI,CAACK,EAAE,CAAC,CAAC;EAC9BgC,oBAAoB,EAAErC,IAAI,CAACK,EAAE,CAAC,CAAC;EAC/BiC,eAAe,EAAEtC,IAAI,CAACK,EAAE,CAAC,CAAC;EAC1BkC,KAAK,EAAEvC,IAAI,CAACK,EAAE,CAAC,CAAC;EAChBmC,OAAO,EAAE,IAAI;EACbC,cAAc,EAAE;AAClB,CAAC,CAAC,CAAC;AAEHC,QAAQ,CAAC,wBAAwB,EAAE,MAAM;EACvC,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAE,cAAc;IAClBC,QAAQ,EAAE,UAAU;IACpBC,SAAS,EAAE,WAAW;IACtBC,aAAa,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACvCC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,GAAG,QAAQ,KAAK;IAC3C,MAAMC,QAAQ,GAAG;MACfT,EAAE,EAAE,QAAQ;MACZQ,IAAI,EAAEA;IACR,CAAC;IAED,OAAO,IAAAE,cAAM,eACX,IAAAnC,WAAA,CAAAoC,GAAA,EAACzC,eAAA,CAAA0C,YAAY;MAACC,cAAc,EAAE,CAAC,4BAA4B,CAAE;MAAAC,QAAA,eAC3D,IAAAvC,WAAA,CAAAoC,GAAA,EAACxC,YAAA,CAAA4C,YAAY;QAAC/B,KAAK,EAAE;UAAEgC,IAAI,EAAEP,QAAQ;UAAEQ,OAAO,EAAEA,CAAA,KAAM;QAAK,CAAE;QAAAH,QAAA,eAC3D,IAAAvC,WAAA,CAAAoC,GAAA,EAACvC,cAAA,CAAA8C,cAAc;UAAAJ,QAAA,eACb,IAAAvC,WAAA,CAAAoC,GAAA,EAACzC,eAAA,CAAAiD,MAAM;YAAAL,QAAA,eACL,IAAAvC,WAAA,CAAAoC,GAAA,EAACzC,eAAA,CAAAkD,KAAK;cAACC,IAAI,EAAC,0BAA0B;cAACC,OAAO,eAAE,IAAA/C,WAAA,CAAAoC,GAAA,EAACtC,aAAA,CAAAkD,OAAY,IAAE;YAAE,CAAE;UAAC,CAC9D;QAAC,CACK;MAAC,CACL;IAAC,CACH,CAChB,CAAC;EACH,CAAC;EAEDC,UAAU,CAAC,MAAM;IACfpE,IAAI,CAACqE,aAAa,CAAC,CAAC;IACpBC,cAAK,CAACC,GAAG,CAACrC,iBAAiB,CAAC;MAAEsC,IAAI,EAAE7B;IAAY,CAAC,CAAC;EACpD,CAAC,CAAC;EAEF8B,EAAE,CAAC,8CAA8C,EAAE,MAAM;IACvD,MAAMpB,QAAQ,GAAG;MACfT,EAAE,EAAE,QAAQ;MACZQ,IAAI,EAAE;IACR,CAAC;IAED,IAAAE,cAAM,eACJ,IAAAnC,WAAA,CAAAoC,GAAA,EAACzC,eAAA,CAAA0C,YAAY;MAAAE,QAAA,eACX,IAAAvC,WAAA,CAAAoC,GAAA,EAACxC,YAAA,CAAA4C,YAAY;QAAC/B,KAAK,EAAE;UAAEgC,IAAI,EAAEP,QAAQ;UAAEQ,OAAO,EAAEA,CAAA,KAAM;QAAM,CAAE;QAAAH,QAAA,eAC5D,IAAAvC,WAAA,CAAAoC,GAAA,EAACvC,cAAA,CAAA8C,cAAc;UAAAJ,QAAA,eACb,IAAAvC,WAAA,CAAAoC,GAAA,EAACtC,aAAA,CAAAkD,OAAY,IAAE;QAAC,CACF;MAAC,CACL;IAAC,CACH,CAChB,CAAC;IAEDO,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,eAAe,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EAC/D,CAAC,CAAC;EAEFJ,EAAE,CAAC,yCAAyC,EAAE,YAAY;IACxDtB,eAAe,CAAC,CAAC;IAEjB,MAAM,IAAA2B,eAAO,EAAC,MAAM;MAClBJ,MAAM,CAACJ,cAAK,CAACC,GAAG,CAAC,CAACQ,oBAAoB,CAAC,yCAAyC,CAAC;IACnF,CAAC,CAAC;IAEFL,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACtE,CAAC,CAAC;EAEFJ,EAAE,CAAC,qCAAqC,EAAE,YAAY;IACpDtB,eAAe,CAAC,CAAC;IAEjB,MAAM6B,eAAe,GAAG,MAAML,cAAM,CAACM,UAAU,CAAC,YAAY,CAAC;IAC7DC,iBAAS,CAACC,KAAK,CAACH,eAAe,CAAC;IAEhC,MAAM,IAAAF,eAAO,EAAC,MAAM;MAClBJ,MAAM,CAACtD,gBAAgB,CAAC,CAAC2D,oBAAoB,CAAC;QAC5CK,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFZ,EAAE,CAAC,yBAAyB,EAAE,YAAY;IACxCtB,eAAe,CAAC,CAAC;;IAEjB;IACA,MAAM6B,eAAe,GAAG,MAAML,cAAM,CAACM,UAAU,CAAC,YAAY,CAAC;IAC7DC,iBAAS,CAACC,KAAK,CAACH,eAAe,CAAC;IAEhC,MAAM,IAAAF,eAAO,EAAC,MAAM;MAClBJ,MAAM,CAACtD,gBAAgB,CAAC,CAACkE,gBAAgB,CAAC,CAAC;IAC7C,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAGZ,cAAM,CAACa,SAAS,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC,CAAC;IAClEP,iBAAS,CAACC,KAAK,CAACI,WAAW,CAAC;;IAE5B;IACA,MAAMG,WAAW,GAAGf,cAAM,CAACa,SAAS,CAAC,QAAQ,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC,CAAC;IAClEP,iBAAS,CAACC,KAAK,CAACO,WAAW,CAAC;EAC9B,CAAC,CAAC;EAEFjB,EAAE,CAAC,sBAAsB,EAAE,YAAY;IACrCH,cAAK,CAACC,GAAG,CAACoB,qBAAqB,CAAC,IAAIC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IACpEzC,eAAe,CAAC,CAAC;IAEjB,MAAM,IAAA2B,eAAO,EAAC,MAAM;MAClBJ,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,OAAO,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;MACrDH,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC/C,MAAM;MAAEoB;IAAQ,CAAC,GAAG1C,eAAe,CAAC,CAAC;;IAErC;IACA,MAAM6B,eAAe,GAAG,MAAML,cAAM,CAACM,UAAU,CAAC,YAAY,CAAC;IAC7DC,iBAAS,CAACC,KAAK,CAACH,eAAe,CAAC;IAEhC,MAAM,IAAAF,eAAO,EAAC,MAAM;MAClBJ,MAAM,CAACtD,gBAAgB,CAAC,CAACkE,gBAAgB,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEFO,OAAO,CAAC,CAAC;;IAET;IACAnB,MAAM,CAACtD,gBAAgB,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC+D,gBAAgB,CAAC,CAAC;EACnE,CAAC,CAAC;EAEFb,EAAE,CAAC,+BAA+B,EAAE,MAAM;IACxC,IAAAnB,cAAM,eAAC,IAAAnC,WAAA,CAAAoC,GAAA,EAACtC,aAAA,CAAAkD,OAAY,IAAE,CAAC,CAAC;IACxBO,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,cAAc,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;IAC5DH,MAAM,CAACC,cAAM,CAACC,SAAS,CAAC,mCAAmC,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC;EACnF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}