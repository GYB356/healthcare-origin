6e96208e652d6898db49aa3e9e330962
const React = require('react');

// Mock SocketContext
const mockSocketState = {
  socket: {
    on: jest.fn(),
    emit: jest.fn(),
    connect: jest.fn(),
    disconnect: jest.fn()
  },
  isConnected: true,
  connect: jest.fn(),
  disconnect: jest.fn()
};
const SocketContext = React.createContext(mockSocketState);
SocketContext.displayName = 'SocketContext';

// Socket Provider component
const SocketProvider = ({
  children,
  value = mockSocketState
}) => {
  return React.createElement(SocketContext.Provider, {
    value
  }, children);
};

// Custom hook for consuming Socket Context
const useSocket = () => React.useContext(SocketContext);
module.exports = {
  SocketContext,
  SocketProvider,
  useSocket,
  mockSocketState
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJtb2NrU29ja2V0U3RhdGUiLCJzb2NrZXQiLCJvbiIsImplc3QiLCJmbiIsImVtaXQiLCJjb25uZWN0IiwiZGlzY29ubmVjdCIsImlzQ29ubmVjdGVkIiwiU29ja2V0Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJkaXNwbGF5TmFtZSIsIlNvY2tldFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ2YWx1ZSIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsInVzZVNvY2tldCIsInVzZUNvbnRleHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsic29ja2V0LWNvbnRleHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xyXG5cclxuLy8gTW9jayBTb2NrZXRDb250ZXh0XHJcbmNvbnN0IG1vY2tTb2NrZXRTdGF0ZSA9IHtcclxuICBzb2NrZXQ6IHtcclxuICAgIG9uOiBqZXN0LmZuKCksXHJcbiAgICBlbWl0OiBqZXN0LmZuKCksXHJcbiAgICBjb25uZWN0OiBqZXN0LmZuKCksXHJcbiAgICBkaXNjb25uZWN0OiBqZXN0LmZuKClcclxuICB9LFxyXG4gIGlzQ29ubmVjdGVkOiB0cnVlLFxyXG4gIGNvbm5lY3Q6IGplc3QuZm4oKSxcclxuICBkaXNjb25uZWN0OiBqZXN0LmZuKClcclxufTtcclxuXHJcbmNvbnN0IFNvY2tldENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG1vY2tTb2NrZXRTdGF0ZSk7XHJcblNvY2tldENvbnRleHQuZGlzcGxheU5hbWUgPSAnU29ja2V0Q29udGV4dCc7XHJcblxyXG4vLyBTb2NrZXQgUHJvdmlkZXIgY29tcG9uZW50XHJcbmNvbnN0IFNvY2tldFByb3ZpZGVyID0gKHsgY2hpbGRyZW4sIHZhbHVlID0gbW9ja1NvY2tldFN0YXRlIH0pID0+IHtcclxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTb2NrZXRDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlIH0sIGNoaWxkcmVuKTtcclxufTtcclxuXHJcbi8vIEN1c3RvbSBob29rIGZvciBjb25zdW1pbmcgU29ja2V0IENvbnRleHRcclxuY29uc3QgdXNlU29ja2V0ID0gKCkgPT4gUmVhY3QudXNlQ29udGV4dChTb2NrZXRDb250ZXh0KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIFNvY2tldENvbnRleHQsXHJcbiAgU29ja2V0UHJvdmlkZXIsXHJcbiAgdXNlU29ja2V0LFxyXG4gIG1vY2tTb2NrZXRTdGF0ZVxyXG59OyAiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7QUFFOUI7QUFDQSxNQUFNQyxlQUFlLEdBQUc7RUFDdEJDLE1BQU0sRUFBRTtJQUNOQyxFQUFFLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7SUFDYkMsSUFBSSxFQUFFRixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0lBQ2ZFLE9BQU8sRUFBRUgsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUNsQkcsVUFBVSxFQUFFSixJQUFJLENBQUNDLEVBQUUsQ0FBQztFQUN0QixDQUFDO0VBQ0RJLFdBQVcsRUFBRSxJQUFJO0VBQ2pCRixPQUFPLEVBQUVILElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFDbEJHLFVBQVUsRUFBRUosSUFBSSxDQUFDQyxFQUFFLENBQUM7QUFDdEIsQ0FBQztBQUVELE1BQU1LLGFBQWEsR0FBR1gsS0FBSyxDQUFDWSxhQUFhLENBQUNWLGVBQWUsQ0FBQztBQUMxRFMsYUFBYSxDQUFDRSxXQUFXLEdBQUcsZUFBZTs7QUFFM0M7QUFDQSxNQUFNQyxjQUFjLEdBQUdBLENBQUM7RUFBRUMsUUFBUTtFQUFFQyxLQUFLLEdBQUdkO0FBQWdCLENBQUMsS0FBSztFQUNoRSxPQUFPRixLQUFLLENBQUNpQixhQUFhLENBQUNOLGFBQWEsQ0FBQ08sUUFBUSxFQUFFO0lBQUVGO0VBQU0sQ0FBQyxFQUFFRCxRQUFRLENBQUM7QUFDekUsQ0FBQzs7QUFFRDtBQUNBLE1BQU1JLFNBQVMsR0FBR0EsQ0FBQSxLQUFNbkIsS0FBSyxDQUFDb0IsVUFBVSxDQUFDVCxhQUFhLENBQUM7QUFFdkRVLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2ZYLGFBQWE7RUFDYkcsY0FBYztFQUNkSyxTQUFTO0VBQ1RqQjtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=