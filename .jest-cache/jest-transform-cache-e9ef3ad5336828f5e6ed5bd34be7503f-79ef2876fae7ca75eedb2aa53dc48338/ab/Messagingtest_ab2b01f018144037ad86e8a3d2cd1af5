fb2389ee5facac011d5bce93c1588093
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _AuthContext = require("../../context/AuthContext");
var _Messaging = _interopRequireDefault(require("../../pages/Messaging"));
var _jsxRuntime = require("react/jsx-runtime");
const renderWithAuth = (ui, {
  providerProps,
  ...renderOptions
}) => {
  return (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_AuthContext.AuthContext.Provider, {
    ...providerProps,
    children: ui
  }), renderOptions);
};
describe('Messaging Component', () => {
  test('renders Messaging component for authorized users', () => {
    const providerProps = {
      value: {
        user: {
          role: 'patient'
        }
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_Messaging.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Messaging/i)).toBeInTheDocument();
    expect(_react2.screen.getByText(/Secure communication with healthcare providers/i)).toBeInTheDocument();
  });
  test('denies access for unauthorized users', () => {
    const providerProps = {
      value: {
        user: null
      }
    };
    renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_Messaging.default, {}), {
      providerProps
    });
    expect(_react2.screen.getByText(/Access Denied/i)).toBeInTheDocument();
  });
  test('allows access for authenticated users', () => {
    const roles = ['patient', 'doctor', 'nurse', 'admin'];
    roles.forEach(role => {
      const providerProps = {
        value: {
          user: {
            role
          }
        }
      };
      const {
        unmount
      } = renderWithAuth(/*#__PURE__*/(0, _jsxRuntime.jsx)(_Messaging.default, {}), {
        providerProps
      });
      expect(_react2.screen.getByText(/Messaging/i)).toBeInTheDocument();
      unmount();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfQXV0aENvbnRleHQiLCJfTWVzc2FnaW5nIiwiX2pzeFJ1bnRpbWUiLCJyZW5kZXJXaXRoQXV0aCIsInVpIiwicHJvdmlkZXJQcm9wcyIsInJlbmRlck9wdGlvbnMiLCJyZW5kZXIiLCJqc3giLCJBdXRoQ29udGV4dCIsIlByb3ZpZGVyIiwiY2hpbGRyZW4iLCJkZXNjcmliZSIsInRlc3QiLCJ2YWx1ZSIsInVzZXIiLCJyb2xlIiwiZGVmYXVsdCIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50Iiwicm9sZXMiLCJmb3JFYWNoIiwidW5tb3VudCJdLCJzb3VyY2VzIjpbIk1lc3NhZ2luZy50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IHsgQXV0aENvbnRleHQgfSBmcm9tICcuLi8uLi9jb250ZXh0L0F1dGhDb250ZXh0JztcbmltcG9ydCBNZXNzYWdpbmcgZnJvbSAnLi4vLi4vcGFnZXMvTWVzc2FnaW5nJztcblxuY29uc3QgcmVuZGVyV2l0aEF1dGggPSAodWksIHsgcHJvdmlkZXJQcm9wcywgLi4ucmVuZGVyT3B0aW9ucyB9KSA9PiB7XG4gICAgcmV0dXJuIHJlbmRlcihcbiAgICAgICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyIHsuLi5wcm92aWRlclByb3BzfT57dWl9PC9BdXRoQ29udGV4dC5Qcm92aWRlcj4sXG4gICAgICAgIHJlbmRlck9wdGlvbnNcbiAgICApO1xufTtcblxuZGVzY3JpYmUoJ01lc3NhZ2luZyBDb21wb25lbnQnLCAoKSA9PiB7XG4gICAgdGVzdCgncmVuZGVycyBNZXNzYWdpbmcgY29tcG9uZW50IGZvciBhdXRob3JpemVkIHVzZXJzJywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwcm92aWRlclByb3BzID0ge1xuICAgICAgICAgICAgdmFsdWU6IHsgdXNlcjogeyByb2xlOiAncGF0aWVudCcgfSB9LFxuICAgICAgICB9O1xuICAgICAgICByZW5kZXJXaXRoQXV0aCg8TWVzc2FnaW5nIC8+LCB7IHByb3ZpZGVyUHJvcHMgfSk7XG5cbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL01lc3NhZ2luZy9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL1NlY3VyZSBjb21tdW5pY2F0aW9uIHdpdGggaGVhbHRoY2FyZSBwcm92aWRlcnMvaSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgfSk7XG5cbiAgICB0ZXN0KCdkZW5pZXMgYWNjZXNzIGZvciB1bmF1dGhvcml6ZWQgdXNlcnMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyUHJvcHMgPSB7XG4gICAgICAgICAgICB2YWx1ZTogeyB1c2VyOiBudWxsIH0sXG4gICAgICAgIH07XG4gICAgICAgIHJlbmRlcldpdGhBdXRoKDxNZXNzYWdpbmcgLz4sIHsgcHJvdmlkZXJQcm9wcyB9KTtcblxuICAgICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgvQWNjZXNzIERlbmllZC9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcblxuICAgIHRlc3QoJ2FsbG93cyBhY2Nlc3MgZm9yIGF1dGhlbnRpY2F0ZWQgdXNlcnMnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJvbGVzID0gWydwYXRpZW50JywgJ2RvY3RvcicsICdudXJzZScsICdhZG1pbiddO1xuICAgICAgICByb2xlcy5mb3JFYWNoKHJvbGUgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXJQcm9wcyA9IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogeyB1c2VyOiB7IHJvbGUgfSB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHsgdW5tb3VudCB9ID0gcmVuZGVyV2l0aEF1dGgoPE1lc3NhZ2luZyAvPiwgeyBwcm92aWRlclByb3BzIH0pO1xuICAgICAgICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL01lc3NhZ2luZy9pKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICAgICAgICAgIHVubW91bnQoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTsgIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxVQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBOEMsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBRTlDLE1BQU1LLGNBQWMsR0FBR0EsQ0FBQ0MsRUFBRSxFQUFFO0VBQUVDLGFBQWE7RUFBRSxHQUFHQztBQUFjLENBQUMsS0FBSztFQUNoRSxPQUFPLElBQUFDLGNBQU0sZUFDVCxJQUFBTCxXQUFBLENBQUFNLEdBQUEsRUFBQ1IsWUFBQSxDQUFBUyxXQUFXLENBQUNDLFFBQVE7SUFBQSxHQUFLTCxhQUFhO0lBQUFNLFFBQUEsRUFBR1A7RUFBRSxDQUF1QixDQUFDLEVBQ3BFRSxhQUNKLENBQUM7QUFDTCxDQUFDO0FBRURNLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxNQUFNO0VBQ2xDQyxJQUFJLENBQUMsa0RBQWtELEVBQUUsTUFBTTtJQUMzRCxNQUFNUixhQUFhLEdBQUc7TUFDbEJTLEtBQUssRUFBRTtRQUFFQyxJQUFJLEVBQUU7VUFBRUMsSUFBSSxFQUFFO1FBQVU7TUFBRTtJQUN2QyxDQUFDO0lBQ0RiLGNBQWMsY0FBQyxJQUFBRCxXQUFBLENBQUFNLEdBQUEsRUFBQ1AsVUFBQSxDQUFBZ0IsT0FBUyxJQUFFLENBQUMsRUFBRTtNQUFFWjtJQUFjLENBQUMsQ0FBQztJQUVoRGEsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzFESCxNQUFNLENBQUNDLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDLGlEQUFpRCxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztFQUNuRyxDQUFDLENBQUM7RUFFRlIsSUFBSSxDQUFDLHNDQUFzQyxFQUFFLE1BQU07SUFDL0MsTUFBTVIsYUFBYSxHQUFHO01BQ2xCUyxLQUFLLEVBQUU7UUFBRUMsSUFBSSxFQUFFO01BQUs7SUFDeEIsQ0FBQztJQUNEWixjQUFjLGNBQUMsSUFBQUQsV0FBQSxDQUFBTSxHQUFBLEVBQUNQLFVBQUEsQ0FBQWdCLE9BQVMsSUFBRSxDQUFDLEVBQUU7TUFBRVo7SUFBYyxDQUFDLENBQUM7SUFFaERhLE1BQU0sQ0FBQ0MsY0FBTSxDQUFDQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO0VBQ2xFLENBQUMsQ0FBQztFQUVGUixJQUFJLENBQUMsdUNBQXVDLEVBQUUsTUFBTTtJQUNoRCxNQUFNUyxLQUFLLEdBQUcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUM7SUFDckRBLEtBQUssQ0FBQ0MsT0FBTyxDQUFDUCxJQUFJLElBQUk7TUFDbEIsTUFBTVgsYUFBYSxHQUFHO1FBQ2xCUyxLQUFLLEVBQUU7VUFBRUMsSUFBSSxFQUFFO1lBQUVDO1VBQUs7UUFBRTtNQUM1QixDQUFDO01BQ0QsTUFBTTtRQUFFUTtNQUFRLENBQUMsR0FBR3JCLGNBQWMsY0FBQyxJQUFBRCxXQUFBLENBQUFNLEdBQUEsRUFBQ1AsVUFBQSxDQUFBZ0IsT0FBUyxJQUFFLENBQUMsRUFBRTtRQUFFWjtNQUFjLENBQUMsQ0FBQztNQUNwRWEsTUFBTSxDQUFDQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDQyxpQkFBaUIsQ0FBQyxDQUFDO01BQzFERyxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==